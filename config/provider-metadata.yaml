name: dynatrace-oss/dynatrace
resources:
    calculated_mobile_metric Resource - terraform-provider-dynatrace:
        subCategory: Mobile & Custom Applications
        description: The resource
        name: calculated_mobile_metric Resource - terraform-provider-dynatrace
        title: calculated_mobile_metric Resource - terraform-provider-dynatrace
        argumentDocs:
            action_duration_from_milliseconds: (Number) Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
            action_duration_to_milliseconds: (Number) Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
            apdex: '(String) Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]'
            app_identifier: (String) The Dynatrace entity ID of the application to which the metric belongs.
            app_version: (String) Only actions coming from this app version are included in the metric calculation.
            carrier: (String) Only actions coming from this carrier type are included in the metric calculation.
            city: (String) Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.
            connection_type: '(String) Only actions coming from this connection type are included in the metric calculation. Possible values: [ LAN, MOBILE, OFFLINE, UNKNOWN, WIFI ]'
            continent: (String) Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.
            country: (String) Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.
            description: (String) Descriptor of a calculated mobile/custom app metric.
            device: (String) Only actions coming from this app version are included in the metric calculation.
            dimension: (Block List) A dimensions for the metric usage (see below for nested schema)
            dimensions: (Block List) Parameters of a definition of a calculated mobile/custom app metric. (see below for nested schema)
            enabled: (Boolean) The metric is enabled (true) or disabled (false)
            has_http_error: '(Boolean) The request error status of the actions to be included in the metric calculation: true or false'
            has_reported_error: '(Boolean) The error status of the actions to be included in the metric calculation: true or false'
            id: (String) The ID of this resource.
            isp: (String) Only actions coming from this internet service provider are included in the metric calculation.
            manufacturer: (String) Only actions coming from devices of this manufacturer are included in the metric calculation.
            metric_key: (String) The unique key of the calculated mobile/custom app metric.
            metric_type: '(String) The type of the metric. Possible values: [ REPORTED_ERROR_COUNT, USER_ACTION_DURATION, WEB_REQUEST_COUNT, WEB_REQUEST_ERROR_COUNT ]'
            name: (String) The displayed name of the metric.
            network_technology: (String) Filter by network technology
            orientation: '(String) Only actions coming from devices with this display orientation are included in the metric calculation. Possible values: [ LANDSCAPE, PORTRAIT, UNKNOWN ]'
            os_family: (String) Only actions coming from this OS family are included in the metric calculation.
            os_version: (String) Only actions coming from this OS version are included in the metric calculation.
            region: (String) Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.
            resolution: '(String) Only actions coming from devices with this display resolution are included in the metric calculation. Possible values: [ CGA, DCI2K, DCI4K, DVGA, FHD, FWVGA, FWXGA, GHDPlus, HD, HQVGA, HQVGA2, HSXGA, HUXGA, HVGA, HXGA, NTSC, PAL, QHD, QQVGA, QSXGA, QUXGA, QVGA, QWXGA, QXGA, SVGA, SXGA, SXGAMinus, SXGAPlus, UGA, UHD16K, UHD4K, UHD8K, UHDPlus, UNKNOWN, UWQHD, UXGA, VGA, WHSXGA, WHUXGA, WHXGA, WQSXGA, WQUXGA, WQVGA, WQVGA2, WQVGA3, WQXGA, WQXGA2, WSVGA, WSVGA2, WSXGA, WSXGAPlus, WUXGA, WVGA, WVGA2, WXGA, WXGA2, WXGA3, WXGAPlus, XGA, XGAPLUS, _1280x854, nHD, qHD ]'
            terraform-provider-dynatrace -export calculated_mobile_metric: downloads all existing calculated mobile/custom app metric configuration
            top_x: (Number) The number of top values to be calculated
            user_action_filter: '(Block List, Max: 1) Parameters of a definition of a calculated mobile/custom app metric. (see below for nested schema)'
            user_action_name: (String) Only actions with this name are included in the metric calculation.
        importStatements: []
    dynatrace_activegate_token Resource - terraform-provider-dynatrace:
        subCategory: Access Tokens
        description: The resource
        name: dynatrace_activegate_token Resource - terraform-provider-dynatrace
        title: dynatrace_activegate_token Resource - terraform-provider-dynatrace
        argumentDocs:
            auth_token_enforcement_manually_enabled: (Boolean) Manually enforce ActiveGate token authentication
            builtin:activegate-token: )
            expiring_token_notifications_enabled: '(Boolean) Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined (see notification settings)'
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_activegate_token: downloads all existing ActiveGate network security configuration
        importStatements: []
    dynatrace_activegate_updates Resource - terraform-provider-dynatrace:
        subCategory: Updates
        description: The resource
        name: dynatrace_activegate_updates Resource - terraform-provider-dynatrace
        title: dynatrace_activegate_updates Resource - terraform-provider-dynatrace
        argumentDocs:
            auto_update: (Boolean) Automatic updates at earliest convenience
            builtin:deployment.activegate.updates: )
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_activegate_updates: downloads existing Activegate updates configuration
        importStatements: []
    dynatrace_ag_token Resource - terraform-provider-dynatrace:
        subCategory: Access Tokens
        description: The resource
        name: dynatrace_ag_token Resource - terraform-provider-dynatrace
        title: dynatrace_ag_token Resource - terraform-provider-dynatrace
        argumentDocs:
            expiration_date: (String) The expiration date of the token.
            id: (String) The ID of this resource.
            name: (String) The name of the token.
            seed: (Boolean) The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
            tenant_token: (String, Sensitive) The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You require the permission InstallerDownload for that attribute to get populated
            token: (String, Sensitive) The secret of the token.
            type: (String) The type of the ActiveGate for which the token is valid. Possible values are ENVIRONMENT or CLUSTER
        importStatements: []
    dynatrace_aix_extension Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_aix_extension Resource - terraform-provider-dynatrace
        title: dynatrace_aix_extension Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:host.monitoring.aix-kernel-extension: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_aix_extension: downloads all existing AIX kernel extension configuration
            use_global_settings: (Boolean) Use global settings
        importStatements: []
    dynatrace_alerting Resource - terraform-provider-dynatrace:
        subCategory: Alerting
        description: The resource
        name: dynatrace_alerting Resource - terraform-provider-dynatrace
        title: dynatrace_alerting Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:alerting.profile: )
            case_sensitive: (Boolean) The condition is case sensitive (false) or case insensitive (true).   If not set, then false is used, making the condition case sensitive
            custom: '(Block List, Max: 1) Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies (see below for nested schema)'
            delay_in_minutes: (Number) Send a notification if a problem remains open longer than X minutes
            description: '(Block List, Max: 1) Configuration of a matching filter (see below for nested schema)'
            enabled: (Boolean) The filter is enabled (true) or disabled (false)
            filter: (Block List) A conditions for the metric usage (see below for nested schema)
            filters: '(Block List, Max: 1) The list of event filters.  For all filters that are negated inside of these event filters, that is all Predefined as well as Custom (Title and/or Description) ones the AND logic applies. For all non-negated ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies (see below for nested schema)'
            id: (String) The ID of this resource.
            include_mode: '(String) The filtering mode:  * INCLUDE_ANY: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * INCLUDE_ALL: The rule applies to monitored entities that have all of the specified tags. You can specify up to 10 tags.  * NONE: The rule applies to all monitored entities'
            items: '(Block List, Min: 1, Max: 1) Define filters for event properties. A maximum of 20 properties is allowed. (see below for nested schema)'
            key: (String) GET /api/v2/eventProperties for list of available keys
            legacy_id: (String) The ID of this setting when referred to by the Config REST API V1
            management_zone: (String) The ID of the management zone to which the alerting profile applies
            metadata: '(Block List, Max: 1) Configuration of a matching filter (see below for nested schema)'
            name: (String) The name of the alerting profile, displayed in the UI
            negate: (Boolean) Reverses the comparison operator. For example it turns the begins with into does not begin with
            operator: (String) Operator of the comparison.   You can reverse it by setting negate to true. Possible values are BEGINS_WITH, CONTAINS, CONTAINS_REGEX, ENDS_WITH and EQUALS
            predefined: '(Block List, Max: 1) Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies (see below for nested schema)'
            rule: (Block Set) A conditions for the metric usage (see below for nested schema)
            rules: '(Block List, Max: 1) A list of rules for management zone usage.  Each rule is evaluated independently of all other rules (see below for nested schema)'
            severity_level: "(String) The severity level to trigger the alert. Possible values are AVAILABILITY,\tCUSTOM_ALERT,\tERRORS,MONITORING_UNAVAILABLE,PERFORMANCE and RESOURCE_CONTENTION."
            tags: (Set of String) A set of tags you want to filter by. You can also specify a tag value alongside the tag name using the syntax name:value.
            terraform-provider-dynatrace -export dynatrace_alerting: downloads all existing alerting profiles configuration
            title: '(Block List, Max: 1) Configuration of a matching filter (see below for nested schema)'
            type: (String) The type of the predefined event. Possible values are APPLICATION_ERROR_RATE_INCREASED, APPLICATION_SLOWDOWN, APPLICATION_UNEXPECTED_HIGH_LOAD, APPLICATION_UNEXPECTED_LOW_LOAD, AWS_LAMBDA_HIGH_ERROR_RATE, CUSTOM_APPLICATION_ERROR_RATE_INCREASED, CUSTOM_APPLICATION_SLOWDOWN, CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD, CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD, CUSTOM_APP_CRASH_RATE_INCREASED, DATABASE_CONNECTION_FAILURE, DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION, DATA_CENTER_SERVICE_UNAVAILABLE, EBS_VOLUME_HIGH_LATENCY, EC2_HIGH_CPU, ELB_HIGH_BACKEND_ERROR_RATE, ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION, ENTERPRISE_APPLICATION_UNAVAILABLE, ESXI_GUEST_ACTIVE_SWAP_WAIT, ESXI_GUEST_CPU_LIMIT_REACHED, ESXI_HOST_CPU_SATURATION, ESXI_HOST_DATASTORE_LOW_DISK_SPACE, ESXI_HOST_DISK_QUEUE_SLOW, ESXI_HOST_DISK_SLOW, ESXI_HOST_MEMORY_SATURATION, ESXI_HOST_NETWORK_PROBLEMS, ESXI_HOST_OVERLOADED_STORAGE, ESXI_VM_IMPACT_HOST_CPU_SATURATION, ESXI_VM_IMPACT_HOST_MEMORY_SATURATION, EXTERNAL_SYNTHETIC_TEST_OUTAGE, EXTERNAL_SYNTHETIC_TEST_SLOWDOWN, HOST_OF_SERVICE_UNAVAILABLE, HTTP_CHECK_GLOBAL_OUTAGE, HTTP_CHECK_LOCAL_OUTAGE, HTTP_CHECK_TEST_LOCATION_SLOWDOWN, MOBILE_APPLICATION_ERROR_RATE_INCREASED, MOBILE_APPLICATION_SLOWDOWN, MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD, MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD, MOBILE_APP_CRASH_RATE_INCREASED, MONITORING_UNAVAILABLE, OSI_DISK_LOW_INODES, OSI_GRACEFULLY_SHUTDOWN, OSI_HIGH_CPU, OSI_HIGH_MEMORY, OSI_LOW_DISK_SPACE, OSI_NIC_DROPPED_PACKETS_HIGH, OSI_NIC_ERRORS_HIGH, OSI_NIC_UTILIZATION_HIGH, OSI_SLOW_DISK, OSI_UNEXPECTEDLY_UNAVAILABLE, PGI_OF_SERVICE_UNAVAILABLE, PGI_UNAVAILABLE, PG_LOW_INSTANCE_COUNT, PROCESS_CRASHED, PROCESS_HIGH_GC_ACTIVITY, PROCESS_MEMORY_RESOURCE_EXHAUSTED, PROCESS_NA_HIGH_CONN_FAIL_RATE, PROCESS_NA_HIGH_LOSS_RATE, PROCESS_THREADS_RESOURCE_EXHAUSTED, RDS_HIGH_CPU, RDS_HIGH_LATENCY, RDS_LOW_MEMORY, RDS_LOW_STORAGE_SPACE, RDS_OF_SERVICE_UNAVAILABLE, RDS_RESTART_SEQUENCE, SERVICE_ERROR_RATE_INCREASED, SERVICE_SLOWDOWN, SERVICE_UNEXPECTED_HIGH_LOAD, SERVICE_UNEXPECTED_LOW_LOAD, SYNTHETIC_GLOBAL_OUTAGE, SYNTHETIC_LOCAL_OUTAGE, SYNTHETIC_NODE_OUTAGE, SYNTHETIC_PRIVATE_LOCATION_OUTAGE and SYNTHETIC_TEST_LOCATION_SLOWDOWN
            value: (String) The value to compare to
        importStatements: []
    dynatrace_alerting_profile Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_alerting_profile Resource - terraform-provider-dynatrace
        title: dynatrace_alerting_profile Resource - terraform-provider-dynatrace
        argumentDocs:
            case_insensitive: (Boolean) The condition is case sensitive (false) or case insensitive (true).   If not set, then false is used, making the condition case sensitive
            cluster_version: (String) Dynatrace server version
            configuration_versions: (List of Number) A Sorted list of the version numbers of the configuration
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
            current_configuration_versions: (List of String) A Sorted list of the version numbers of the configuration
            custom_description_filter: (Block List) Configuration of a matching filter (see below for nested schema)
            custom_event_filter: (Block List) Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies (see below for nested schema)
            custom_title_filter: (Block List) Configuration of a matching filter (see below for nested schema)
            delay_in_minutes: (Number) Send a notification if a problem remains open longer than X minutes
            display_name: (String) The name of the alerting profile, displayed in the UI
            enabled: (Boolean) The filter is enabled (true) or disabled (false)
            event_type: (String) The type of the predefined event. Possible values are APPLICATION_ERROR_RATE_INCREASED, APPLICATION_SLOWDOWN, APPLICATION_UNEXPECTED_HIGH_LOAD, APPLICATION_UNEXPECTED_LOW_LOAD, AWS_LAMBDA_HIGH_ERROR_RATE, CUSTOM_APPLICATION_ERROR_RATE_INCREASED, CUSTOM_APPLICATION_SLOWDOWN, CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD, CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD, CUSTOM_APP_CRASH_RATE_INCREASED, DATABASE_CONNECTION_FAILURE, DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION, DATA_CENTER_SERVICE_UNAVAILABLE, EBS_VOLUME_HIGH_LATENCY, EC2_HIGH_CPU, ELB_HIGH_BACKEND_ERROR_RATE, ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION, ENTERPRISE_APPLICATION_UNAVAILABLE, ESXI_GUEST_ACTIVE_SWAP_WAIT, ESXI_GUEST_CPU_LIMIT_REACHED, ESXI_HOST_CPU_SATURATION, ESXI_HOST_DATASTORE_LOW_DISK_SPACE, ESXI_HOST_DISK_QUEUE_SLOW, ESXI_HOST_DISK_SLOW, ESXI_HOST_MEMORY_SATURATION, ESXI_HOST_NETWORK_PROBLEMS, ESXI_HOST_OVERLOADED_STORAGE, ESXI_VM_IMPACT_HOST_CPU_SATURATION, ESXI_VM_IMPACT_HOST_MEMORY_SATURATION, EXTERNAL_SYNTHETIC_TEST_OUTAGE, EXTERNAL_SYNTHETIC_TEST_SLOWDOWN, HOST_OF_SERVICE_UNAVAILABLE, HTTP_CHECK_GLOBAL_OUTAGE, HTTP_CHECK_LOCAL_OUTAGE, HTTP_CHECK_TEST_LOCATION_SLOWDOWN, MOBILE_APPLICATION_ERROR_RATE_INCREASED, MOBILE_APPLICATION_SLOWDOWN, MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD, MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD, MOBILE_APP_CRASH_RATE_INCREASED, MONITORING_UNAVAILABLE, OSI_DISK_LOW_INODES, OSI_GRACEFULLY_SHUTDOWN, OSI_HIGH_CPU, OSI_HIGH_MEMORY, OSI_LOW_DISK_SPACE, OSI_NIC_DROPPED_PACKETS_HIGH, OSI_NIC_ERRORS_HIGH, OSI_NIC_UTILIZATION_HIGH, OSI_SLOW_DISK, OSI_UNEXPECTEDLY_UNAVAILABLE, PGI_OF_SERVICE_UNAVAILABLE, PGI_UNAVAILABLE, PG_LOW_INSTANCE_COUNT, PROCESS_CRASHED, PROCESS_HIGH_GC_ACTIVITY, PROCESS_MEMORY_RESOURCE_EXHAUSTED, PROCESS_NA_HIGH_CONN_FAIL_RATE, PROCESS_NA_HIGH_LOSS_RATE, PROCESS_THREADS_RESOURCE_EXHAUSTED, RDS_HIGH_CPU, RDS_HIGH_LATENCY, RDS_LOW_MEMORY, RDS_LOW_STORAGE_SPACE, RDS_OF_SERVICE_UNAVAILABLE, RDS_RESTART_SEQUENCE, SERVICE_ERROR_RATE_INCREASED, SERVICE_SLOWDOWN, SERVICE_UNEXPECTED_HIGH_LOAD, SERVICE_UNEXPECTED_LOW_LOAD, SYNTHETIC_GLOBAL_OUTAGE, SYNTHETIC_LOCAL_OUTAGE, SYNTHETIC_NODE_OUTAGE, SYNTHETIC_PRIVATE_LOCATION_OUTAGE and SYNTHETIC_TEST_LOCATION_SLOWDOWN
            event_type_filters: (Block List) The list of event filters.  For all filters that are negated inside of these event filters, that is all Predefined as well as Custom (Title and/or Description) ones the AND logic applies. For all non-negated ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies (see below for nested schema)
            id: (String) The ID of this resource.
            include_mode: '(String) The filtering mode:  * INCLUDE_ANY: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * INCLUDE_ALL: The rule applies to monitored entities that have all of the specified tags. You can specify up to 10 tags.  * NONE: The rule applies to all monitored entities'
            key: (String) The key of the tag. Custom tags have the tag value here
            metadata: '(Block List, Max: 1, Deprecated) metadata exists for backwards compatibility but shouldn''t get specified anymore (see below for nested schema)'
            mz_id: (String) The ID of the management zone to which the alerting profile applies
            negate: (Boolean) Reverses the comparison operator. For example it turns the begins with into does not begin with
            operator: (String) Operator of the comparison.   You can reverse it by setting negate to true. Possible values are BEGINS_WITH, CONTAINS, CONTAINS_REGEX, ENDS_WITH and EQUALS
            predefined_event_filter: (Block List) Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies (see below for nested schema)
            rules: (Block List) A list of rules for management zone usage.  Each rule is evaluated independently of all other rules (see below for nested schema)
            severity_level: "(String) The severity level to trigger the alert. Possible values are AVAILABILITY,\tCUSTOM_ALERT,\tERROR,MONITORING_UNAVAILABLE,PERFORMANCE and RESOURCE_CONTENTION."
            tag_filter: '(Block List, Min: 1) Configuration of the tag filtering of the alerting profile (see below for nested schema)'
            tag_filters: (Block List) A list of required tags (see below for nested schema)
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to compare to
        importStatements: []
    dynatrace_ansible_tower_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_ansible_tower_notification Resource - terraform-provider-dynatrace
        title: dynatrace_ansible_tower_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The notification is active (true) or inactive (false). Default is false.
            builtin:problem.notifications: )
            custom_message: '(String) The custom message of the notification. This message will be displayed in the extra variables Message field of your job template. You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            id: (String) The ID of this resource.
            insecure: (Boolean) Accept any, including self-signed and invalid, SSL certificate (true) or only trusted (false) certificates. Default is false.
            job_template_url: (String) The URL of the target Ansible Tower job template
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            name: (String) The display name within the Dynatrace WebUI.
            password: (String, Sensitive) The password for the Ansible Tower account
            profile: (String) The ID of the associated alerting profile.
            terraform-provider-dynatrace -export dynatrace_ansible_tower_notification: downloads the existing Problem Notifications for Ansible Tower
            username: (String) The username of the Ansible Tower account
        importStatements: []
    dynatrace_api_detection Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_api_detection Resource - terraform-provider-dynatrace
        title: dynatrace_api_detection Resource - terraform-provider-dynatrace
        argumentDocs:
            api_color: (String) This color will be used to highlight APIs when viewing code level data, such as distributed traces or method hotspots.
            api_name: (String) API name
            base: '(String) Possible Values: FILE_NAME, FQCN, PACKAGE'
            builtin:apis.detection-rules: )
            condition: '(Block Set, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Max: 1) List of conditions (see below for nested schema)'
            id: (String) The ID of this resource.
            matcher: '(String) Possible Values: BEGINS_WITH, CONTAINS'
            pattern: (String) no documentation available
            technology: (String) Restrict this rule to a specific technology.
            terraform-provider-dynatrace -export dynatrace_api_detection: downloads all existing API detection rule configuration
            third_party_api: (Boolean) This API defines a third party library
        importStatements: []
    dynatrace_api_token Resource - terraform-provider-dynatrace:
        subCategory: Access Tokens
        description: The resource
        name: dynatrace_api_token Resource - terraform-provider-dynatrace
        title: dynatrace_api_token Resource - terraform-provider-dynatrace
        argumentDocs:
            creation_date: (String) Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
            enabled: (Boolean) The token is enabled (true) or disabled (false), default disabled (false).
            expiration_date: (String) The expiration date of the token.
            id: (String) The ID of this resource.
            last_used_date: (String) Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
            last_used_ip_address: (String) Token last used IP address.
            modified_date: (String) Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
            name: (String) The name of the token.
            owner: (String) The owner of the token
            personal_access_token: (Boolean) The token is a personal access token (true) or an API token (false).
            scopes: (Set of String) A list of the scopes to be assigned to the token.
            terraform-provider-dynatrace -export dynatrace_api_token: downloads all existing API token configuration
            token: (String, Sensitive) The secret of the token.
        importStatements: []
    dynatrace_application_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_application_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_application_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute: (Number) Absolute increase of failing service calls to trigger an alert, %
            auto: '(Block List, Max: 1) Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)'
            drops: '(Block List, Max: 1) The configuration of traffic drops detection (see below for nested schema)'
            enabled: (Boolean) The detection is enabled (true) or disabled (false)
            failure_rate: '(Block List, Max: 1) Configuration of failure rate increase detection (see below for nested schema)'
            id: (String) The ID of this resource.
            load: (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
            milliseconds: (Number) Alert if the response time degrades by more than X milliseconds
            percent: (Number) Alert if the response time degrades by more than X %
            relative: (Number) Relative increase of failing service calls to trigger an alert, %
            response_time: '(Block List, Max: 1) Configuration of response time degradation detection (see below for nested schema)'
            sensitivity: (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
            slowest_milliseconds: (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
            slowest_percent: (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
            spikes: '(Block List, Max: 1) The configuration of traffic spikes detection (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_application_anomalies: downloads all existing application anomaly detection configuration
            threshold: (Number) Failure rate during any 5-minute period to trigger an alert, %
            thresholds: '(Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)'
            traffic: '(Block List, Max: 1) Configuration for anomalies regarding traffic (see below for nested schema)'
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
        importStatements: []
    dynatrace_application_data_privacy Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_application_data_privacy Resource - terraform-provider-dynatrace
        title: dynatrace_application_data_privacy Resource - terraform-provider-dynatrace
        argumentDocs:
            ALLOW_LIST: ': Only elements, specified in maskingRules are shown, everything else is masked.'
            BLOCK_LIST: ': Elements, specified in maskingRules are masked, everything else is shown'
            CAPTURE_ANONYMIZED: ': capture the data but do not tie it to the user.'
            DO_NOT_CAPTURE: ': respect the header and do not capture.'
            IGNORE_DO_NOT_TRACK: ': ignore the header and capture the data.'
            MASK_ALL: ': Mask all texts, user input, and images.'
            MASK_USER_INPUT: ': Mask all data that is provided through user input'
            content_masking_settings: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_session_replay_web_privacy) Content masking settings for Session Replay.'
            data_capture_opt_in: (Boolean) (Field has overlap with dynatrace_data_privacy) Set to true to disable data capture and cookies until JavaScriptAPI dtrum.enable() is called
            do_not_track_behaviour: '(String) (Field has overlap with dynatrace_data_privacy) How to handle the "Do Not Track" header:'
            id: (String) The ID of this resource.
            opt_in: (Boolean) (Field has overlap with dynatrace_session_replay_web_privacy) If true, session recording is disabled until JavaScriptAPI dtrum.enableSessionReplay() is called
            persistent_cookie_for_user_tracking: (Boolean) (Field has overlap with dynatrace_data_privacy) Set to true to set persistent cookie in order to recognize returning devices
            playback: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_session_replay_web_privacy) Configuration of the Session Replay masking during Playback (see below for nested schema)'
            preset: '(String) The type of the masking:'
            recording: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_session_replay_web_privacy) Configuration of the Session Replay masking during Recording (see below for nested schema)'
            rule: '(Block List, Min: 1) The masking rule defining how data is hidden (see below for nested schema)'
            rules: '(Block List, Max: 1) A list of masking rules (see below for nested schema)'
            selector: (String) The selector for the element or the attribute to be masked.
            session_replay_data_privacy: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_session_replay_web_privacy) Data privacy settings for Session Replay (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_application_data_privacy: downloads all existing application data privacy configuration
            type: (String) The type of the masking rule
            url_exclusion_rules: (List of String) (Field has overlap with dynatrace_session_replay_web_privacy) A list of URLs to be excluded from recording
            user_interaction_hidden: (Boolean) Interactions with the element are (true) or are not (`false) masked
            web_application_id: (String) Dynatrace entity ID of the web application
        importStatements: []
    dynatrace_application_detection_rule Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_application_detection_rule Resource - terraform-provider-dynatrace
        title: dynatrace_application_detection_rule Resource - terraform-provider-dynatrace
        argumentDocs:
            application_identifier: (String) The Dynatrace entity ID of the application, for example APPLICATION-4A3B43
            application_match_target: (String) Where to look for the pattern value, possible values are DOMAIN or URL
            application_match_type: (String) The operator used for matching the application detection rule, possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, MATCHES
            filter_config: '(Block List, Min: 1, Max: 1) The condition of an application detection rule (see below for nested schema)'
            id: (String) The ID of this resource.
            name: (String, Deprecated) The unique name of the Application detection rule
            order: (String) The order of the rule in the rules list
            pattern: (String) The value to look for with the application detection rule
            terraform-provider-dynatrace -export dynatrace_application_detection_rule: downloads all existing application detection rule configuration
        importStatements: []
    dynatrace_application_detection_rule_v2 Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_application_detection_rule_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_application_detection_rule_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) Select an existing application or create a new one.
            builtin:rum.web.app-detection: )
            description: (String) (v1.274) Add a description for your rule
            id: (String) The ID of this resource.
            matcher: '(String) Possible Values: DOMAIN_CONTAINS, DOMAIN_ENDS_WITH, DOMAIN_EQUALS, DOMAIN_MATCHES, DOMAIN_STARTS_WITH, URL_CONTAINS, URL_ENDS_WITH, URL_EQUALS, URL_STARTS_WITH'
            pattern: (String) Pattern
            terraform-provider-dynatrace -export dynatrace_application_detection_rule_v2: downloads all existing application detection rule configuration
        importStatements: []
    dynatrace_application_error_rules Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_application_error_rules Resource - terraform-provider-dynatrace
        title: dynatrace_application_error_rules Resource - terraform-provider-dynatrace
        argumentDocs:
            capture: (Boolean) Capture (true) or ignore (false) the error
            consider_blocked_requests: (Boolean) If true, match by errors that have CSP Rule violations
            consider_for_ai: (Boolean) Include (true) or exclude (false) the error in Davis AI problem detection and analysis
            consider_unknown_error_code: (Boolean) If true, match by errors that have unknown HTTP status code
            custom_alerting: (Boolean) Include (true) or exclude (false) the error in Davis AI problem detection and analysis
            custom_errors: '(Block List, Max: 1) (Field has overlap with dynatrace_web_app_custom_errors) An ordered list of HTTP errors.'
            error_codes: (String) The HTTP status code or status code range to match by.
            false.filter: (String) The matching rule for the URL. Popssible values are BEGINS_WITH, CONTAINS, ENDS_WITH and EQUALS.
            false.filter_by_url: (Boolean) If true, filter errors by URL
            false.impact_apdex: (Boolean) Include (true) or exclude (false) the error in Apdex calculation
            false.url: (String) The URL to look for
            http_errors: '(Block List, Max: 1) (Field has overlap with dynatrace_web_app_request_errors) An ordered list of HTTP errors.'
            id: (String) The ID of this resource.
            ignore_custom_errors_apdex: (Boolean) (Field has overlap with dynatrace_web_app_custom_errors) Exclude (true) or include (false) custom errors listed in customErrorRules in Apdex calculation
            ignore_http_errors_apdex: (Boolean) (Field has overlap with dynatrace_web_app_request_errors) Exclude (true) or include (false) HTTP errors listed in httpErrorRules in Apdex calculation
            ignore_js_errors_apdex: (Boolean) Exclude (true) or include (false) JavaScript errors in Apdex calculation
            impact_apdex: (Boolean) Include (true) or exclude (false) the error in Apdex calculation
            key_matcher: (String) The matching operation for the keyPattern. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH and EQUALS
            key_pattern: (String) The key of the error to look for
            rule: '(Block List, Min: 1) Configuration of the custom error in the web application (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_application_error_rules: downloads all existing application error rule configuration
            value_matcher: (String) The matching operation for the valuePattern. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH and EQUALS.
            value_pattern: (String) The value of the error to look for
            web_application_id: (String) The EntityID of the the WebApplication
        importStatements: []
    dynatrace_appsec_notification Resource - terraform-provider-dynatrace:
        subCategory: ""
        name: dynatrace_appsec_notification Resource - terraform-provider-dynatrace
        title: dynatrace_appsec_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            accept_any_certificate: (Boolean) Accept any SSL certificate (including self-signed and invalid certificates)
            api_token: (String, Sensitive) The API token for the Jira profile. Using password authentication was deprecated by Jira
            attack_candidate_based_alerting_profile: (String) For attack candidate alerts, select an alerting profile to control the delivery of security notifications related to this integration.
            attack_candidate_based_email_payload: '(Block List, Max: 1) Attack candidate based email payload, required when trigger equals ATTACK_CANDIDATE and type equals EMAIL (see below for nested schema)'
            attack_candidate_based_jira_payload: '(Block List, Max: 1) Attack candidate based Jira payload, required when trigger equals ATTACK_CANDIDATE and type equals JIRA (see below for nested schema)'
            attack_candidate_based_webhook_payload: '(Block List, Max: 1) Attack candidate based webhook payload, required when trigger equals ATTACK_CANDIDATE and type equals WEBHOOK (see below for nested schema)'
            bcc_recipients: (Set of String) BCC
            body: |-
                (String) The template of the email notifications.
                In case a value of a security problem is not set, the placeholder will be replaced by an empty string.. Note: Security notifications contain sensitive information. Excessive usage of placeholders in the body might leak information to untrusted parties.
            cc_recipients: (Set of String) CC
            description: |-
                (String) The description of the Jira issue to be created by this notification.
                In case a value of an attack is not set, the placeholder will be replaced by an empty string.. Note: Security notifications contain sensitive information. Excessive usage of placeholders in the description might leak information to untrusted parties.
            display_name: (String) Display name of the security notification
            email_configuration: '(Block List, Max: 1) Email configuration, required when type equals EMAIL (see below for nested schema)'
            enabled: (Boolean) Enable/Disable the security notification, enabled (true) or disabled (false)
            header: '(Block Set, Min: 1) (see below for nested schema)'
            headers: '(Block List, Max: 1) Use additional HTTP headers to attach any additional information, for example, configuration, authorization, or metadata.'
            id: (String) The ID of this resource.
            issue_type: (String) The type of the Jira issue to be created by this notification.
            jira_configuration: '(Block List, Max: 1) Jira configuration, required when type equals JIRA (see below for nested schema)'
            name: (String) no documentation available
            payload: |-
                (String) This is the content your notification message will include when users view it.
                In case a value of an attack is not set, the placeholder will be replaced by an empty string.. Note: Security notifications contain sensitive information. Excessive usage of placeholders in the custom payload might leak information to untrusted parties.
            project_key: (String) The project key of the Jira issue to be created by this notification.
            recipients: (Set of String) To
            secret: (Boolean) Secret HTTP header value
            secret_value: (String, Sensitive) The secret value of the HTTP header. May contain an empty value.
            security_problem_based_alerting_profile: (String) For security problem alerts, select an alerting profile to control the delivery of security notifications related to this integration.
            security_problem_based_email_payload: '(Block List, Max: 1) Security problem based email payload, required when trigger equals SECURITY_PROBLEM and type equals EMAIL (see below for nested schema)'
            security_problem_based_jira_payload: '(Block List, Max: 1) Security problem based Jira payload, required when trigger equals SECURITY_PROBLEM and type equals JIRA (see below for nested schema)'
            security_problem_based_webhook_payload: '(Block List, Max: 1) Security problem based webhook payload, required when trigger equals SECURITY_PROBLEM and type equals WEBHOOK (see below for nested schema)'
            subject: |-
                (String) The subject of the email notifications.. Available placeholders:
                {AttackDisplayId}: The unique identifier assigned by Dynatrace, for example, "A-1234".
                {Title}: Location of the attack, for example: "com.dynatrace.Class.method():120"
                {Type}: The type of attack, for example: "SQL Injection".
                {AttackUrl}: URL of the attack in Dynatrace.
                {ProcessGroupId}: Details about the process group attacked.
                {EntryPoint}: The entry point of the attack into the process, for example: "/login". Can be empty.
                {Status}: The status of the attack, for example: "Exploited"
                {Timestamp}: When the attack happened.
                {VulnerabilityName}: Name of the associated code-level vulnerability, for example: "InMemoryDatabaseCaller.getAccountInfo():51". Can be empty.
            summary: '(String) The summary of the Jira issue to be created by this notification.. Note: The Jira summary field must contain less than 255 characters. Any content exceeding this limit after evaluating the placeholders will be discarded.'
            trigger: '(String) Security alert type, possible Values: ATTACK_CANDIDATE, SECURITY_PROBLEM'
            type: '(String) Notification type, possible Values: EMAIL, JIRA, WEBHOOK'
            url: (String) The URL of the Jira API endpoint.
            username: (String) The username of the Jira profile.
            value: (String) The value of the HTTP header. May contain an empty value.
            webhook_configuration: '(Block List, Max: 1) Webhook configuration, required when type equals WEBHOOK (see below for nested schema)'
        importStatements: []
    dynatrace_attack_alerting Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_attack_alerting Resource - terraform-provider-dynatrace
        title: dynatrace_attack_alerting Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:appsec.notification-attack-alerting-profile: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            enabled_attack_mitigations: (Set of String) Attack State
            id: (String) The ID of this resource.
            name: (String) Name
            terraform-provider-dynatrace -export dynatrace_attack_alerting: downloads all existing attack alerting profiles
        importStatements: []
    dynatrace_attack_allowlist Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_attack_allowlist Resource - terraform-provider-dynatrace
        title: dynatrace_attack_allowlist Resource - terraform-provider-dynatrace
        argumentDocs:
            attack_handling: '(Block List, Min: 1, Max: 1) Step 2: Define attack control for chosen criteria (see below for nested schema)'
            attack_pattern: (String) Only consider attacks matching the specified pattern.
            blocking_strategy: '(String) Possible Values: MONITOR, OFF'
            builtin:appsec.attack-protection-allowlist-config: )
            comment: (String) no documentation available
            criteria: '(Block List, Min: 1, Max: 1) Step 1: Define criteria. Please specify at least one of source IP or attack pattern. (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            metadata: '(Block List, Min: 1, Max: 1) Step 3: Leave comment (see below for nested schema)'
            source_ip: (String) Source IP
            terraform-provider-dynatrace -export dynatrace_attack_allowlist: 'downloads all existing application protection: allowlist configuration'
        importStatements: []
    dynatrace_attack_rules Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_attack_rules Resource - terraform-provider-dynatrace
        title: dynatrace_attack_rules Resource - terraform-provider-dynatrace
        argumentDocs:
            attack_handling: '(Block List, Min: 1, Max: 1) Step 2: Define attack control for chosen criteria (see below for nested schema)'
            attack_type: '(String) Possible Values: ANY, CMD_INJECTION, JNDI_INJECTION, SQL_INJECTION'
            blocking_strategy: '(String) Possible Values: BLOCK, MONITOR, OFF'
            builtin:appsec.attack-protection-advanced-config: )
            comment: (String) no documentation available
            criteria: '(Block List, Min: 1, Max: 1) Step 1: Define criteria (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            metadata: '(Block List, Min: 1, Max: 1) Step 3: Leave comment (see below for nested schema)'
            process_group: (String) Process group
            terraform-provider-dynatrace -export dynatrace_attack_rules: 'downloads all existing application protection: monitoring rules'
        importStatements: []
    dynatrace_attack_settings Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_attack_settings Resource - terraform-provider-dynatrace
        title: dynatrace_attack_settings Resource - terraform-provider-dynatrace
        argumentDocs:
            blocking_strategy_java: '(String) Possible Values: BLOCK, MONITOR, OFF'
            builtin:appsec.attack-protection-settings: )
            default_attack_handling: '(Block List, Min: 1, Max: 1) Define global incoming attack control (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_attack_settings: 'downloads existing application protection: general settings'
        importStatements: []
    dynatrace_audit_log Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_audit_log Resource - terraform-provider-dynatrace
        title: dynatrace_audit_log Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:audit-log: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_audit_log: downloads all existing audit log configuration
        importStatements: []
    dynatrace_automation_business_calendar Resource - terraform-provider-dynatrace:
        subCategory: Automation
        description: The resource
        name: dynatrace_automation_business_calendar Resource - terraform-provider-dynatrace
        title: dynatrace_automation_business_calendar Resource - terraform-provider-dynatrace
        argumentDocs:
            date: '(String) The date of this holiday: Example 2017-07-04 for July 4th 2017'
            description: (String) An optional description for the Business Calendar
            holiday: '(Block Set, Min: 1) A (unordered) list of holidays valid in this calendar (see below for nested schema)'
            holidays: '(Block List, Max: 1) A list of holidays valid in this calendar (see below for nested schema)'
            id: (String) The ID of this resource.
            title: (String) The title / name of the Business Calendar
            valid_from: '(String) The date from when on this calendar is valid from. Example: 2023-07-04 for July 4th 2023'
            valid_to: '(String) The date until when on this calendar is valid to. Example: 2023-07-04 for July 4th 2023'
            week_days: (Set of Number) The days to be considered week days in this calendar. 1' = Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday, 7=Sunday`
            week_start: (Number) Specifies the day of the week that's considered to be the first day in the week. 1 for Monday, 7 for Sunday
        importStatements: []
    dynatrace_automation_scheduling_rule Resource - terraform-provider-dynatrace:
        subCategory: Automation
        description: The resource
        name: dynatrace_automation_scheduling_rule Resource - terraform-provider-dynatrace
        title: dynatrace_automation_scheduling_rule Resource - terraform-provider-dynatrace
        argumentDocs:
            business_calendar: (String)
            combine: (Set of String) The IDs of scheduling rules determining the days the schedule should apply to
            datestart: '(String) The recurrence start. Example: 2017-07-04 represents July 4th 2017'
            days_in_month: (Set of Number) Restricts the recurrence to specific days within a month. 1, 2, 3, ... refers to the first, second, third day in the month. You can also specify negative values to refer to values relative to the last day. -1 refers to the last day, -2 refers to the second to the last day, ...
            days_in_year: (Set of Number) Restricts the recurrence to specific days within a year. 1, 2, 3, ... refers to the first, second, third day of the year. You can also specify negative values to refer to values relative to the last day. -1 refers to the last day, -2 refers to the second to the last day, ...
            description: (String) An optional description for the scheduling rule
            direction: (String)
            easter: (Set of Number) Restricts the recurrence to specific days relative to Easter Sunday. 0 will yield the Easter Sunday itself
            fixed_offset: '(Block List, Max: 1) (see below for nested schema)'
            frequency: '(String) Possible values are YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY and SECONDLY. Example: frequency = DAILY and interval = 2 schedules for every other day'
            grouping: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            intersect: (Set of String) The IDs of scheduling rules determining the days the schedule is allowed apply to. If specified, only days that are covered by combine and intersect are valid days for the schedule
            interval: '(Number) The interval between each iteration. Default: 1. Example: frequency = DAILY and interval = 2 schedules for every other day'
            months: (Set of Number) Restricts the recurrence to specific months. 1 for January, 2 for February, ..., 12 for December
            offset: (Number) Every day of the scheduling rule referred to with rule will be offset by this amount of days
            recurrence: '(Block List, Max: 1) (see below for nested schema)'
            relative_offset: '(Block List, Max: 1) (see below for nested schema)'
            rule: (String) Refers to a scheduling rule for which to produce valid days with an offset
            source_rule: (String)
            subtract: (Set of String) The IDs of scheduling rules determing the days the schedule must not apply. If specified it reduces down the set of days covered by combine and intersect
            target_rule: (String)
            title: (String) The title / name of the scheduling rule
            weekdays: (Set of String) Restricts the recurrence to specific week days. Possible values are MO, TU, WE, TH, FR, SA and SU
            weeks: (Set of Number) Restricts the recurrence to specific weeks within a year. 1, 2, 3, ... refers to the first, second, third week of the year. You can also specify negative values to refer to values relative to the last week. -1 refers to the last week, -2 refers to the second to the last week, ...
            workdays: (String) Possible values are WORKING (Work days), HOLIDAYS (Holidays) and OFF (Weekends + Holidays)
        importStatements: []
    dynatrace_automation_workflow Resource - terraform-provider-dynatrace:
        subCategory: Automation
        description: The resource
        name: dynatrace_automation_workflow Resource - terraform-provider-dynatrace
        title: dynatrace_automation_workflow Resource - terraform-provider-dynatrace
        argumentDocs:
            action: (String) Currently known and supported values are dynatrace.automations:http-function, dynatrace.automations:run-javascript and dynatrace.automations:execute-dql-query
            active: (Boolean) Specifies whether a task should be skipped as a no operation or not
            actor: (String) The user context the executions of the workflow will happen with
            availability: (Boolean)
            between_end: (String) Triggers the schedule every n minutes within a given time frame - specifying the end time on any valid day in 24h format (e.g. 14:22:44). Conflicts with cron and time. Required with interval_minutes and between_start
            between_start: (String) Triggers the schedule every n minutes within a given time frame - specifying the start time on any valid day in 24h format (e.g. 13:22:44). Conflicts with cron and time. Required with interval_minutes and between_end
            categories: '(Block List, Min: 1) (see below for nested schema)'
            concurrency: (String) Required if with_items is specified. By default loops execute sequentially with concurrency set to 1. You can increase how often it runs in parallel
            conditions: '(Block List, Max: 1) Conditions that have to be met in order to execute that task (see below for nested schema)'
            config: '(Block List, Max: 1) If specified the workflow is getting triggered based on events (see below for nested schema)'
            count: '(String) Specifies a maximum number of times that a task can be repeated in case it fails on execution. You can specify either a number between 1 and 99 here or use an expression ({{}}). Default: 1'
            cron: (String) Configures using cron syntax. Conflicts with time, interval_minutes, between_start and between_end
            custom: (String) A custom condition that needs to be met for the current task to get executed
            custom_filter: (String)
            davis_event: '(Block List, Max: 1) Contains trigger configuration based on Davis Events. Either davis_event, davis_problem, davis_event or config need to set (see below for nested schema)'
            davis_problem: '(Block List, Max: 1) Contains trigger configuration based on Davis Problems. Either davis_event, davis_problem, davis_event or config need to set (see below for nested schema)'
            delay: '(String) Specifies a delay in seconds between subsequent task retries. You can specify either a number between 1 and 3600 here or an expression ({{...}}). Default: 1'
            description: (String) An optional description for the workflow
            earliest_start: (String) If specified, the schedule won't trigger executions before the given date
            earliest_start_time: (String) If specified, the schedule won't trigger executions before the given time
            else: (String) Possible values are SKIP and STOP
            entity_tags: (Map of String) key/value pairs for entity tags to match for. For tags that don't require a value, just specify an empty string as value. Omit this attribute if all entities should match
            entity_tags_match: '(String) Specifies whether all or just any of the configured entity tags need to match. Possible values: all and any. Omit this attribute if all entities should match'
            error: (Boolean)
            event: '(Block List, Max: 1) If specified the workflow is getting triggered based on events (see below for nested schema)'
            event_type: '(String) Possible values: events or bizevents. Default: events'
            exclude_dates: (Set of String) If specified, the schedule won't trigger exeuctions on the given dates
            failed_loop_iterations_only: '(Boolean) Specifies whether retrying the failed iterations or the whole loop. Default: true'
            filter_parameters: '(Block List, Max: 1) Advanced restrictions for the schedule to trigger executions (see below for nested schema)'
            id: (String) The ID of this resource.
            include_dates: (Set of String) If specified, the schedule will trigger executions on the given dates, even if the main configuration prohibits it
            info: (Boolean)
            input: (String) Parameters and values for this task as JSON code. Contents depend on the kind of task - determined by the attribute action
            interval_minutes: '(String) Triggers the schedule every n minutes within a given time frame. Minimum: 1, Maximum: 720. Required with between_start and between_end. Conflicts with cron and time'
            monitoring_unavailable: (Boolean)
            name: (String) The name of the task
            on_problem_close: (Boolean) If set to true closing a problem also is considered an event that triggers the execution
            owner: (String) The ID of the owner of this workflow
            position: '(Block List, Max: 1) Layouting information about the task tile when visualized. If not specified Dynatrace will position the task tiles automatically (see below for nested schema)'
            private: (Boolean) Defines whether this workflow is private to the owner or not. Default is true
            query: (String) A query based on DQL for events that trigger executions
            resource: (Boolean)
            retry: '(Block List, Max: 1) Configure whether to automatically rerun the task on failure. If not specified no retries will be attempted (see below for nested schema)'
            rule: (String) Refers to a configured rule that determines at which days the schedule should be active. If not specified it implies that the schedule is valid every day
            schedule: '(Block List, Max: 1) If specified the workflow is getting triggered based on a schedule (see below for nested schema)'
            slowdown: (Boolean)
            states: (Map of String) key/value pairs where the key is the name of another task and the value the status it needs to be for the current task to get executed. Possible values are SUCCESS, ERROR, ANY, OK (Success or Skipped) and NOK (Error or Cancelled)
            task: '(Block Set) TODO: No documentation available (see below for nested schema)'
            tasks: '(Block List, Min: 1, Max: 1) The tasks to run for every execution of this workflow (see below for nested schema)'
            time: (String) Specifies a fixed time the schedule will trigger at in 24h format (e.g. 14:23:59). Conflicts with cron, interval_minutes, between_start and between_end
            time_zone: (String) A time zone the scheduled times to align with. If not specified it will be chosen automatically based on the location of the Dynatrace Server
            timeout: (String) Specifies a default task timeout in seconds. 15 * 60 (15min) is used when not set. Minimum 1. Maximum 604800
            title: (String) The title / name of the workflow
            trigger: '(Block List, Max: 1) Configures how executions of the workflows are getting triggered. If no trigger is specified it means the workflow is getting manually triggered (see below for nested schema)'
            type: (String) The type of the trigger configuration to expect within attribute value. Only required if config is set. Must not be set if davis_event, davis_problem or event are present
            types: (Set of String) The types of davis events to trigger an execution. Possible values are CUSTOM_ANNOTATION, APPLICATION_UNEXPECTED_HIGH_LOAD, APPLICATION_UNEXPECTED_LOW_LOAD, APPLICATION_OVERLOAD_PREVENTION, APPLICATION_SLOWDOWN, AVAILABILITY_EVENT, LOG_AVAILABILITY, EC2_HIGH_CPU, RDS_BACKUP_COMPLETED, RDS_BACKUP_STARTED, SYNTHETIC_GLOBAL_OUTAGE, SYNTHETIC_LOCAL_OUTAGE, SYNTHETIC_TEST_LOCATION_SLOWDOWN, CUSTOM_CONFIGURATION, PROCESS_NA_HIGH_CONN_FAIL_RATE, OSI_HIGH_CPU, CUSTOM_ALERT, CUSTOM_APP_CRASH_RATE_INCREASED, CUSTOM_APPLICATION_ERROR_RATE_INCREASED, CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD, CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD, CUSTOM_APPLICATION_OVERLOAD_PREVENTION, CUSTOM_APPLICATION_SLOWDOWN, PGI_CUSTOM_AVAILABILITY, PGI_CUSTOM_ERROR, CUSTOM_INFO, PGI_CUSTOM_PERFORMANCE, CUSTOM_DEPLOYMENT, DEPLOYMENT_CHANGED_CHANGE, DEPLOYMENT_CHANGED_NEW, DEPLOYMENT_CHANGED_REMOVED, EBS_VOLUME_HIGH_LATENCY, ERROR_EVENT, LOG_ERROR, ESXI_HOST_CONNECTION_FAILED, ESXI_HOST_CONNECTION_LOST, ESXI_GUEST_CPU_LIMIT_REACHED, ESXI_GUEST_ACTIVE_SWAP_WAIT, ESXI_HOST_CPU_SATURATION, ESXI_HOST_MEMORY_SATURATION, ESXI_HOST_MAINTENANCE, ESXI_HOST_NETWORK_PROBLEMS, ESXI_HOST_NO_CONNECTION, ESXI_HOST_SHUTDOWN, ESXI_HOST_DISK_SLOW, ESXI_HOST_UP, ESXI_HOST_TIMEOUT, ESXI_VM_IMPACT_HOST_CPU_SATURATION, ESXI_VM_IMPACT_HOST_MEMORY_SATURATION, DATABASE_CONNECTION_FAILURE, RDS_AZ_FAILOVER_COMPLETED, RDS_AZ_FAILOVER_STARTED, SERVICE_ERROR_RATE_INCREASED, RDS_HIGH_LATENCY, OSI_NIC_UTILIZATION_HIGH, OSI_NIC_ERRORS_HIGH, PGI_HAPROXY_QUEUED_REQUESTS_HIGH, PGI_RMQ_HIGH_FILE_DESC_USAGE, PGI_RMQ_HIGH_MEM_USAGE, PGI_RMQ_HIGH_PROCESS_USAGE, PGI_RMQ_HIGH_SOCKETS_USAGE, OSI_NIC_DROPPED_PACKETS_HIGH, PGI_MYSQL_SLOW_QUERIES_RATE_HIGH, PGI_KEYSTONE_SLOW, PGI_HAPROXY_SESSION_USAGE_HIGH, HOST_LOG_AVAILABILITY, HOST_LOG_ERROR, OSI_GRACEFULLY_SHUTDOWN, HOST_LOG_MATCHED, OSI_UNEXPECTEDLY_UNAVAILABLE, HOST_LOG_PERFORMANCE, HOST_OF_SERVICE_UNAVAILABLE, HTTP_CHECK_GLOBAL_OUTAGE, HTTP_CHECK_LOCAL_OUTAGE, HTTP_CHECK_TEST_LOCATION_SLOWDOWN, ESXI_HOST_DISK_QUEUE_SLOW, LOG_MATCHED, APPLICATION_ERROR_RATE_INCREASED, APPLICATION_JS_FRAMEWORK_DETECTED, AWS_LAMBDA_HIGH_ERROR_RATE, ELB_HIGH_BACKEND_ERROR_RATE, ELB_HIGH_FRONTEND_ERROR_RATE, ELB_HIGH_UNHEALTHY_HOST_RATE, PROCESS_HIGH_GC_ACTIVITY, ESXI_HOST_DATASTORE_LOW_DISK_SPACE, OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE, OSI_LOW_DISK_SPACE, OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE, OSI_DISK_LOW_INODES, PGI_RMQ_LOW_DISK_SPACE, RDS_LOW_STORAGE_SPACE, MARKED_FOR_TERMINATION, PROCESS_MEMORY_RESOURCE_EXHAUSTED, OSI_HIGH_MEMORY, MOBILE_APP_CRASH_RATE_INCREASED, MOBILE_APPLICATION_ERROR_RATE_INCREASED, MOBILE_APPLICATION_OVERLOAD_PREVENTION, MOBILE_APPLICATION_SLOWDOWN, MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD, MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD, MONITORING_UNAVAILABLE, PROCESS_NA_HIGH_LOSS_RATE, PGI_KEYSTONE_UNHEALTHY, ESXI_HOST_OVERLOADED_STORAGE, PERFORMANCE_EVENT, LOG_PERFORMANCE, PGI_LOG_AVAILABILITY, PGI_CRASHED_INFO, PROCESS_CRASHED, PGI_LOG_ERROR, PG_LOW_INSTANCE_COUNT, PGI_LOG_MATCHED, PGI_MEMDUMP, PGI_LOG_PERFORMANCE, PROCESS_RESTART, PGI_UNAVAILABLE, RDS_HIGH_CPU, RDS_LOW_MEMORY, RDS_OF_SERVICE_UNAVAILABLE, RESOURCE_CONTENTION_EVENT, SERVICE_SLOWDOWN, RDS_RESTART, RDS_RESTART_SEQUENCE, PGI_OF_SERVICE_UNAVAILABLE, OSI_SLOW_DISK, SYNTHETIC_NODE_OUTAGE, SYNTHETIC_PRIVATE_LOCATION_OUTAGE, EXTERNAL_SYNTHETIC_TEST_OUTAGE, EXTERNAL_SYNTHETIC_TEST_SLOWDOWN, PROCESS_THREADS_RESOURCE_EXHAUSTED, SERVICE_UNEXPECTED_HIGH_LOAD, SERVICE_UNEXPECTED_LOW_LOAD, ESXI_VM_DISCONNECTED, OPENSTACK_VM_LAUNCH_FAILED, ESXI_HOST_VM_MOTION_LEFT, ESXI_HOST_VM_MOTION_ARRIVED, ESXI_VM_MOTION, OPENSTACK_VM_MOTION, ESXI_VM_POWER_OFF, ESXI_VM_SHUTDOWN, OPENSTACK_HOST_VM_SHUTDOWN, ESXI_VM_START, ESXI_HOST_VM_STARTED, OPENSTACK_HOST_VM_STARTED
            until: (String) If specified, the schedule won't trigger executions after the given date
            value: (String) Contains JSON encoded trigger configuration if the trigger type is neither davis_event, davis_problem or event. It requires the attribute type to be set in combination
            with_items: '(String) Iterates over items in a list, allowing actions to be executed repeatedly. Example: Specifying item in [1, 2, 3] here will execute the task three times for the numbers 1, 2 and 3 - with the current number available for scripting using the expression {{ _.item }}'
            x: (Number) x-coordinate for layouting
            "y": (Number) y-coordinate for layouting
        importStatements: []
    dynatrace_autotag Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_autotag Resource - terraform-provider-dynatrace
        title: dynatrace_autotag Resource - terraform-provider-dynatrace
        argumentDocs:
            AZURE_TO_PG: ': Apply to process groups connected to matching Azure entities'
            AZURE_TO_SERVICE: ': Apply to services provided by matching Azure entities'
            CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE: ': Apply to custom devices in matching custom device groups'
            HOST_TO_PROCESS_GROUP_INSTANCE: ': Apply to processes running on matching hosts'
            PROCESS_GROUP_TO_HOST: ': Apply to underlying hosts of matching process groups'
            PROCESS_GROUP_TO_SERVICE: ': Apply to all services provided by matching process groups'
            SERVICE_TO_HOST_LIKE: ': Apply to underlying hosts of matching services'
            SERVICE_TO_PROCESS_GROUP_LIKE: ': Apply to underlying process groups of matching services'
            application_type: (Block List) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            application_type_comparison: (Block List, Deprecated) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            attribute: (String) The attribute to be used for comparision
            azure_compute_mode: (Block List, Deprecated) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_compute_mode_comparison: (Block List) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_sku: (Block List) Comparison for AZURE_SKU attributes (see below for nested schema)
            azure_sku_comparision: (Block List, Deprecated) Comparison for AZURE_SKU attributes (see below for nested schema)
            base_comparison_basic: (Block List, Deprecated) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            base_condition_key: (Block List, Deprecated) Fallback for not yet known type (see below for nested schema)
            bitness: (Block List) Comparison for BITNESS attributes (see below for nested schema)
            bitness_comparision: (Block List, Deprecated) Comparison for BITNESS attributes (see below for nested schema)
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or insensitive (false)
            cloud_type: (Block List) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            cloud_type_comparison: (Block List, Deprecated) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            comparison: (Block List) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            conditions: (Block Set) A list of matching rules for the management zone. The management zone applies only if all conditions are fulfilled (see below for nested schema)
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the CONTEXTLESS value
            custom_application_type: (Block List) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_application_type_comparison: (Block List, Deprecated) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_host_metadata: (Block List) Key for Custom Host Metadata (see below for nested schema)
            custom_host_metadata_condition_key: (Block List, Deprecated) Key for Custom Host Metadata (see below for nested schema)
            custom_process_metadata: (Block List) Key for Custom Process Metadata (see below for nested schema)
            custom_process_metadata_condition_key: (Block List, Deprecated) Key for Custom Process Metadata (see below for nested schema)
            database_topology: (Block List) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            database_topology_comparison: (Block List, Deprecated) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            dcrum_decoder: (Block List) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dcrum_decoder_comparison: (Block List, Deprecated) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            description: (String) The description of the auto-tag.
            dynamic_key: '(Block List, Min: 1, Max: 1) The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key (see below for nested schema)'
            enabled: (Boolean) The rule is enabled (true) or disabled (false)
            entity: (Block List) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_id_comparison: (Block List, Deprecated) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_selector_based_rule: (Block Set) A list of entity-selector based rules for management zone usage. If several rules are specified, the or logic applies (see below for nested schema)
            host_tech: (Block List) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            hypervisor: (Block List) Comparison for HYPERVISOR_TYPE attributes (see below for nested schema)
            hypervisor_type_comparision: (Block List, Deprecated) hypervisor_type_comparision is deprecated. Use hypervisor instead (see below for nested schema)
            id: (String) The ID of this resource.
            indexed_name: (Block List) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_name_comparison: (Block List, Deprecated) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_string: (Block List) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_string_comparison: (Block List, Deprecated) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_tag: (Block List) Comparison for INDEXED_TAG attributes (see below for nested schema)
            indexed_tag_comparison: (Block List, Deprecated) Comparison for INDEXED_TAG attributes (see below for nested schema)
            integer: (Block List) Comparison for INTEGER attributes (see below for nested schema)
            integer_comparison: (Block List, Deprecated) Comparison for INTEGER attributes (see below for nested schema)
            ipaddress: (Block List) Comparison for IP_ADDRESS attributes (see below for nested schema)
            ipaddress_comparison: (Block List, Deprecated) Comparison for IP_ADDRESS attributes (see below for nested schema)
            key: (Block List) Fallback for not yet known type (see below for nested schema)
            mobile_platform: (Block List) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            mobile_platform_comparison: (Block List, Deprecated) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            name: (String) The name of the auto-tag, which is applied to entities.  Additionally you can specify a valueFormat in the tag rule. In that case the tag is used in the name:valueFormat format.  For example you can extend the Infrastructure tag to Infrastructure:Windows and Infrastructure:Linux.
            negate: (Boolean) Reverses the operator. For example it turns the begins with into does not begin with
            normalization: (String) Changes applied to the value after applying the value format. Possible values are LEAVE_TEXT_AS_IS, TO_LOWER_CASE and TO_UPPER_CASE. Default is LEAVE_TEXT_AS_IS
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true
            os_arch: (Block List) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            os_type: (Block List) Comparison for OS_TYPE attributes (see below for nested schema)
            osarchitecture_comparison: (Block List, Deprecated) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            ostype_comparison: (Block List, Deprecated) Comparison for OS_TYPE attributes (see below for nested schema)
            paas_type: (Block List) Comparison for PAAS_TYPE attributes (see below for nested schema)
            paas_type_comparison: (Block List, Deprecated) Comparison for PAAS_TYPE attributes (see below for nested schema)
            process_metadata: (Block List) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            process_metadata_condition_key: (Block List, Deprecated) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            propagation_types: '(List of String) How to apply the management zone to underlying entities:'
            rules: (Block Set) A list of rules for management zone usage.  Each rule is evaluated independently of all other rules (see below for nested schema)
            selector: (String) The entity selector string, by which the entities are selected
            service_topology: (Block List) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_topology_comparison: (Block List, Deprecated) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_type: (Block List) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            service_type_comparison: (Block List, Deprecated) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            simple_host_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            simple_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            source: (String) The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
            string: (Block List) Comparison for STRING attributes (see below for nested schema)
            string_comparison: (Block List, Deprecated) Comparison for STRING attributes (see below for nested schema)
            string_condition_key: (Block List, Deprecated) The key for dynamic attributes of the STRING type (see below for nested schema)
            string_key: (Block List) The key for dynamic attributes of the STRING type (see below for nested schema)
            synthetic_engine: (Block List) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            synthetic_engine_type_comparison: (Block List, Deprecated) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            tag: (Block List) Comparison for TAG attributes (see below for nested schema)
            tag_comparison: (Block List, Deprecated) Comparison for TAG attributes (see below for nested schema)
            tech: (Block List) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_autotag: downloads all existing autotag configuration
            type: (String) The type of Dynatrace entities the management zone can be applied to
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to compare to
            value_format: (String) The value of the entity-selector-based auto-tag. If specified, the tag is used in the name:valueFormat format.
            verbatim_type: (String) Non-predefined technology, use for custom technologies
        importStatements: []
    dynatrace_autotag_v2 Resource - terraform-provider-dynatrace:
        subCategory: Tags
        description: The resource
        name: dynatrace_autotag_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_autotag_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute_rule: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            azure_to_pgpropagation: (Boolean) Apply to process groups connected to matching Azure entities
            azure_to_service_propagation: (Boolean) Apply to services provided by matching Azure entities
            builtin:tags.auto-tagging: )
            case_sensitive: (Boolean) Case sensitive
            condition: '(Block Set, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            description: (String) Description
            dynamic_key: (String) Dynamic key
            dynamic_key_source: (String) Key source
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            entity_id: (String) Value
            entity_selector: (String) The documentation of the entity selector can be found here.
            entity_type: '(String) Possible Values: APPLICATION, AWS_APPLICATION_LOAD_BALANCER, AWS_CLASSIC_LOAD_BALANCER, AWS_NETWORK_LOAD_BALANCER, AWS_RELATIONAL_DATABASE_SERVICE, AZURE, CUSTOM_APPLICATION, CUSTOM_DEVICE, DCRUM_APPLICATION, ESXI_HOST, EXTERNAL_SYNTHETIC_TEST, HOST, HTTP_CHECK, MOBILE_APPLICATION, PROCESS_GROUP, SERVICE, SYNTHETIC_TEST'
            enum_value: (String) Value
            host_to_pgpropagation: (Boolean) Apply to processes running on matching hosts
            id: (String) The ID of this resource.
            integer_value: (Number) Value
            key: '(String) Possible Values: APPMON_SERVER_NAME, APPMON_SYSTEM_PROFILE_NAME, AWS_ACCOUNT_ID, AWS_ACCOUNT_NAME, AWS_APPLICATION_LOAD_BALANCER_NAME, AWS_APPLICATION_LOAD_BALANCER_TAGS, AWS_AUTO_SCALING_GROUP_NAME, AWS_AUTO_SCALING_GROUP_TAGS, AWS_AVAILABILITY_ZONE_NAME, AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS, AWS_CLASSIC_LOAD_BALANCER_NAME, AWS_CLASSIC_LOAD_BALANCER_TAGS, AWS_NETWORK_LOAD_BALANCER_NAME, AWS_NETWORK_LOAD_BALANCER_TAGS, AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME, AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT, AWS_RELATIONAL_DATABASE_SERVICE_ENGINE, AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS, AWS_RELATIONAL_DATABASE_SERVICE_NAME, AWS_RELATIONAL_DATABASE_SERVICE_PORT, AWS_RELATIONAL_DATABASE_SERVICE_TAGS, AZURE_ENTITY_NAME, AZURE_ENTITY_TAGS, AZURE_MGMT_GROUP_NAME, AZURE_MGMT_GROUP_UUID, AZURE_REGION_NAME, AZURE_SCALE_SET_NAME, AZURE_SUBSCRIPTION_NAME, AZURE_SUBSCRIPTION_UUID, AZURE_TENANT_NAME, AZURE_TENANT_UUID, AZURE_VM_NAME, BROWSER_MONITOR_NAME, BROWSER_MONITOR_TAGS, CLOUD_APPLICATION_LABELS, CLOUD_APPLICATION_NAME, CLOUD_APPLICATION_NAMESPACE_LABELS, CLOUD_APPLICATION_NAMESPACE_NAME, CLOUD_FOUNDRY_FOUNDATION_NAME, CLOUD_FOUNDRY_ORG_NAME, CUSTOM_APPLICATION_NAME, CUSTOM_APPLICATION_PLATFORM, CUSTOM_APPLICATION_TAGS, CUSTOM_APPLICATION_TYPE, CUSTOM_DEVICE_DNS_ADDRESS, CUSTOM_DEVICE_GROUP_NAME, CUSTOM_DEVICE_GROUP_TAGS, CUSTOM_DEVICE_IP_ADDRESS, CUSTOM_DEVICE_METADATA, CUSTOM_DEVICE_NAME, CUSTOM_DEVICE_PORT, CUSTOM_DEVICE_TAGS, CUSTOM_DEVICE_TECHNOLOGY, DATA_CENTER_SERVICE_DECODER_TYPE, DATA_CENTER_SERVICE_IP_ADDRESS, DATA_CENTER_SERVICE_METADATA, DATA_CENTER_SERVICE_NAME, DATA_CENTER_SERVICE_PORT, DATA_CENTER_SERVICE_TAGS, DOCKER_CONTAINER_NAME, DOCKER_FULL_IMAGE_NAME, DOCKER_IMAGE_VERSION, EC2_INSTANCE_AMI_ID, EC2_INSTANCE_AWS_INSTANCE_TYPE, EC2_INSTANCE_AWS_SECURITY_GROUP, EC2_INSTANCE_BEANSTALK_ENV_NAME, EC2_INSTANCE_ID, EC2_INSTANCE_NAME, EC2_INSTANCE_PRIVATE_HOST_NAME, EC2_INSTANCE_PUBLIC_HOST_NAME, EC2_INSTANCE_TAGS, ENTERPRISE_APPLICATION_DECODER_TYPE, ENTERPRISE_APPLICATION_IP_ADDRESS, ENTERPRISE_APPLICATION_METADATA, ENTERPRISE_APPLICATION_NAME, ENTERPRISE_APPLICATION_PORT, ENTERPRISE_APPLICATION_TAGS, ESXI_HOST_CLUSTER_NAME, ESXI_HOST_HARDWARE_MODEL, ESXI_HOST_HARDWARE_VENDOR, ESXI_HOST_NAME, ESXI_HOST_PRODUCT_NAME, ESXI_HOST_PRODUCT_VERSION, ESXI_HOST_TAGS, EXTERNAL_MONITOR_ENGINE_DESCRIPTION, EXTERNAL_MONITOR_ENGINE_NAME, EXTERNAL_MONITOR_ENGINE_TYPE, EXTERNAL_MONITOR_NAME, EXTERNAL_MONITOR_TAGS, GEOLOCATION_SITE_NAME, GOOGLE_CLOUD_PLATFORM_ZONE_NAME, GOOGLE_COMPUTE_INSTANCE_ID, GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE, GOOGLE_COMPUTE_INSTANCE_NAME, GOOGLE_COMPUTE_INSTANCE_PROJECT, GOOGLE_COMPUTE_INSTANCE_PROJECT_ID, GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES, HOST_AIX_LOGICAL_CPU_COUNT, HOST_AIX_SIMULTANEOUS_THREADS, HOST_AIX_VIRTUAL_CPU_COUNT, HOST_ARCHITECTURE, HOST_AWS_NAME_TAG, HOST_AZURE_COMPUTE_MODE, HOST_AZURE_SKU, HOST_AZURE_WEB_APPLICATION_HOST_NAMES, HOST_AZURE_WEB_APPLICATION_SITE_NAMES, HOST_BITNESS, HOST_BOSH_AVAILABILITY_ZONE, HOST_BOSH_DEPLOYMENT_ID, HOST_BOSH_INSTANCE_ID, HOST_BOSH_INSTANCE_NAME, HOST_BOSH_NAME, HOST_BOSH_STEMCELL_VERSION, HOST_CLOUD_TYPE, HOST_CPU_CORES, HOST_CUSTOM_METADATA, HOST_DETECTED_NAME, HOST_GROUP_ID, HOST_GROUP_NAME, HOST_HYPERVISOR_TYPE, HOST_IP_ADDRESS, HOST_KUBERNETES_LABELS, HOST_LOGICAL_CPU_CORES, HOST_NAME, HOST_ONEAGENT_CUSTOM_HOST_NAME, HOST_OS_TYPE, HOST_OS_VERSION, HOST_PAAS_MEMORY_LIMIT, HOST_PAAS_TYPE, HOST_TAGS, HOST_TECHNOLOGY, HTTP_MONITOR_NAME, HTTP_MONITOR_TAGS, KUBERNETES_CLUSTER_NAME, KUBERNETES_NODE_NAME, KUBERNETES_SERVICE_NAME, MOBILE_APPLICATION_NAME, MOBILE_APPLICATION_PLATFORM, MOBILE_APPLICATION_TAGS, NAME_OF_COMPUTE_NODE, OPENSTACK_ACCOUNT_NAME, OPENSTACK_ACCOUNT_PROJECT_NAME, OPENSTACK_AVAILABILITY_ZONE_NAME, OPENSTACK_PROJECT_NAME, OPENSTACK_REGION_NAME, OPENSTACK_VM_INSTANCE_TYPE, OPENSTACK_VM_NAME, OPENSTACK_VM_SECURITY_GROUP, PROCESS_GROUP_AZURE_HOST_NAME, PROCESS_GROUP_AZURE_SITE_NAME, PROCESS_GROUP_CUSTOM_METADATA, PROCESS_GROUP_DETECTED_NAME, PROCESS_GROUP_ID, PROCESS_GROUP_LISTEN_PORT, PROCESS_GROUP_NAME, PROCESS_GROUP_PREDEFINED_METADATA, PROCESS_GROUP_TAGS, PROCESS_GROUP_TECHNOLOGY, PROCESS_GROUP_TECHNOLOGY_EDITION, PROCESS_GROUP_TECHNOLOGY_VERSION, QUEUE_NAME, QUEUE_TECHNOLOGY, QUEUE_VENDOR, SERVICE_AKKA_ACTOR_SYSTEM, SERVICE_CTG_SERVICE_NAME, SERVICE_DATABASE_HOST_NAME, SERVICE_DATABASE_NAME, SERVICE_DATABASE_TOPOLOGY, SERVICE_DATABASE_VENDOR, SERVICE_DETECTED_NAME, SERVICE_ESB_APPLICATION_NAME, SERVICE_IBM_CTG_GATEWAY_URL, SERVICE_MESSAGING_LISTENER_CLASS_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REMOTE_ENDPOINT, SERVICE_REMOTE_SERVICE_NAME, SERVICE_TAGS, SERVICE_TECHNOLOGY, SERVICE_TECHNOLOGY_EDITION, SERVICE_TECHNOLOGY_VERSION, SERVICE_TOPOLOGY, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_ENDPOINT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, VMWARE_DATACENTER_NAME, VMWARE_VM_NAME, WEB_APPLICATION_NAME, WEB_APPLICATION_NAME_PATTERN, WEB_APPLICATION_TAGS, WEB_APPLICATION_TYPE'
            name: (String) Tag name
            operator: '(String) Possible Values: BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, IS_IP_IN_RANGE, LOWER_THAN, LOWER_THAN_OR_EQUAL, NOT_BEGINS_WITH, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_EXISTS, NOT_GREATER_THAN, NOT_GREATER_THAN_OR_EQUAL, NOT_IS_IP_IN_RANGE, NOT_LOWER_THAN, NOT_LOWER_THAN_OR_EQUAL, NOT_REGEX_MATCHES, NOT_TAG_KEY_EQUALS, REGEX_MATCHES, TAG_KEY_EQUALS'
            pg_to_host_propagation: (Boolean) Apply to underlying hosts of matching process groups
            pg_to_service_propagation: (Boolean) Apply to all services provided by the process groups
            rule: '(Block Set, Min: 1) (see below for nested schema)'
            rules: '(Block List, Max: 1) Rules (see below for nested schema)'
            service_to_host_propagation: (Boolean) Apply to underlying hosts of matching services
            service_to_pgpropagation: (Boolean) Apply to underlying process groups of matching services
            string_value: (String) Value
            tag: '(String) Format: [CONTEXT]tagKey:tagValue'
            terraform-provider-dynatrace -export dynatrace_autotag_v2: downloads all existing automatically applied tags
            type: '(String) Possible Values: ME, SELECTOR'
            value_format: (String) Type '{' for placeholder suggestions
            value_normalization: '(String) Possible Values: Leavetextas_is, Tolowercase, Touppercase'
        importStatements: []
    dynatrace_aws_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_aws_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_aws_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.infrastructure-aws: )
            connection_errors_per_minute: (Number) Number of backend connection errors is higher than
            cpu_usage: (Number) CPU usage is higher than
            custom_thresholds: '(Block List, Max: 1) Alert if the condition is met in 3 out of 5 samples (see below for nested schema)'
            detection_mode: '(String) Possible Values: Auto, Custom'
            ec_2_candidate_high_cpu_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            elb_high_connection_errors_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            failed_invocations_rate: (Number) Failed invocations rate is higher than
            free_memory: (Number) Freeable memory is lower than
            free_storage_percentage: (Number) Free storage space divided by allocated storage is lower than
            id: (String) The ID of this resource.
            lambda_high_error_rate_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            rds_high_cpu_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            rds_high_memory_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            rds_high_write_read_latency_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            rds_low_storage_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            rds_restarts_sequence_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            read_write_latency: (Number) Read/write latency is higher than
            restarts_per_minute: (Number) Number of restarts per minute is equal or higher than
            swap_usage: (Number) Swap usage is higher than
            terraform-provider-dynatrace -export dynatrace_aws_anomalies: downloads all existing AWS anomaly detection configuration
        importStatements: []
    dynatrace_aws_credentials Resource - terraform-provider-dynatrace:
        subCategory: Credentials
        description: The resource
        name: dynatrace_aws_credentials Resource - terraform-provider-dynatrace
        title: dynatrace_aws_credentials Resource - terraform-provider-dynatrace
        argumentDocs:
            access_key: (String) the access key
            account_id: (String) the ID of the Amazon account
            authentication_data: '(Block List, Min: 1, Max: 1) credentials for the AWS authentication (see below for nested schema)'
            dimensions: (List of String) a list of metric's dimensions names
            external_id: (String) (Read only) the external ID token for setting an IAM role. You can obtain it with the GET /aws/iamExternalId request
            iam_role: (String) the IAM role to be used by Dynatrace to get monitoring data
            id: (String) The ID of this resource.
            label: (String) The name of the credentials
            monitored_metrics: (Block Set) a list of metrics to be monitored for this service (see below for nested schema)
            name: (String) the name of the supporting service
            partition_type: (String) The type of the AWS partition
            secret_key: (String, Sensitive) the secret access key
            statistic: '(String) the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM'
            supporting_services_managed_in_dynatrace: (Boolean) If enabled (true) the attribute supporting_services will not get synchronized with Dynatrace. You will be able to manage them via WebUI without interference by Terraform.
            supporting_services_to_monitor: (Block List) supporting services to be monitored (see below for nested schema)
            tagged_only: (Boolean) Monitor only resources which have specified AWS tags (true) or all resources (false)
            tags_to_monitor: '(Block List, Max: 10) AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the tagged_only parameter is set to true (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_aws_credentials: downloads all existing AWS credentials configuration
            unknowns: (String) Any attributes that aren't yet supported by this provider
            value: (String) the value of the AWS tag
        importStatements: []
    dynatrace_aws_service Resource - terraform-provider-dynatrace:
        subCategory: Credentials
        description: The resource
        name: dynatrace_aws_service Resource - terraform-provider-dynatrace
        title: dynatrace_aws_service Resource - terraform-provider-dynatrace
        argumentDocs:
            built_in: (Boolean) This attribute is automatically set to true if Dynatrace considers the supporting service with the given name to be a built-in service
            credentials_id: (String) the ID of the azure credentials this supported service belongs to
            dimensions: (Set of String) a list of metric's dimensions names
            id: (String) The ID of this resource.
            metric: (Block Set) A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended metrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider will automatically add them during terraform apply. This usually results in a non-empty plan, until all of the recommended metrics are present within your configuration. For services considered built-in by Dynatrace any metrics specified here will be ignored - Dynatrace enforces a fixed set of metrics for these services. (see below for nested schema)
            name: (String) The name of the supporting service.
            required_metrics: (String) Used internally by the Terraform Provider in order to remember the metrics enforced by Dynatrace
            statistic: (String) Possible values are AVERAGE, AVG_MIN_MAX, MAXIMUM, MINIMUM, SAMPLE_COUNT and SUM
            use_recommended_metrics: (Boolean) If true Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any metric specified will be therefore ignored.
        importStatements: []
    dynatrace_azure_credentials Resource - terraform-provider-dynatrace:
        subCategory: Credentials
        description: The resource
        name: dynatrace_azure_credentials Resource - terraform-provider-dynatrace
        title: dynatrace_azure_credentials Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The monitoring is enabled (true) or disabled (false).  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected
            app_id: (String) The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
            auto_tagging: (Boolean) The automatic capture of Azure tags is on (true) or off (false)
            dimensions: (List of String) a list of metric's dimensions names
            directory_id: (String) The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
            id: (String) The ID of this resource.
            key: (String, Sensitive) The secret key associated with the Application ID.  For security reasons, GET requests return this field as null. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
            label: (String) The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters .+-_ are allowed
            monitor_only_excluding_tag_pairs: '(Block List, Max: 20) A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with any of the specified tags is monitored.  Only applicable when the monitorOnlyTaggedEntities parameter is set to true. (see below for nested schema)'
            monitor_only_tag_pairs: '(Block List, Max: 20) A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with any of the specified tags is monitored.  Only applicable when the monitorOnlyTaggedEntities parameter is set to true (see below for nested schema)'
            monitor_only_tagged_entities: (Boolean) Monitor only resources that have specified Azure tags (true) or all resources (false).
            monitored_metrics: (Block List) A list of Azure tags to be monitored.  You can specify up to 10 tags. A resource tagged with any of the specified tags is monitored.  Only applicable when the monitorOnlyTaggedEntities parameter is set to true (see below for nested schema)
            name: (String) The name of the tag.
            supporting_services: (Block List) A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server. (see below for nested schema)
            supporting_services_managed_in_dynatrace: (Boolean) If enabled (true) the attribute supporting_services will not get synchronized with Dynatrace. You will be able to manage them via WebUI without interference by Terraform.
            terraform-provider-dynatrace -export dynatrace_azure_credentials: downloads all existing Azure credentials configuration
            unknowns: (String) Any attributes that aren't yet supported by this provider
            value: (String) The value of the tag.   If set to null, then resources with any value of the tag are monitored.
        importStatements: []
    dynatrace_azure_service Resource - terraform-provider-dynatrace:
        subCategory: Credentials
        description: The resource
        name: dynatrace_azure_service Resource - terraform-provider-dynatrace
        title: dynatrace_azure_service Resource - terraform-provider-dynatrace
        argumentDocs:
            built_in: (Boolean) This attribute is automatically set to true if Dynatrace considers the supporting service with the given name to be a built-in service
            credentials_id: (String) the ID of the azure credentials this supported service belongs to
            dimensions: (Set of String) a list of metric's dimensions names
            id: (String) The ID of this resource.
            metric: (Block Set) A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended metrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider will automatically add them during terraform apply. This usually results in a non-empty plan, until all of the recommended metrics are present within your configuration. For services considered built-in by Dynatrace any metrics specified here will be ignored - Dynatrace enforces a fixed set of metrics for these services. (see below for nested schema)
            name: (String) The name of the supporting service.
            required_metrics: (String) Used internally by the Terraform Provider in order to remember the metrics enforced by Dynatrace
            use_recommended_metrics: (Boolean) If true Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any metric specified will be therefore ignored.
        importStatements: []
    dynatrace_browser_monitor Resource - terraform-provider-dynatrace:
        subCategory: Browser Monitors
        description: The resource
        name: dynatrace_browser_monitor Resource - terraform-provider-dynatrace
        title: dynatrace_browser_monitor Resource - terraform-provider-dynatrace
        argumentDocs:
            action_limit: (Number) Track up to n cascading setTimeout calls
            affected_locations: (Number) The number of affected locations to trigger an alert
            anomaly_detection: '(Block List, Max: 1) The anomaly detection configuration. (see below for nested schema)'
            authentication: '(Block List, Max: 1) The login credentials to bypass the browser login mask (see below for nested schema)'
            bandwidth: '(Block List, Max: 1) The emulated device of the monitor—holds either the parameters of the custom device or the name and orientation of the preconfigured device.'
            block: (Set of String) Block these URLs
            button: (Number) the mouse button to be used for the click
            bypass_csp: (Boolean) Bypass Content Security Policy of monitored pages
            click: '(Block List, Max: 1) Properties specified for a click event (see below for nested schema)'
            code: (String) The JavaScript code to be executed in this event
            configuration: '(Block List, Max: 1) The setup of the monitor (see below for nested schema)'
            consecutive_runs: (Number) The number of consecutive fails to trigger an alert
            context: (String) The origin of the tag. Supported values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES.
            cookie: '(Block List, Min: 1) A request cookie (see below for nested schema)'
            cookies: '(Block List, Max: 1) These cookies are added before execution of the first step (see below for nested schema)'
            credential: '(Block List, Max: 1) Credentials for this event (see below for nested schema)'
            creds: (String) A reference to the entry within the credential vault
            custom_properties: (String) Additional Javascript Agent Properties
            description: (String) A short description of the event to appear in the UI
            device: '(Block List, Max: 1) The emulated device of the monitor—holds either the parameters of the custom device or the name and orientation of the preconfigured device.'
            disable_web_security: (Boolean) No documentation available
            domain: (String) The domain of the cookie.
            download: (Number) The download speed of the network, in bytes per second
            enabled: (Boolean) The monitor is enabled (true) or disabled (false).
            event: (Block List) An event (see below for nested schema)
            event_index: (Number) Specify the event to which an ACTION threshold applies
            events: '(Block List, Max: 1) Steps of the clickpath—the first step must always be of the navigate type (see below for nested schema)'
            excluded_elements: (List of String) Query CSS selectors to specify mutation nodes (elements that change) to ignore in Visually complete and Speed index calculation
            excluded_urls: (List of String) Parameters for Visually complete and Speed index calculation
            fail_if_found: (Boolean) The condition of the validation. false means the validation succeeds if the specified content/element is found. true means the validation fails if the specified content/element is found
            field: (String) Either username or password
            frequency: (Number) The frequency of the monitor, in minutes.
            global_outage: (Boolean) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) When enabled (true), generate a problem and send an alert when the monitor is unavailable at all configured locations
            global_outage_policy: (Block List) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) Global outage handling configuration.
            header: '(Block Set, Min: 1) contains an HTTP header of the request (see below for nested schema)'
            headers: '(Block List, Max: 1) The list of HTTP headers to be sent with requests of the monitor (see below for nested schema)'
            height: |-
                (Number) The height of the screen in pixels.
                The maximum allowed width is 1080.
            id: (String) The ID of this resource.
            ignored_error_codes: '(Block List, Max: 1) Ignore specific status codes (see below for nested schema)'
            image_size_threshold: (Number) Use this setting to define the minimum visible area per element (in pixels) for an element to be counted towards Visually complete and Speed index
            inactivity_timeout: (Number) The time the Visually complete module waits for inactivity and no further mutations on the page after the load action
            index: (Number) The index of the option to be selected
            javascript: '(Block List, Max: 1) Properties specified for a javascript event (see below for nested schema)'
            javascript_setttings: '(Block List, Max: 1) Custom JavaScript Agent settings (see below for nested schema)'
            key: (String) The key of the tag.
            key_performance_metrics: '(Block List, Min: 1, Max: 1) The key performance metrics configuration (see below for nested schema)'
            keystrokes: '(Block List, Max: 1) Properties specified for a key strokes event (see below for nested schema)'
            latency: (Number) The latency of the network, in milliseconds
            load_action_kpm: (String) Defines the key performance metric for load actions. Supported values are VISUALLY_COMPLETE, SPEED_INDEX, USER_ACTION_DURATION, TIME_TO_FIRST_BYTE, HTML_DOWNLOADED, DOM_INTERACTIVE, LOAD_EVENT_START and LOAD_EVENT_END.
            loading_time_thresholds: (Block List) Thresholds for loading times (see below for nested schema)
            local_outage: (Boolean) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) When enabled (true), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location
            local_outage_policy: (Block List) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) Local outage handling configuration.
            locations: (Set of String) A list of locations from which the monitor is executed.
            locator: '(Block List, Min: 1) A locator dentifyies the desired element (see below for nested schema)'
            locators: (Block List) The list of locators identifying the desired element (see below for nested schema)
            manually_assigned_apps: (Set of String) A set of manually assigned applications.
            masked: (Boolean) Indicates whether the textValue is encrypted (true) or not (false). Must not be specified if credentials from the vault are being used
            match: |-
                (String) The content to look for on the page.
                Regular expressions are allowed. In that case set isRegex as true. Required for content_match, optional for element_match.
            matching_document_requests: (String) Only apply to document request matching this regex
            milliseconds: (Number) The time to wait, in millisencods. The maximum allowed value is 60000. Required for the type time, not applicable otherwise.
            mobile: |-
                (Boolean) The flag of the mobile device.
                Set to true for mobile devices or false for a desktop or laptop.
            monitor_frames: (Boolean) Capture performance metrics for pages loaded in frames
            mutation_timeout: (Number) The time the Visually complete module waits after an XHR or custom action closes to start the calculation
            name: (String) The name of the monitor.
            navigate: '(Block List, Max: 1) Properties specified for a navigation event (see below for nested schema)'
            network_type: (String) The type of the preconfigured network—when editing in the browser, press Crtl+Spacebar to see the list of available networks
            option: '(Block List, Min: 1) The option to be selected (see below for nested schema)'
            orientation: (String) The orientation of the device. Possible values are portrait or landscape. Desktop and laptop devices are not allowed to use the portrait orientation
            outage_handling: (Block List) Outage handling configuration (see below for nested schema)
            path: (String) The path of the cookie.
            regex: (Boolean) Defines whether match is plain text (false) or a regular expression (true)
            request_index: (Number) Specify the request to which an ACTION threshold applies
            restrictions: (Set of String) Restrict applying headers to a set of URLs
            retry_on_error: (Boolean) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored
            scale_factor: (Number) The pixel ratio of the device.
            script: '(Block List, Max: 1) The Browser Script (see below for nested schema)'
            select: '(Block List, Max: 1) Properties specified for a key strokes event. (see below for nested schema)'
            selections: '(Block List, Min: 1, Max: 1) The options to be selected (see below for nested schema)'
            simulate_blur_event: |-
                (Boolean) Defines whether to blur the text field when it loses focus.
                Set to true to trigger the blur the textValue
            source: (String) The source of the tag. Supported values are USER, RULE_BASED and AUTO.
            status_codes: (String) You can use exact number, range or status class mask. Multiple values can be separated by comma, i.e. 404, 405-410, 5xx
            tag: (Block Set) Tag with source of a Dynatrace entity. (see below for nested schema)
            tags: (Block List) A set of tags assigned to the monitor.
            tap: '(Block List, Max: 1) Properties specified for a tap event (see below for nested schema)'
            target: '(Block List, Max: 1) The tab on which the page should open (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_browser_monitor: downloads all existing browser monitor configuration
            text: (String) The text to enter. Must not be specified if credentials from the vault are being used
            threshold: '(Block List, Min: 1) The list of performance threshold rules (see below for nested schema)'
            thresholds: (Block List) The list of performance threshold rules (see below for nested schema)
            timeout: |-
                (Number) he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
                The maximum allowed value is 60000. Required for the type validation, not applicable otherwise..
            timeout_settings: '(Block List, Max: 1) Custom JavaScript Agent settings (see below for nested schema)'
            total_timeout: (Number) Limit cascading timeouts cumulatively to n ms
            touch_enabled: |-
                (Boolean) The flag of the touchscreen.
                Set to true if the device uses touchscreen. In that case, use can set interaction event as tap.
            type: '(String) The type of the threshold: TOTAL (total loading time) or ACTION (action loading time)'
            upload: (Number) The upload speed of the network, in bytes per second
            url: (String) The URL to navigate to
            user_agent: (String) The user agent of the request
            validate: '(Block List, Max: 1) The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element (see below for nested schema)'
            validation: '(Block List, Min: 1) The element to wait for. Required for the validation type, not applicable otherwise. (see below for nested schema)'
            value: '(String) The value of the cookie. The following symbols are not allowed: ;, ,, \ and ".'
            value_ms: (Number) Notify if monitor takes longer than X milliseconds to load
            vault_id: (String) The ID of the credential within the Credentials Vault
            visually_complete_options: '(Block List, Max: 1) Parameters for Visually complete and Speed index calculation (see below for nested schema)'
            wait: '(Block List, Max: 1) The wait condition for the event—defines how long Dynatrace should wait before the next action is executed (see below for nested schema)'
            wait_for: (String) The time to wait before the next event is triggered. Possible values are page_complete (wait for the page to load completely), network (wait for background network activity to complete), next_action (wait for the next action), time (wait for a specified periodof time) and validation (wait for a specific element to appear)
            width: |-
                (Number) The width of the screen in pixels.
                The maximum allowed width is 1920.
            window: (String) The tab of the target
            xhr_action_kpm: (String) Defines the key performance metric for XHR actions. Supported values are VISUALLY_COMPLETE, USER_ACTION_DURATION, TIME_TO_FIRST_BYTE and RESPONSE_END.
        importStatements: []
    dynatrace_browser_monitor_outage Resource - terraform-provider-dynatrace:
        subCategory: Browser Monitors
        description: The resource
        name: dynatrace_browser_monitor_outage Resource - terraform-provider-dynatrace
        title: dynatrace_browser_monitor_outage Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:synthetic.browser.outage-handling: )
            global_consecutive_outage_count_threshold: (Number) (Field has overlap with dynatrace_browser_monitor) Alert if all locations are unable to access my web application
            global_outages: (Boolean) (Field has overlap with dynatrace_browser_monitor) Generate a problem and send an alert when the monitor is unavailable at all configured locations.
            id: (String) The ID of this resource.
            local_consecutive_outage_count_threshold: (Number) (Field has overlap with dynatrace_browser_monitor) are unable to access my web application
            local_location_outage_count_threshold: (Number) (Field has overlap with dynatrace_browser_monitor) Alert if at least
            local_outages: (Boolean) (Field has overlap with dynatrace_browser_monitor) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.
            retry_on_error: |-
                (Boolean) (Field has overlap with dynatrace_browser_monitor) When enabled, which is the default, failing monitor executions are retried immediately one time to avoid false positives and only the second result is used. When disabled, we use the first result right away.
                Requires ActiveGate version 1.207+ for private locations.
            scope: (String) The scope of this setting (SYNTHETIC_TEST). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_browser_monitor_outage: downloads all existing browser monitor outage handling configuration
        importStatements: []
    dynatrace_browser_monitor_performance Resource - terraform-provider-dynatrace:
        subCategory: Browser Monitors
        description: The resource
        name: dynatrace_browser_monitor_performance Resource - terraform-provider-dynatrace
        title: dynatrace_browser_monitor_performance Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:synthetic.browser.performance-thresholds: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            event: (String) Synthetic event
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (SYNTHETIC_TEST)
            terraform-provider-dynatrace -export dynatrace_browser_monitor_performance: downloads all existing browser monitor performance thresholds configuration
            threshold: '(Block Set, Min: 1) (see below for nested schema)'
            thresholds: '(Block List, Max: 1) Performance thresholds (see below for nested schema)'
        importStatements: []
    dynatrace_builtin_process_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Process Monitoring
        description: The resource
        name: dynatrace_builtin_process_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_builtin_process_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            aspnetcore: '(Boolean) Rule id: 3 - Do monitor processes if ASP.NET Core application path exists'
            aspnetcore_agentlistener: '(Boolean) Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains ''Agent.Listener'''
            aspnetcore_agentworker: '(Boolean) Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains ''Agent.Worker'''
            builtin:process.built-in-process-monitoring-rule: )
            cf: '(Boolean) Rule id: 37 - Do monitor processes if Cloud Foundry application exists'
            cf_appsmanagerjs: (Boolean) Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
            container: '(Boolean) Rule id: 41 - Do monitor processes if container name exists'
            docker_pauseamd64: '(Boolean) Rule id: 39 - Do not monitor processes if Docker stripped image contains ''pause-amd64'''
            exe_adapter: '(Boolean) Rule id: 7 - Do monitor processes if EXE name equals ''adapter'''
            exe_agentlistener: '(Boolean) Rule id: 63 - Do not monitor processes if EXE name contains ''Agent.Listener'''
            exe_agentworker: '(Boolean) Rule id: 61 - Do not monitor processes if EXE name contains ''Agent.Worker'''
            exe_auctioneer: '(Boolean) Rule id: 8 - Do monitor processes if EXE name equals ''auctioneer'''
            exe_auditbeat: '(Boolean) Rule id: 52 - Do not monitor processes if EXE name equals ''auditbeat'''
            exe_bbs: '(Boolean) Rule id: 9 - Do monitor processes if EXE name equals ''bbs'''
            exe_caddy: '(Boolean) Rule id: 5 - Do monitor processes if EXE name equals ''caddy'''
            exe_caliconode: '(Boolean) Rule id: 58 - Do not monitor processes if EXE name equals ''calico-node'''
            exe_casclient: '(Boolean) Rule id: 59 - Do not monitor processes if EXE name equals ''casclient.exe'''
            exe_ccuploader: '(Boolean) Rule id: 10 - Do monitor processes if EXE name equals ''cc-uploader'''
            exe_doppler: '(Boolean) Rule id: 11 - Do monitor processes if EXE name equals ''doppler'''
            exe_filebeat: '(Boolean) Rule id: 49 - Do not monitor processes if EXE name equals ''filebeat'''
            exe_flexnetjobexecutorservice: '(Boolean) Rule id: 65 - Do not monitor processes if EXE name equals ''FlexNetJobExecutorService'''
            exe_flexnetmaintenanceremotingservice: '(Boolean) Rule id: 66 - Do not monitor processes if EXE name equals ''FlexNetMaintenanceRemotingService'''
            exe_functionbeat: '(Boolean) Rule id: 54 - Do not monitor processes if EXE name equals ''functionbeat'''
            exe_gorouter: '(Boolean) Rule id: 12 - Do monitor processes if EXE name equals ''gorouter'''
            exe_grootfs: '(Boolean) Rule id: 55 - Do not monitor processes if EXE name equals ''grootfs'''
            exe_heartbeat: '(Boolean) Rule id: 53 - Do not monitor processes if EXE name equals ''heartbeat'''
            exe_influxd: '(Boolean) Rule id: 6 - Do monitor processes if EXE name equals ''influxd'''
            exe_locket: '(Boolean) Rule id: 13 - Do monitor processes if EXE name equals ''locket'''
            exe_metricbeat: '(Boolean) Rule id: 50 - Do not monitor processes if EXE name equals ''metricbeat'''
            exe_metron: '(Boolean) Rule id: 14 - Do monitor processes if EXE name equals ''metron'''
            exe_mqsi: '(Boolean) Rule id: 48 - Do not monitor processes if EXE name begins with ''mqsi'''
            exe_oc: '(Boolean) Rule id: 44 - Do not monitor processes if EXE name equals ''oc'''
            exe_optcnibinhostlocal: '(Boolean) Rule id: 46 - Do not monitor processes if EXE path equals ''/opt/cni/bin/host-local'''
            exe_packetbeat: '(Boolean) Rule id: 51 - Do not monitor processes if EXE name equals ''packetbeat'''
            exe_phpcgi: '(Boolean) Rule id: 2 - Do not monitor processes if EXE name equals ''php-cgi'''
            exe_rep: '(Boolean) Rule id: 16 - Do monitor processes if EXE name equals ''rep'''
            exe_routeemitter: '(Boolean) Rule id: 17 - Do monitor processes if EXE name equals ''route-emitter'''
            exe_routeregistrar: '(Boolean) Rule id: 18 - Do monitor processes if EXE name equals ''route-registrar'''
            exe_routingapi: '(Boolean) Rule id: 19 - Do monitor processes if EXE name equals ''routing-api'''
            exe_schedular: '(Boolean) Rule id: 20 - Do monitor processes if EXE name equals ''scheduler'''
            exe_silkdaemon: '(Boolean) Rule id: 21 - Do monitor processes if EXE name equals ''silk-daemon'''
            exe_switchboard: '(Boolean) Rule id: 22 - Do monitor processes if EXE name equals ''switchboard'''
            exe_syslogdrainbinder: '(Boolean) Rule id: 23 - Do monitor processes if EXE name equals ''syslog_drain_binder'''
            exe_tardis: '(Boolean) Rule id: 56 - Do not monitor processes if EXE name equals ''tardis'''
            exe_tmpbuildpacks: '(Boolean) Rule id: 43 - Do not monitor processes if EXE path begins with ''/tmp/buildpacks/'''
            exe_tpswatcher: '(Boolean) Rule id: 24 - Do monitor processes if EXE name equals ''tps-watcher'''
            exe_trafficcontroller: '(Boolean) Rule id: 25 - Do monitor processes if EXE name equals ''trafficcontroller'''
            exe_uipath: '(Boolean) Rule id: 70 - Do not monitor processes if EXE name contains ''UiPath'''
            exe_userbinpiper: '(Boolean) Rule id: 67 - Do not monitor processes if EXE path equals ''/usr/bin/piper'''
            exe_w3wp: '(Boolean) Rule id: 4 - Do monitor processes if EXE name equals ''w3wp.exe'''
            go_static: '(Boolean) Rule id: 47 - Do not monitor processes if Go Binary Linkage equals ''static'''
            host_group_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            jar_dtibmmqconnector: '(Boolean) Rule id: 60 - Do not monitor processes if JAR file name equals ''dynatrace_ibm_mq_connector.jar'''
            jar_eclipseequinox: '(Boolean) Rule id: 57 - Do not monitor processes if Java JAR file begins with ''org.eclipse.equinox.launcher'''
            k8s_cassandraoperator: '(Boolean) Rule id: 69 - Do not monitor processes if Kubernetes container name equals ''cassandra-operator'''
            k8s_containerpod: '(Boolean) Rule id: 38 - Do not monitor processes if Kubernetes container name equals ''POD'''
            k8s_namespace: '(Boolean) Rule id: 40 - Do monitor processes if Kubernetes namespace exists'
            node_binpm2: (Boolean) Do not monitor processes if Node.js script equals 'bin/pm2'
            node_corepack: '(Boolean) Rule id: 68 - Do not monitor processes if Node.js application equals ''corepack'''
            node_grunt: '(Boolean) Rule id: 28 - Do not monitor processes if Node.js application base directory ends with ''/node_modules/grunt'''
            node_gulpcli: (Boolean) Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
            node_nodegyp: '(Boolean) Rule id: 33 - Do not monitor processes if Node.js application base directory ends with ''/node_modules/node-gyp'''
            node_nodepregyp: '(Boolean) Rule id: 32 - Do not monitor processes if Node.js application base directory ends with ''/node_modules/node-pre-gyp'''
            node_npm: '(Boolean) Rule id: 27 - Do not monitor processes if Node.js application base directory ends with ''/node_modules/npm'''
            node_prebuildinstall: '(Boolean) Rule id: 26 - Do not monitor processes if Node.js application base directory ends with ''/node_modules/prebuild-install'''
            node_typescript: '(Boolean) Rule id: 29 - Do not monitor processes if Node.js application base directory ends with ''/node_modules/typescript'''
            node_yarn: '(Boolean) Rule id: 45 - Do not monitor processes if Node.js application equals ''yarn'''
            php_script: '(Boolean) (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists'
            terraform-provider-dynatrace -export dynatrace_builtin_process_monitoring: downloads all existing built-in process monitoring rules
        importStatements: []
    dynatrace_business_events_buckets Resource - terraform-provider-dynatrace:
        subCategory: Business Events
        description: The resource
        name: dynatrace_business_events_buckets Resource - terraform-provider-dynatrace
        title: dynatrace_business_events_buckets Resource - terraform-provider-dynatrace
        argumentDocs:
            bucket_name: (String) Events will be stored in the selected bucket. Analyze bucket contents in the log & event viewer.
            builtin:bizevents-processing-buckets.rule: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            matcher: (String) See our documentation
            rule_name: (String) Rule name
            terraform-provider-dynatrace -export dynatrace_business_events_buckets: downloads all existing business event bucket assignments
        importStatements: []
    dynatrace_business_events_metrics Resource - terraform-provider-dynatrace:
        subCategory: Business Events
        description: The resource
        name: dynatrace_business_events_metrics Resource - terraform-provider-dynatrace
        title: dynatrace_business_events_metrics Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:bizevents-processing-metrics.rule: )
            dimensions: (Set of String) no documentation available
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            key: (String) Key
            matcher: (String) See our documentation
            measure: '(String) Possible Values: ATTRIBUTE, OCCURRENCE'
            measure_attribute: (String) Attribute
            terraform-provider-dynatrace -export dynatrace_business_events_metrics: downloads all existing business event metric extractions
        importStatements: []
    dynatrace_business_events_oneagent Resource - terraform-provider-dynatrace:
        subCategory: Business Events
        description: The resource
        name: dynatrace_business_events_oneagent Resource - terraform-provider-dynatrace
        title: dynatrace_business_events_oneagent Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:bizevents.http.incoming: )
            case_sensitive: (Boolean) Case sensitive
            category: '(Block List, Min: 1, Max: 1) Event category (see below for nested schema)'
            data: '(Block List, Max: 1) Additional attributes for the business event. (see below for nested schema)'
            data_source: '(String) Possible Values: Request_body, Request_headers, Request_method, Request_parameters, Request_path, Response_body, Response_headers, Response_statusCode'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            event: '(Block List, Min: 1, Max: 1) Event meta data (see below for nested schema)'
            event_data_field_complex: '(Block Set, Min: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            name: (String) Field name to be added to data.
            path: (String) See our documentation
            provider: '(Block List, Min: 1, Max: 1) Event provider (see below for nested schema)'
            rule_name: (String) Rule name
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            source: (String) Fixed value
            source_type: '(String) Possible Values: Constant_string, Request_body, Request_headers, Request_method, Request_parameters, Request_path, Response_body, Response_headers, Response_statusCode'
            terraform-provider-dynatrace -export dynatrace_business_events_oneagent: downloads all existing OneAgent business events
            trigger: '(Block Set, Min: 1) (see below for nested schema)'
            triggers: '(Block List, Min: 1, Max: 1) Define conditions to trigger business events from incoming web requests. Triggers are connected by AND logic per capture rule. If you set multiple trigger rules, all of them need to be fulfilled to capture a business event. (see below for nested schema)'
            type: '(Block List, Min: 1, Max: 1) Event type (see below for nested schema)'
            value: (String) no documentation available
        importStatements: []
    dynatrace_business_events_processing Resource - terraform-provider-dynatrace:
        subCategory: Business Events
        description: The resource
        name: dynatrace_business_events_processing Resource - terraform-provider-dynatrace
        title: dynatrace_business_events_processing Resource - terraform-provider-dynatrace
        argumentDocs:
            array: (Boolean) Is Array
            builtin:bizevents-processing-pipelines.rule: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            matcher: (String) See our documentation
            name: (String) no documentation available
            optional: (Boolean) no documentation available
            readonly: (Boolean) Read-only
            rule_name: (String) Rule name
            rule_testing: '(Block List, Min: 1, Max: 1) ## Rule testing'
            sample_event: (String) Sample event to use for the test run. Only JSON format is supported.
            script: (String) See our documentation
            terraform-provider-dynatrace -export dynatrace_business_events_processing: downloads all existing business event processing configuration
            transformation_field: '(Block List, Min: 1) (see below for nested schema)'
            transformation_fields: '(Block List, Max: 1) Transformation fields (see below for nested schema)'
            type: '(String) Possible Values: BOOLEAN, DOUBLE, DURATION, INT, IPADDR, LONG, STRING, TIMESTAMP'
        importStatements: []
    dynatrace_business_events_security_context Resource - terraform-provider-dynatrace:
        subCategory: Business Events
        description: The resource
        name: dynatrace_business_events_security_context Resource - terraform-provider-dynatrace
        title: dynatrace_business_events_security_context Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:bizevents-security-context-rules: )
            id: (String) The ID of this resource.
            query: (String) Matcher
            rule_name: (String) Rule name
            security_context_rule: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_business_events_security_context: downloads all existing business event security context configuration
            value: (String) Literal value to be set
            value_source: '(String) Possible Values: FIELD, LITERAL'
            value_source_field: (String) Name of field used to copy value
        importStatements: []
    dynatrace_calculated_service_metric Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_calculated_service_metric Resource - terraform-provider-dynatrace
        title: dynatrace_calculated_service_metric Resource - terraform-provider-dynatrace
        argumentDocs:
            BETWEEN_DELIMITER: ': The opening delimiter string to look for.'
            REGEX_EXTRACTION: ': The regular expression.'
            aggregation: (String) Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute, when useFromChildCalls is true. For the COUNT aggregation, the kind field is not applicable. Possible values are COUNT, FIRST and LAST.
            attribute: (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
            boolean: '(Block List, Max: 1) Boolean Comparison for BOOLEAN attributes (see below for nested schema)'
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or not case-sensitive (false)
            comparison: '(Block List, Min: 1, Max: 1) Type-specific comparison for attributes (see below for nested schema)'
            condition: (Block List) A conditions for the metric usage (see below for nested schema)
            conditions: (Block List) The set of conditions for the metric usage. All the specified conditions must be fulfilled to use the metric (see below for nested schema)
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
            delimiter_or_regex: '(String) Depending on the kind value:'
            description: (String) The displayed description of the metric
            dimension: (String) The dimension value pattern. You can define custom placeholders in the placeholders field and use them here
            dimension_definition: '(Block List, Max: 1) Parameters of a definition of a calculated service metric (see below for nested schema)'
            enabled: (Boolean) The metric is enabled (true) or disabled (false)
            end_delimiter: (String) The closing delimiter string to look for. Required if the kind value is BETWEEN_DELIMITER. Not applicable otherwise
            entity_id: (String) Restricts the metric usage to the specified service. This field is mutually exclusive with the management_zones field
            esb_input_node_type: '(Block List, Max: 1) Type-specific comparison information for attributes of type ''ESB_INPUT_NODE_TYPE'' (see below for nested schema)'
            failed_state: '(Block List, Max: 1) Comparison for FAILED_STATE attributes (see below for nested schema)'
            failure_reason: '(Block List, Max: 1) Comparison for FAILURE_REASON attributes (see below for nested schema)'
            fast_string: '(Block List, Max: 1) Comparison for FAST_STRING attributes. Use it for all service property attributes (see below for nested schema)'
            flaw_state: '(Block List, Max: 1) Comparison for FLAW_STATE attributes (see below for nested schema)'
            generic: '(Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)'
            http_method: '(Block List, Max: 1) Comparison for HTTP_METHOD attributes (see below for nested schema)'
            http_status_class: '(Block List, Max: 1) Comparison for HTTP_STATUS_CLASS attributes (see below for nested schema)'
            id: (String) The ID of this resource.
            iib_input_node_type: '(Block List, Max: 1) Comparison for IIB_INPUT_NODE_TYPE attributes (see below for nested schema)'
            key: (String) The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
            kind: "(String) The type of extraction. Defines either usage of regular expression (regex) or the position of request attribute value to be extracted. When the attribute is SERVICE_REQUEST_ATTRIBUTE attribute and aggregation is COUNT, needs to be set to ORIGINAL_TEXT. Possible values are \tAFTER_DELIMITER, BEFORE_DELIMITER, BETWEEN_DELIMITER, ORIGINAL_TEXT and REGEX_EXTRACTION"
            management_zone: (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
            management_zones: (Set of String) Restricts the metric usage to specified management zones. This field is mutually exclusive with the entity_id field
            match_on_child_calls: (Boolean) If true, the request attribute is matched on child service calls. Default is false
            metric: (String) The metric to be captured. Possible values are CPU_TIME, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DISK_IO_TIME, EXCEPTION_COUNT, FAILED_REQUEST_COUNT, FAILED_REQUEST_COUNT_CLIENT, FAILURE_RATE, FAILURE_RATE_CLIENT, HTTP_4XX_ERROR_COUNT, HTTP_4XX_ERROR_COUNT_CLIENT, HTTP_5XX_ERROR_COUNT, HTTP_5XX_ERROR_COUNT_CLIENT, IO_TIME, LOCK_TIME, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESSING_TIME, REQUEST_ATTRIBUTE, REQUEST_COUNT, RESPONSE_TIME, RESPONSE_TIME_CLIENT, SUCCESSFUL_REQUEST_COUNT, SUCCESSFUL_REQUEST_COUNT_CLIENT and WAIT_TIME
            metric_definition: '(Block List, Max: 1) The definition of a calculated service metric (see below for nested schema)'
            metric_key: (String) The key of the calculated service metric
            name: (String) The displayed name of the metric
            negate: (Boolean) Reverse the comparison operator. For example, it turns equals into does not equal
            normalization: (String) The format of the extracted string. Possible values are ORIGINAL, TO_LOWER_CASE and TO_UPPER_CASE
            number: '(Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)'
            number_request_attribute: '(Block List, Max: 1) Comparison for NUMBER_REQUEST_ATTRIBUTE attributes (see below for nested schema)'
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
            placeholder: (Block List) A custom placeholder to be used in a dimension value pattern (see below for nested schema)
            placeholders: '(Block List, Max: 1) The list of custom placeholders to be used in a dimension value pattern (see below for nested schema)'
            request_attribute: (String) No documentation available for this attribute
            service_tag: '(Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)'
            service_type: '(Block List, Max: 1) Comparison for SERVICE_TYPE attributes (see below for nested schema)'
            source: '(Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)'
            string: '(Block List, Max: 1) Comparison for STRING attributes (see below for nested schema)'
            string_request_attribute: '(Block List, Max: 1) Comparison for STRING_REQUEST_ATTRIBUTE attributes (see below for nested schema)'
            tag: '(Block List, Max: 1) Comparison for TAG attributes (see below for nested schema)'
            tag_key: '(Block List, Max: 1) has no documentation (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_calculated_service_metric: downloads all existing calculated service metric configuration
            top_x: (Number) The number of top values to be calculated
            top_x_aggregation: (String) The aggregation of the dimension. Possible values are AVERAGE, COUNT, MAX, MIN, OF_INTEREST_RATIO, OTHER_RATIO, SINGLE_VALUE and SUM
            top_x_direction: (String) How to calculate the topX values. Possible values are ASCENDING and DESCENDING
            type: (String) Defines the actual set of fields depending on the value
            unit: (String) The unit of the metric. Possible values are BIT, BIT_PER_HOUR, BIT_PER_MINUTE, BIT_PER_SECOND, BYTE, BYTE_PER_HOUR, BYTE_PER_MINUTE, BYTE_PER_SECOND, CORES, COUNT, DAY, DECIBEL_MILLI_WATT, GIBI_BYTE, GIGA, GIGA_BYTE, HOUR, KIBI_BYTE, KIBI_BYTE_PER_HOUR, KIBI_BYTE_PER_MINUTE, KIBI_BYTE_PER_SECOND, KILO, KILO_BYTE, KILO_BYTE_PER_HOUR, KILO_BYTE_PER_MINUTE, KILO_BYTE_PER_SECOND, MEBI_BYTE, MEBI_BYTE_PER_HOUR, MEBI_BYTE_PER_MINUTE, MEBI_BYTE_PER_SECOND, MEGA, MEGA_BYTE, MEGA_BYTE_PER_HOUR, MEGA_BYTE_PER_MINUTE, MEGA_BYTE_PER_SECOND, MICRO_SECOND, MILLI_CORES, MILLI_SECOND, MILLI_SECOND_PER_MINUTE, MINUTE, MONTH, MSU, NANO_SECOND, NANO_SECOND_PER_MINUTE, NOT_APPLICABLE, PERCENT, PER_HOUR, PER_MINUTE, PER_SECOND, PIXEL, PROMILLE, RATIO, SECOND, STATE, UNSPECIFIED, WEEK and YEAR
            unit_display_name: (String) The display name of the metric's unit. Only applicable when the unit parameter is set to UNSPECIFIED
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            use_from_child_calls: (Boolean) If true request attribute will be taken from a child service call. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute. Defaults to false
            value: (Boolean) The value to compare to
            values: (Set of Boolean) The values to compare to
            zos_call_type: '(Block List, Max: 1) Comparison for ZOS_CALL_TYPE attributes (see below for nested schema)'
        importStatements: []
    dynatrace_calculated_synthetic_metric Resource - terraform-provider-dynatrace:
        subCategory: Synthetic
        description: The resource
        name: dynatrace_calculated_synthetic_metric Resource - terraform-provider-dynatrace
        title: dynatrace_calculated_synthetic_metric Resource - terraform-provider-dynatrace
        argumentDocs:
            action_type: (String) Only user actions of the specified type are included in the metric calculation
            description: (String) Descriptor of a calculated synthetic metric.
            dimension: (Block List) A dimensions for the metric usage (see below for nested schema)
            dimensions: (Block List) Dimension of the calculated synthetic metric. (see below for nested schema)
            enabled: (Boolean) The metric is enabled (true) or disabled (false)
            error_code: (Number) Only executions finished with the specified error code are included in the metric calculation.
            event: (String) Only the specified browser clickpath event is included in the metric calculation. Specify the Dynatrace entity ID of the event here.
            filter: '(Block List, Max: 1) Filter of the calculated synthetic metric. (see below for nested schema)'
            has_error: '(Boolean) The execution status of the monitors to be included in the metric calculation: true or false'
            id: (String) The ID of this resource.
            location: (String) Only executions from the specified location are included in the metric calculation. Specify the Dynatrace entity ID of the location here.
            metric: '(String) The type of the synthetic metric. Possible values: [ ApplicationCache, Callback, CumulativeLayoutShift, DNSLookup, DOMComplete, DOMContentLoaded, DOMInteractive, FailedRequestsResources, FirstContentfulPaint, FirstInputDelay, FirstInputStart, FirstPaint, HTMLDownloaded, HttpErrors, JavaScriptErrors, LargestContentfulPaint, LoadEventEnd, LoadEventStart, LongTasks, NavigationStart, OnDOMContentLoaded, OnLoad, Processing, RedirectTime, Request, RequestStart, ResourceCount, Response, SecureConnect, SpeedIndex, TCPConnect, TimeToFirstByte, TotalDuration, TransferSize, UserActionDuration, VisuallyComplete ]'
            metric_key: (String) The unique key of the calculated synthetic metric.
            monitor_identifier: (String) The Dynatrace entity ID of the monitor to which the metric belongs.
            name: (String) The displayed name of the metric.
            terraform-provider-dynatrace -export dynatrace_calculated_synthetic_metric: downloads all existing calculated synthetic metric configuration
            top_x: (Number) The number of top values to be calculated
        importStatements: []
    dynatrace_calculated_web_metric Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_calculated_web_metric Resource - terraform-provider-dynatrace
        title: dynatrace_calculated_web_metric Resource - terraform-provider-dynatrace
        argumentDocs:
            action_duration_from_milliseconds: (Number) Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
            action_duration_to_milliseconds: (Number) Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
            apdex: '(String) Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]'
            app_identifier: (String) The Dynatrace entity ID of the application to which the metric belongs.
            browser_family: (String) Only user actions coming from the specified browser family are included in the metric calculation.
            browser_type: (String) Only user actions coming from the specified browser type are included in the metric calculation.
            browser_version: (String) Only user actions coming from the specified browser version are included in the metric calculation.
            city: (String) Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.
            continent: (String) Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.
            country: (String) Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.
            custom_action: '(Boolean) The status of custom actions in the metric calculation: true or false'
            custom_error_name: (String) The custom error name of the actions to be included in the metric calculation.
            custom_error_type: (String) The custom error type of the actions to be included in the metric calculation.
            description: (String) Descriptor of a calculated web metric.
            dimension: (Block List) A dimensions for the metric usage (see below for nested schema)
            dimensions: (Block List) Parameters of a definition of a calculated web metric. (see below for nested schema)
            domain: (String) Only user actions coming from the specified domain are included in the metric calculation.
            enabled: (Boolean) The metric is enabled (true) or disabled (false)
            from: (Number) Only actions that have a value greater than or equal to this are included in the metric calculation.
            has_any_error: '(Boolean) The error status of the actions to be included in the metric calculation: true or false'
            has_custom_errors: '(Boolean) The custom error status of the actions to be included in the metric calculation: true or false'
            has_http_errors: '(Boolean) The request error status of the actions to be included in the metric calculation: true or false'
            has_javascript_errors: '(Boolean) The JavaScript error status of the actions to be included in the metric calculation: true or false'
            http_error_code: (Number) The HTTP error status code of the actions to be included in the metric calculation.
            http_error_code_to: (Number) Can be used in combination with httpErrorCode to define a range of error codes that will be included in the metric calculation.
            http_path: (String) The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation.
            id: (String) The ID of this resource.
            ip: (String) Only actions coming from this IP address are included in the metric calculation.
            ip_v6_traffic: '(Boolean) The IPv6 status of the actions to be included in the metric calculation: true or false'
            key: (String) The key of the action property we're checking.
            load_action: '(Boolean) The status of load actions in the metric calculation: true or false'
            match_type: (String) Specifies the match type of a string filter, e.g. using Contains or Equals.
            metric: (String) The metric to be captured. Possible values are Apdex, ApplicationCache, Callback, CumulativeLayoutShift, DNSLookup, DOMComplete, DOMContentLoaded, DOMInteractive, DoubleProperty, ErrorCount, FirstContentfulPaint, FirstInputDelay, FirstInputStart, FirstPaint, HTMLDownloaded, LargestContentfulPaint, LoadEventEnd, LoadEventStart, LongProperty, LongTasksTime, NavigationStart, OnDOMContentLoaded, OnLoad, Processing, RedirectTime, Request, RequestStart, Response, SecureConnect, SpeedIndex, TCPConnect, TimeToFirstByte, UserActionDuration, VisuallyComplete
            metric_definition: '(Block List, Min: 1, Max: 1) The definition of a calculated web metric. (see below for nested schema)'
            metric_key: (String) The unique key of the calculated web metric.
            name: (String) The displayed name of the metric.
            os_family: (String) Only actions coming from this OS family are included in the metric calculation.
            os_version: (String) Only actions coming from this OS version are included in the metric calculation.
            property: (Block Set) User Action Property (see below for nested schema)
            property_key: (String) The key of the user action property. Only applicable for DoubleProperty and LongProperty metrics.
            real_user: '(Boolean) The status of actions coming from real users in the metric calculation: true or false'
            region: (String) Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.
            robot: '(Boolean) The status of actions coming from robots in the metric calculation: true or false'
            synthetic: '(Boolean) The status of actions coming from synthetic monitors in the metric calculation: true or false'
            target_view_group: (String) Only actions on the specified group of views are included in the metric calculation.
            target_view_group_name_match_type: (String) Specifies the match type of the view group filter, e.g. using Contains or Equals. Defaults to Equals.
            target_view_name: (String) Only actions on the specified view are included in the metric calculation.
            target_view_name_match_type: (String) Specifies the match type of the view name filter, e.g. using Contains or Equals. Defaults to Equals.
            terraform-provider-dynatrace -export dynatrace_calculated_web_metric: downloads all existing calculated web app metric configuration
            to: (Number) Only actions that have a value less than or equal to this are included in the metric calculation.
            top_x: (Number) The number of top values to be calculated
            user_action_filter: '(Block List, Max: 1) Parameters of a definition of a calculated web metric. (see below for nested schema)'
            user_action_name: (String) Only actions with this name are included in the metric calculation.
            user_action_properties: (Block Set) The definition of a calculated web metric. (see below for nested schema)
            value: (String) Only actions that have this value in the specified property are included in the metric calculation.
            xhr_action: '(Boolean) The status of xhr actions in the metric calculation: true or false'
            xhr_route_change_action: '(Boolean) The status of route actions in the metric calculation: true or false'
        importStatements: []
    dynatrace_cloud_foundry Resource - terraform-provider-dynatrace:
        subCategory: Cloud Platforms
        description: The resource
        name: dynatrace_cloud_foundry Resource - terraform-provider-dynatrace
        title: dynatrace_cloud_foundry Resource - terraform-provider-dynatrace
        argumentDocs:
            active_gate_group: (String) ActiveGate group
            api_url: (String) Cloud Foundry API Target
            builtin:cloud.cloudfoundry: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            label: (String) Name this connection
            login_url: (String) Cloud Foundry Authentication Endpoint
            password: (String, Sensitive) Cloud Foundry Password
            terraform-provider-dynatrace -export dynatrace_cloud_foundry: downloads all existing Cloud Foundry monitoring configuration
            username: (String) Cloud Foundry Username
        importStatements: []
    dynatrace_cloudapp_workloaddetection Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_cloudapp_workloaddetection Resource - terraform-provider-dynatrace
        title: dynatrace_cloudapp_workloaddetection Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:process-group.cloud-application-workload-detection: )
            cloud_foundry: '(Block List, Min: 1, Max: 1) Enable this setting to get'
            docker: '(Block List, Min: 1, Max: 1) Enable this setting for plain Docker environments to get'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            filter: '(Block List, Min: 1) (see below for nested schema)'
            filters: '(Block List, Max: 1) Define rules to merge similar Kubernetes workloads into process groups.'
            id: (String) The ID of this resource.
            inc_basepod: (Boolean) E.g. "cloud-credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
            inc_container: (Boolean) Container name
            inc_namespace: (Boolean) Namespace name
            inc_product: (Boolean) If Product is enabled and has no value, it defaults to Base pod name
            inc_stage: (Boolean) Stage
            inclusion_toggles: '(Block List, Min: 1, Max: 1) ID calculation based on (see below for nested schema)'
            kubernetes: '(Block List, Min: 1, Max: 1) Enable this setting to get'
            match_filter: '(Block List, Min: 1, Max: 1) When namespace (see below for nested schema)'
            match_operator: '(String) Possible Values: CONTAINS, ENDS, EQUALS, EXISTS, NOT_CONTAINS, NOT_ENDS, NOT_EQUALS, NOT_STARTS, STARTS'
            namespace: (String) Namespace name
            terraform-provider-dynatrace -export dynatrace_cloudapp_workloaddetection: downloads all existing workload detection configuration
        importStatements: []
    dynatrace_cloudfoundry_credentials Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_cloudfoundry_credentials Resource - terraform-provider-dynatrace
        title: dynatrace_cloudfoundry_credentials Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
            api_url: (String) The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
            id: (String) The ID of this resource.
            login_url: (String) The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
            name: '(String) The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: .+-_. Leading or trailing whitespace is not allowed.'
            password: (String, Sensitive) The password of the Cloud Foundry foundation credentials.
            terraform-provider-dynatrace -export dynatrace_cloudfoundry_credentials: downloads all existing Cloud Foundry credentials configuration
            unknowns: (String) Any attributes that aren't yet supported by this provider
            username: (String) The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
        importStatements: []
    dynatrace_connectivity_alerts Resource - terraform-provider-dynatrace:
        subCategory: Alerting
        description: The resource
        name: dynatrace_connectivity_alerts Resource - terraform-provider-dynatrace
        title: dynatrace_connectivity_alerts Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:alerting.connectivity-alerts: )
            connectivity_alerts: (Boolean) TCP connectivity problems
            id: (String) The ID of this resource.
            process_group_id: (String) The scope of this settings
            terraform-provider-dynatrace -export dynatrace_connectivity_alerts: downloads all existing process group connectivity alerts
        importStatements: []
    dynatrace_container_builtin_rule Resource - terraform-provider-dynatrace:
        subCategory: Containers
        description: The resource
        name: dynatrace_container_builtin_rule Resource - terraform-provider-dynatrace
        title: dynatrace_container_builtin_rule Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:container.built-in-monitoring-rule: )
            id: (String) The ID of this resource.
            ignore_docker_pause_container: (Boolean) Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
            ignore_kubernetes_pause_container: (Boolean) Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
            ignore_open_shift_build_pod_name: (Boolean) Disable monitoring of intermediate containers created during image build.
            ignore_open_shift_sdn_namespace: (Boolean) Disable monitoring of platform internal containers in the openshift-sdn namespace.
            terraform-provider-dynatrace -export dynatrace_container_builtin_rule: downloads all existing builtin monitoring rules for containers
        importStatements: []
    dynatrace_container_rule Resource - terraform-provider-dynatrace:
        subCategory: Containers
        description: The resource
        name: dynatrace_container_rule Resource - terraform-provider-dynatrace
        title: dynatrace_container_rule Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:container.monitoring-rule: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            mode: '(String) Possible Values: MONITORING_OFF, MONITORING_ON'
            operator: '(String) Possible Values: CONTAINS, ENDS, EQUALS, EXISTS, NOT_CONTAINS, NOT_ENDS, NOT_EQUALS, NOT_EXISTS, NOT_STARTS, STARTS'
            property: '(String) Possible Values: CONTAINER_NAME, IMAGE_NAME, KUBERNETES_BASEPODNAME, KUBERNETES_CONTAINERNAME, KUBERNETES_FULLPODNAME, KUBERNETES_NAMESPACE, KUBERNETES_PODUID'
            terraform-provider-dynatrace -export dynatrace_container_rule: downloads all existing monitoring rules for containers
            value: (String) Condition value
        importStatements: []
    dynatrace_container_technology Resource - terraform-provider-dynatrace:
        subCategory: Containers
        description: The resource
        name: dynatrace_container_technology Resource - terraform-provider-dynatrace
        title: dynatrace_container_technology Resource - terraform-provider-dynatrace
        argumentDocs:
            bosh_process_manager: '(Boolean) Platform: Cloud Foundry'
            builtin:container.technology: )
            containerd: '(Boolean) Platform: Kubernetes'
            crio: '(Boolean) Platform: Kubernetes'
            docker: '(Boolean) Platform: Docker and Kubernetes'
            docker_windows: '(Boolean) Platform: Docker'
            garden: '(Boolean) Platform: Cloud Foundry'
            id: (String) The ID of this resource.
            podman: '(Boolean) Platform: Podman'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_container_technology: downloads all existing container monitoring configuration
            winc: '(Boolean) Platform: Cloud Foundry'
        importStatements: []
    dynatrace_credentials Resource - terraform-provider-dynatrace:
        subCategory: Credentials
        description: The resource
        name: dynatrace_credentials Resource - terraform-provider-dynatrace
        title: dynatrace_credentials Resource - terraform-provider-dynatrace
        argumentDocs:
            certificate: (String) The certificate in the string format.
            client_secret: (String) Required for Azure Client Secret. No further documentation available
            clientid: (String) Required for Azure Client Secret. No further documentation available
            count: (Number) The number of uses
            credential_usage_summary: '(Block List, Max: 2, Deprecated) The list contains summary data related to the use of credentials (see below for nested schema)'
            credentials_used_for_external_synchronization: (Set of String) No documentation available
            description: (String) A short description of the credentials set
            external: '(Block List, Max: 1) External Vault Configuration (see below for nested schema)'
            format: (String) The certificate format. Possible values are PEM, PKCS12 and UNKNOWN.
            id: (String) The ID of this resource.
            name: (String) The name of the credentials set
            owner_access_only: (Boolean) The credentials set is available to every user (false) or to owner only (true)
            password: '(String, Sensitive) The password of the credential. Note: Terraform treats an empty string for a value as if the attribute was absent. If you want to set an empty password, use the value --empty--.'
            password_secret_name: (String) No documentation available
            path_to_credentials: (String) Required for Hashicorp App Role or Hashicorp Certificate. No further documentation available
            public: (Boolean) For certificate authentication specifies whether it's public certificate auth (true) or not (false).
            roleid: (String) Required for Hashicorp App Role. No further documentation available
            scope: (String) The scope of the credentials set. Possible values are ALL, EXTENSION and SYNTHETIC
            secretid: (String) Required for Hashicorp App Role. The ID of Credentials within the Certificate Vault holding the secret id
            tenantid: (String) Required for Azure Client Secret. No further documentation available
            terraform-provider-dynatrace -export dynatrace_credentials: downloads all existing credentials
            token: (String, Sensitive) Token in the string format. Specifying a token implies Token Authentication.
            token_secret_name: (String) No documentation available
            type: (String) Type of usage, HTTP_MONITOR or BROWSER_MONITOR
            username: (String, Sensitive) The username of the credentials set.
            username_secret_name: (String) No documentation available
            vault_namespace: (String) Required for Hashicorp App Role. No further documentation available
            vault_url: (String) No documentation available
        importStatements: []
    dynatrace_custom_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_custom_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_custom_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            aggregation_type: (String) How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
            alert_condition: '(String) The condition for the threshold value check: ABOVE or BELOW'
            alerting_on_missing_data: (Boolean) If true, also one-minute samples without data are counted as violating samples
            auto: '(Block List, Max: 1) An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time (see below for nested schema)'
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
            custom_device_group_name: (Block List) A scope filter for the related custom device group name (see below for nested schema)
            dealerting_samples: (Number) The number of one-minute samples within the evaluation window that must go back to normal to close the event
            description: (String) The description of the metric event
            dimension: (Block List) A generic definition for a filter (see below for nested schema)
            dimensions: (Block List) Defines the dimensions of the metric to alert on. The filters are combined by conjunction (see below for nested schema)
            disabled_reason: (String, Deprecated) The reason of automatic disabling.  The NONE means config was not disabled automatically. Possible values are METRIC_DEFINITION_INCONSISTENCY, NONE, TOO_MANY_DIMS and TOPX_FORCIBLY_DEACTIVATED
            enabled: (Boolean) The metric event is enabled (true) or disabled (false)
            entity: (Block List) A filter for the metrics entity dimensions (see below for nested schema)
            filter: '(Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)'
            generic: (Block List) A generic monitoring strategy (see below for nested schema)
            host_group_name: (Block List) A scope filter for the related host group name (see below for nested schema)
            host_name: (Block List) A scope filter for the related host name (see below for nested schema)
            id: (String) The ID of this resource.
            index: (Number) No documentation available
            key: (String) The dimensions key on the metric
            management_zone: (Block List) A scope filter for a management zone identifier (see below for nested schema)
            metric_id: (String) The ID of the metric evaluated by the metric event
            metric_selector: (String) The metric selector that should be executed
            name: (String) The name of the metric event displayed in the UI
            operator: (String) The operator to match on
            primary_dimension_key: (String) Defines which dimension key should be used for the alertingScope
            process_group_id: (Block List) A scope filter for a process group identifier (see below for nested schema)
            process_group_name: (Block List) A scope filter for the related process group name (see below for nested schema)
            samples: (Number) The number of one-minute samples that form the sliding evaluation window
            scope: (Block List) A generic scope filter (see below for nested schema)
            scopes: (Block List) Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction (see below for nested schema)
            severity: (String) The type of the event to trigger on the threshold violation.  The CUSTOM_ALERT type is not correlated with other alerts. The INFO type does not open a problem
            signal_fluctuations: (Number) Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
            static: '(Block List, Max: 1) A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit (see below for nested schema)'
            strategy: '(Block List, Min: 1, Max: 1) A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields (see below for nested schema)'
            string: (Block List) A filter for the metrics string dimensions (see below for nested schema)
            tag: (Block List) A scope filter for tags on entities (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_custom_anomalies: downloads all existing custom metric event configuration
            threshold: (Number) The value of the static threshold based on the specified unit
            type: (String) Defines the actual set of fields depending on the value
            unit: (String) The unit of the threshold, matching the metric definition
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to match on
            violating_samples: (Number) The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
            warning_reason: (String, Deprecated) The reason of a warning set on the config. The NONE means config has no warnings. The other supported value is TOO_MANY_DIMS
        importStatements: []
    dynatrace_custom_app_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_custom_app_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_custom_app_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.rum-custom: )
            detection_mode: '(String) Possible Values: Auto, Fixed'
            duration_avoid_overalerting: '(Block List, Min: 1, Max: 1) To avoid over-alerting do not alert for low traffic applications with less than (see below for nested schema)'
            duration_threshold: (Number) Absolute threshold
            duration_threshold_all: '(Block List, Min: 1, Max: 1) Alert if the action duration of all user actions degrades beyond both the absolute and relative threshold: (see below for nested schema)'
            duration_threshold_all_fixed: '(Block List, Min: 1, Max: 1) Alert if the action duration of all user actions degrades beyond the absolute threshold: (see below for nested schema)'
            duration_threshold_slowest: '(Block List, Min: 1, Max: 1) Alert if the action duration of the slowest 10% of user actions degrades beyond both the absolute and relative threshold: (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            error_rate_increase: '(Block List, Min: 1, Max: 1) Error rate increase (see below for nested schema)'
            error_rate_increase_auto: '(Block List, Max: 1) Alert if the percentage of user actions affected by reported errors exceeds both the absolute threshold and the relative threshold (see below for nested schema)'
            error_rate_increase_fixed: '(Block List, Max: 1) Alert if the custom reported error rate threshold is exceeded during any 5-minute period (see below for nested schema)'
            id: (String) The ID of this resource.
            min_action_rate: (Number) no documentation available
            scope: (String) The scope of this setting (DEVICE_APPLICATION_METHOD CUSTOM_APPLICATION environment)
            sensitivity: '(String) Possible Values: Low, Medium, High'
            slow_user_actions: '(Block List, Min: 1, Max: 1) Slow user actions (see below for nested schema)'
            slow_user_actions_auto: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            slow_user_actions_fixed: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            slowdown_percentage: (Number) Relative threshold
            terraform-provider-dynatrace -export dynatrace_custom_app_anomalies: downloads all existing custom application anomaly detection configuration
            threshold_absolute: (Number) Absolute threshold
            threshold_percentage: (Number) Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
            threshold_relative: (Number) Relative threshold
            unexpected_high_load: '(Block List, Min: 1, Max: 1) Unexpected high load (see below for nested schema)'
            unexpected_low_load: '(Block List, Min: 1, Max: 1) Unexpected low load (see below for nested schema)'
        importStatements: []
    dynatrace_custom_app_crash_rate Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_custom_app_crash_rate Resource - terraform-provider-dynatrace
        title: dynatrace_custom_app_crash_rate Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute_crash_rate: (Number) Absolute threshold
            baseline_violation_percentage: (Number) Dynatrace learns the typical crash rate for all app versions and will create an alert if the baseline is violated by more than a specified threshold. Analysis happens based on a sliding window of 10 minutes.
            builtin:anomaly-detection.rum-custom-crash-rate-increase: )
            concurrent_users: (Number) Amount of users
            crash_rate_increase: '(Block List, Min: 1, Max: 1) Crash rate increase (see below for nested schema)'
            crash_rate_increase_auto: '(Block List, Max: 1) Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users (see below for nested schema)'
            crash_rate_increase_fixed: '(Block List, Max: 1) Alert crash rate increases when the defined threshold is exceeded by a certain number of users (see below for nested schema)'
            detection_mode: '(String) Possible Values: Auto, Fixed'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (CUSTOM_APPLICATION environment)
            sensitivity: '(String) Possible Values: Low, Medium, High'
            terraform-provider-dynatrace -export dynatrace_custom_app_crash_rate: downloads all existing custom application crash rate increase configuration
        importStatements: []
    dynatrace_custom_app_enablement Resource - terraform-provider-dynatrace:
        subCategory: Mobile & Custom Applications
        description: The resource
        name: dynatrace_custom_app_enablement Resource - terraform-provider-dynatrace
        title: dynatrace_custom_app_enablement Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.custom.enablement: )
            cost_and_traffic_control: (Number) (Field has overlap with dynatrace_mobile_application) Percentage of user sessions captured and analyzed. By default, Dynatrace captures all user actions and user sessions for analysis. This approach ensures complete insight into your application’s performance and customer experience. You can optionally reduce the granularity of user-action and user-session analysis by capturing a lower percentage of user sessions. While this approach can reduce monitoring costs, it also results in lower visibility into how your customers are using your applications. For example, a setting of 10% results in Dynatrace analyzing only every tenth user session.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            rum: '(Block List, Min: 1, Max: 1) Capture and analyze all user actions within your application. Enable Real User Monitoring (RUM) to monitor and improve your application''s performance, identify errors, and gain insight into your user''s behavior and experience. (see below for nested schema)'
            scope: (String) The scope of this setting (CUSTOM_APPLICATION). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_custom_app_enablement: downloads all existing custom application enablement and cost control configuration
        importStatements: []
    dynatrace_custom_device Resource - terraform-provider-dynatrace:
        subCategory: Monitored Entities
        description: The resource
        name: dynatrace_custom_device Resource - terraform-provider-dynatrace
        title: dynatrace_custom_device Resource - terraform-provider-dynatrace
        argumentDocs:
            config_url: (String) The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
            custom_device_id: (String) The unique name of the custom device. This Id can either be provided in the resource or generated by Terraform when the resource is created. If you use the ID of an existing device, the respective parameters will be updated
            display_name: (String) The name of the custom device, displayed in the UI.
            dns_names: (Set of String) The list of DNS names related to the custom device.
            entity_id: (String) The Dynatrace EntityID of this resource. If you need to refer to this custom device within other resources you want to use this ID
            favicon_url: (String) The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
            group: (String) User defined group of entity. Changing the group requires a new custom device to be created.
            id: (String) The ID of this resource.
            ip_addresses: (Set of String) The list of IP addresses that belong to the custom device.
            listen_ports: (Set of Number) The list of ports the custom devices listens to.
            properties: (Map of String, Deprecated) The list of key-value pair properties that will be shown beneath the infographics of your custom device.
            props: (String) The list of key-value pair properties that will be shown beneath the infographics of your custom device.
            type: (String) The technology type definition of the custom device.
        importStatements: []
    dynatrace_custom_service Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_custom_service Resource - terraform-provider-dynatrace
        title: dynatrace_custom_service Resource - terraform-provider-dynatrace
        argumentDocs:
            annotations: (Set of String) Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
            arguments: (List of String) Fully qualified types of argument the method expects
            class: '(Block List, Max: 1) The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP (see below for nested schema)'
            enabled: (Boolean) Custom service enabled/disabled
            file: '(Block List, Max: 1) The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET (see below for nested schema)'
            id: (String) The ID of this resource.
            match: (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
            method: '(Block List, Min: 1) methods to instrument (see below for nested schema)'
            modifiers: (List of String) The modifiers of the method rule. Possible values are ABSTRACT, EXTERN, FINAL, NATIVE and STATIC
            name: (String) The name of the custom service, displayed in the UI
            process_groups: (Set of String) The list of process groups the custom service should belong to
            queue_entry_point: (Boolean) The queue entry point flag. Set to true for custom messaging services
            queue_entry_point_type: (String) The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
            returns: (String) Fully qualified type the method returns
            rule: (Block List) The list of rules defining the custom service (see below for nested schema)
            technology: (String) Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
            terraform-provider-dynatrace -export dynatrace_custom_service: downloads all existing custom service configuration
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            visibility: (String) The visibility of the method rule. Possible values are INTERNAL, PACKAGE_PROTECTED, PRIVATE, PROTECTED and PUBLIC
        importStatements: []
    dynatrace_custom_tags Resource - terraform-provider-dynatrace:
        subCategory: Tags
        description: The resource
        name: dynatrace_custom_tags Resource - terraform-provider-dynatrace
        title: dynatrace_custom_tags Resource - terraform-provider-dynatrace
        argumentDocs:
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
            current_state: '(String) For internal use: current state of tags in JSON format'
            entity_selector: (String) Specifies the entities where you want to update tags
            filter: (Block Set) A Tag Filter (see below for nested schema)
            id: (String) The ID of this resource.
            key: (String) The key of the tag. Custom tags have the tag value here
            matched_entities: (Number) The number of monitored entities where the tags have been added.
            tags: '(Block List, Min: 1, Max: 1) Specifies the entities where you want to update tags (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_custom_tags: downloads all existing custom tags configuration
            value: (String) The value of the tag. Not applicable to custom tags
        importStatements: []
    dynatrace_custom_units Resource - terraform-provider-dynatrace:
        subCategory: Metrics
        description: The resource
        name: dynatrace_custom_units Resource - terraform-provider-dynatrace
        title: dynatrace_custom_units Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:custom-unit: )
            description: (String) Unit description should provide additional information about the new unit
            id: (String) The ID of this resource.
            name: (String) Unit name has to be unique and is used as identifier.
            plural_name: (String) Unit plural name represent the plural form of the unit name.
            symbol: (String) Unit symbol has to be unique.
            terraform-provider-dynatrace -export dynatrace_custom_units: downloads all existing custom unit configuration
        importStatements: []
    dynatrace_dashboard Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_dashboard Resource - terraform-provider-dynatrace
        title: dynatrace_dashboard Resource - terraform-provider-dynatrace
        argumentDocs:
            aggregation: (String) The charted aggregation of the metric
            aggregation_rate: (String)
            assigned_entities: (Set of String) The list of Dynatrace entities, assigned to the tile
            auto_refresh_disabled: (Boolean) Auto Refresh is disabled (true)
            axis_limits: (Map of Number) The optional custom y-axis limits
            bounds: '(Block List, Max: 1) the position and size of a tile (see below for nested schema)'
            chart_config: '(Block List, Max: 1) Configuration of a custom chart (see below for nested schema)'
            chart_visible: (Boolean)
            cluster_version: (String) Dynatrace server version
            config: (Block List) Additional metadata for charted metric (see below for nested schema)
            configuration_versions: (List of Number) A Sorted list of the version numbers of the configuration
            configured: (Boolean) The tile is configured and ready to use (true) or just placed on the dashboard (false)
            consistent_colors: (Boolean) The tile uses consistent colors when rendering its content
            current_configuration_versions: (List of String) A Sorted list of the version numbers of the configuration
            custom_color: (String) The color of the metric in the chart, hex format
            custom_name: (String) The name of the tile, set by user
            dashboard_metadata: '(Block List, Max: 1) contains parameters of a dashboard (see below for nested schema)'
            default_name: (String) The default name of the tile
            description: (String) a short description of the Dynatrace entity
            dimension: (Block List) Configuration of the charted metric splitting (see below for nested schema)
            dynamic_filters: '(Block List, Max: 1) Dashboard filter configuration of a dashboard (see below for nested schema)'
            entity_dimension: (Boolean)
            entity_type: (String) The visualization of the timeseries chart
            entity_types: (Set of String) Entity types affected by tag
            exclude_maintenance_windows: (Boolean) Include (false') or exclude (true`) maintenance windows from availability calculations
            filter: '(Block List, Max: 1) Global filter Settings for the Dashboard (see below for nested schema)'
            filter_config: '(Block List, Max: 1) the position and size of a tile (see below for nested schema)'
            filters: (Set of String) A set of all possible global dashboard filters that can be applied to a dashboard
            generic_tag_filters: '(Block List, Max: 1) A set of generic tag filters that can be applied to a dashboard (see below for nested schema)'
            has_axis_bucketing: (Boolean) The axis bucketing when enabled groups similar series in the same virtual axis
            height: (Number) the height of the tile, in pixels
            id: (String) The ID of this resource.
            key: (String) A generated key by the Dynatrace Server
            last_modified: (Number) The timestamp of the last metadata modification, in UTC milliseconds
            left: (Number) the horizontal distance from the top left corner of the dashboard to the top left corner of the tile, in pixels
            left_axis_custom_unit: (String) Either one of Bit, BitPerHour, BitPerMinute, BitPerSecond, Byte, BytePerHour, BytePerMinute, BytePerSecond, Cores, Count, Day, DecibelMilliWatt, GibiByte, Giga, GigaByte, Hour, KibiByte, KibiBytePerHour, KibiBytePerMinute, KibiBytePerSecond, Kilo, KiloByte, KiloBytePerHour, KiloBytePerMinute, KiloBytePerSecond, MebiByte, MebiBytePerHour, MebiBytePerMinute, MebiBytePerSecond, Mega, MegaByte, MegaBytePerHour, MegaBytePerMinute, MegaBytePerSecond, MicroSecond, MilliCores, MilliSecond, MilliSecondPerMinute, Minute, Month, NanoSecond, NanoSecondPerMinute, NotApplicable, PerHour, PerMinute, PerSecond, Percent, Pixel, Promille, Ratio, Second, State, Unspecified, Week, Year
            legend: (Boolean) Defines if a legend should be shown
            limit: (Number) The limit of the results, if not set will use the default value of the system
            link_shared: (Boolean) If true, the dashboard is shared via link and authenticated users with the link can view
            management_zone: (Block List) the management zone this dashboard applies to (see below for nested schema)
            markdown: (String) The markdown-formatted content of the tile
            match: (Block List) the tiles this Dashboard consist of (see below for nested schema)
            metadata: '(Block List, Max: 1, Deprecated) metadata exists for backwards compatibility but shouldn''t get specified anymore (see below for nested schema)'
            metric: (String) The metric assigned to the tile
            name: (String) the name of the dashboard
            name_size: (String) The size of the tile name. Possible values are small, medium and large.
            owner: (String) the owner of the dashboard
            percentile: (Number) The charted percentile. Only applicable if the aggregation is set to PERCENTILE
            preset: (Boolean) the dashboard is a preset (true) or not (false). Default is false.
            published: (Boolean) If true, the dashboard is published to anyone on this environment
            query: (String) A user session query executed by the tile
            result_metadata: (Block List) Additional information about charted metric (see below for nested schema)
            right_axis_custom_unit: (String) Either one of Bit, BitPerHour, BitPerMinute, BitPerSecond, Byte, BytePerHour, BytePerMinute, BytePerSecond, Cores, Count, Day, DecibelMilliWatt, GibiByte, Giga, GigaByte, Hour, KibiByte, KibiBytePerHour, KibiBytePerMinute, KibiBytePerSecond, Kilo, KiloByte, KiloBytePerHour, KiloBytePerMinute, KiloBytePerSecond, MebiByte, MebiBytePerHour, MebiBytePerMinute, MebiBytePerSecond, Mega, MegaByte, MegaBytePerHour, MegaBytePerMinute, MegaBytePerSecond, MicroSecond, MilliCores, MilliSecond, MilliSecondPerMinute, Minute, Month, NanoSecond, NanoSecondPerMinute, NotApplicable, PerHour, PerMinute, PerSecond, Percent, Pixel, Promille, Ratio, Second, State, Unspecified, Week, Year
            series: (Block List) A list of charted metrics (see below for nested schema)
            shared: (Boolean, Deprecated) the dashboard is shared (true) or private (false)
            sharing_details: '(Block List, Max: 1, Deprecated) represents sharing configuration of a dashboard (see below for nested schema)'
            sort_ascending: (Boolean) Sort ascending (true) or descending (false)
            sort_column: (Boolean) Sort the column (true) or (false)
            suggestions_from_entity_type: (String) The entity type for which the suggestions should be provided.
            tag_key: (String) The tag key for this filter
            tag_suggestion_types: (Set of String) A set of entities applied for tag filter suggestions. You can fetch the list of possible values with the GET all entity typesrequest.
            tags: (Set of String) a set of tags assigned to the dashboard
            terraform-provider-dynatrace -export dynatrace_dashboard: downloads all existing dashboard configuration
            tile: (Block List) the tiles this Dashboard consist of (see below for nested schema)
            tile_type: (String) the type of the tile. Must be either APPLICATION_WORLDMAP, RESOURCES, THIRD_PARTY_MOST_ACTIVE, UEM_CONVERSIONS_PER_GOAL, PROCESS_GROUPS_ONE or HOST .
            tiles_name_size: (String) No documentation available
            time_frame_shift: (String) The comparison timeframe of the query. If specified, you additionally get the results of the same query with the specified time shift
            timeframe: (String) the default timeframe of the dashboard
            top: (Number) the vertical distance from the top left corner of the dashboard to the top left corner of the tile, in pixels
            type: (String) The attribute type exists for backwards compatibilty. Usage is discouraged. You should use visualization instead.
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            valid_filter_keys: (Set of String) a set of all possible global dashboard filters that can be applied to dashboard
            values: (Set of String) The splitting value
            visualization: '(String) The visualization of the tile. Possible values are: COLUMN_CHART, FUNNEL, LINE_CHART, PIE_CHART, SINGLE_VALUE, TABLE'
            visualization_config: '(Block List, Max: 1) Configuration of a User session query visualization tile (see below for nested schema)'
            width: (Number) the width of the tile, in pixels
        importStatements: []
    dynatrace_dashboard_sharing Resource - terraform-provider-dynatrace:
        subCategory: Dashboards
        description: The resource
        name: dynatrace_dashboard_sharing Resource - terraform-provider-dynatrace
        title: dynatrace_dashboard_sharing Resource - terraform-provider-dynatrace
        argumentDocs:
            ALL: ': The dashboard is shared via link. Any authenticated user with the link can view the dashboard'
            EDIT: ': The dashboard is shared with edit permission'
            GROUP: ': The dashboard is shared with all users of the specified group.'
            USER: ': The dashboard is shared with the specified user.'
            VIEW: ': The dashboard is shared with read permission.'
            dashboard_id: (String) The Dynatrace entity ID of the dashboard
            enabled: (Boolean) The dashboard is shared (true) or private (false)
            id: (String) The ID of this resource.
            level: '(String) The level of the permission:'
            management_zones: (Set of String) A list of management zones that can display data on the publicly shared dashboard.
            permission: (Block Set) Access permissions of the dashboard (see below for nested schema)
            permissions: '(Block List, Max: 1) Access permissions of the dashboard (see below for nested schema)'
            preset: (Boolean) If true the dashboard will be marked as preset
            public: '(Block List, Max: 1) Configuration of the anonymous access to the dashboard (see below for nested schema)'
            type: '(String) The type of the permission:'
            urls: (Map of String) A list of URLs for anonymous access to the dashboard indexed by management zone name
        importStatements: []
    dynatrace_dashboards_allowlist Resource - terraform-provider-dynatrace:
        subCategory: Dashboards
        description: The resource
        name: dynatrace_dashboards_allowlist Resource - terraform-provider-dynatrace
        title: dynatrace_dashboards_allowlist Resource - terraform-provider-dynatrace
        argumentDocs:
            allowlist: '(Block List, Max: 1) List of URL pattern matchers (see below for nested schema)'
            builtin:dashboards.image.allowlist: )
            id: (String) The ID of this resource.
            rule: '(String) Possible Values: Equals, StartsWith'
            template: (String) Pattern
            terraform-provider-dynatrace -export dynatrace_dashboards_allowlist: downloads all existing allowed URL pattern rules
            urlpattern: '(Block Set, Min: 1) (see below for nested schema)'
        importStatements: []
    dynatrace_dashboards_general Resource - terraform-provider-dynatrace:
        subCategory: Dashboards
        description: The resource
        name: dynatrace_dashboards_general Resource - terraform-provider-dynatrace
        title: dynatrace_dashboards_general Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:dashboards.general: )
            dashboard: (String) Preset dashboard to show as default landing page
            default_dashboard: '(Block List, Min: 1) (see below for nested schema)'
            default_dashboard_list: '(Block List, Max: 1) Configure home dashboard for selected user group. The selected preset dashboard will be loaded as default landing page for this environment. (see below for nested schema)'
            enable_public_sharing: (Boolean) Allow users to grant anonymous access to dashboards. No sign-in will be required to view those dashboards read-only.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_dashboards_general: downloads all existing general dashboard settings
            user_group: (String) Show selected dashboard by default for this user group
        importStatements: []
    dynatrace_dashboards_presets Resource - terraform-provider-dynatrace:
        subCategory: Dashboards
        description: The resource
        name: dynatrace_dashboards_presets Resource - terraform-provider-dynatrace
        title: dynatrace_dashboards_presets Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:dashboards.presets: )
            dashboard_preset: (String) Dashboard preset to limit visibility for
            dashboard_presets: '(Block List, Min: 1) (see below for nested schema)'
            dashboard_presets_list: '(Block List, Max: 1) Show selected preset to respective user group only. (see below for nested schema)'
            enable_dashboard_presets: (Boolean) Dashboard presets are visible to all users by default. For a pristine environment you may disable them entirely or opt to manually limit visibility to selected user groups.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_dashboards_presets: downloads all existing dashboard preset settings
            user_group: (String) User group to show selected dashboard preset to
        importStatements: []
    dynatrace_data_privacy Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_data_privacy Resource - terraform-provider-dynatrace
        title: dynatrace_data_privacy Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            builtin:preferences.privacy: )
            comply_with_do_not_track: (Boolean) Comply with "Do Not Track" browser settings
            data_collection: '(Block List, Min: 1, Max: 1) To provide your end users with the ability to decide for themselves if their activities should be tracked to measure application performance and usage, enable opt-in mode. (see below for nested schema)'
            do_not_track: '(Block List, Min: 1, Max: 1) Most modern web browsers have a privacy feature called "Do Not Track" that individual users may have enabled on their devices. Customize how Dynatrace should behave when it encounters this setting. (see below for nested schema)'
            id: (String) The ID of this resource.
            ip_address_masking: '(String, Deprecated) Possible Values: All, Public'
            ip_address_masking_enabled: (Boolean, Deprecated) Dynatrace captures the IP addresses of your end-users to determine the regions from which they access your application. To learn more, visit Mask IPs and GPS coordinates.. Dynatrace also captures GPS data from mobile apps that provide their users with the option of sharing geolocation data. On the server side, Dynatrace captures IP addresses to enable detailed troubleshooting for Dynatrace service calls.
            masking: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            opt_in_mode_enabled: (Boolean) With Data-collection and opt-in mode enabled, Real User Monitoring data isn't captured until dtrum.enable() is called for specific user sessions.
            persistent_cookie_enabled: (Boolean) When enabled, Dynatrace places a persistent cookie on all end-user devices to identify returning users.
            personal_data_uri_masking_enabled: (Boolean) Dynatrace captures the URIs and request headers sent from desktop and mobile browsers. Dynatrace also captures full URIs on the server-side to enable detailed performance analysis of your applications. For complete details, visit Mask personal data in URIs.. URIs and request headers contain personal data. When this setting is enabled, Dynatrace automatically detects UUIDs, credit card numbers, email addresses, IP addresses, and other IDs and replaces those values with placeholders. The personal data is then masked in PurePath analysis, error analysis, user action naming for RUM, and elsewhere in Dynatrace.
            terraform-provider-dynatrace -export dynatrace_data_privacy: downloads all existing end users' data privacy configuration
            user_action_masking_enabled: '(Boolean) When Dynatrace detects a user action that triggers a page load or an AJAX/XHR action. To learn more about masking user actions, visit Mask user actions.. When Dynatrace detects a user action that triggers a page load or an AJAX/XHR action, it constructs a name for the user action based on:'
            user_tracking: '(Block List, Min: 1, Max: 1) User tracking (see below for nested schema)'
        importStatements: []
    dynatrace_database_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_database_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_database_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute: (Number) Absolute increase of failing service calls to trigger an alert, %
            auto: '(Block List, Max: 1) Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)'
            connection_fails_count: (Number) Number of failed database connections during any eval_period minutes period to trigger an alert
            db_connect_failures: '(Block List, Max: 1) Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds connectionFailsCount during any timePeriodMinutes minutes period (see below for nested schema)'
            drops: '(Block List, Max: 1) The configuration of traffic drops detection (see below for nested schema)'
            eval_period: (Number) The X minutes time period during which the connection_fails_count is evaluated
            failure_rate: '(Block List, Max: 1) Configuration of failure rate increase detection (see below for nested schema)'
            id: (String) The ID of this resource.
            load: '(Block List, Max: 1) Configuration for anomalies regarding load drops and spikes (see below for nested schema)'
            milliseconds: (Number) Alert if the response time degrades by more than X milliseconds
            minutes: (Number) Alert if the service stays in abnormal state for at least X minutes
            percent: (Number) Alert if the observed load is more than X % of the expected value
            relative: (Number) Relative increase of failing service calls to trigger an alert, %
            response_time: '(Block List, Max: 1) Configuration of response time degradation detection (see below for nested schema)'
            sensitivity: (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
            slowest_milliseconds: (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
            slowest_percent: (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
            spikes: '(Block List, Max: 1) The configuration of traffic spikes detection (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_database_anomalies: downloads all existing database anomaly detection configuration
            threshold: (Number) Failure rate during any 5-minute period to trigger an alert, %
            thresholds: '(Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)'
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
        importStatements: []
    dynatrace_database_anomalies_v2 Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_database_anomalies_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_database_anomalies_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute_increase: (Number) Absolute threshold
            auto_detection: '(Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)'
            builtin:anomaly-detection.databases: )
            database_connections: '(Block List, Min: 1, Max: 1) Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold: (see below for nested schema)'
            degradation_milliseconds: (Number) Absolute threshold
            degradation_percent: (Number) Relative threshold
            detection_mode: (String) Detection mode for increases in failure rate
            enabled: (Boolean) Detect failed database connects
            failure_rate: '(Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)'
            fixed_detection: '(Block List, Max: 1) Alert if a given failure rate is exceeded during any 5-minute-period (see below for nested schema)'
            id: (String) The ID of this resource.
            load_drop_percent: (Number) Threshold
            load_drops: '(Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time. (see below for nested schema)'
            load_spike_percent: (Number) Threshold
            load_spikes: '(Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time. (see below for nested schema)'
            max_failed_connects: (Number) Threshold
            minutes_abnormal_state: (Number) Only alert if the abnormal state remains for at least
            over_alerting_protection: '(Block List, Min: 1, Max: 1) Avoid over-alerting (see below for nested schema)'
            relative_increase: (Number) Relative threshold
            requests_per_minute: (Number) Only alert if there are at least
            response_time: '(Block List, Min: 1, Max: 1) Response time (see below for nested schema)'
            response_time_all: '(Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)'
            response_time_slowest: '(Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)'
            scope: (String) The scope for the database anomaly detection
            sensitivity: (String) no documentation available
            slowest_degradation_milliseconds: (Number) Absolute threshold
            slowest_degradation_percent: (Number) Relative threshold
            terraform-provider-dynatrace -export dynatrace_database_anomalies_v2: downloads all existing database anomaly detection configuration
            threshold: (Number) no documentation available
            time_period: (Number) Time span
        importStatements: []
    dynatrace_ddu_pool Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_ddu_pool Resource - terraform-provider-dynatrace
        title: dynatrace_ddu_pool Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:accounting.ddu.limit: )
            enabled: (Boolean) Is the limit configuration enabled
            events: '(Block List, Max: 1) DDU pool settings for Events (see below for nested schema)'
            id: (String) The ID of this resource.
            log_monitoring: '(Block List, Max: 1) DDU pool settings for Log Monitoring (see below for nested schema)'
            metrics: '(Block List, Max: 1) DDU pool settings for Metrics (see below for nested schema)'
            serverless: '(Block List, Max: 1) DDU pool settings for Serverless (see below for nested schema)'
            traces: '(Block List, Max: 1) DDU pool settings for Traces (see below for nested schema)'
            type: '(String) Type of the limit applied: MONTHLY or ANNUAL'
            value: (Number) Value of the DDU limit applied for provided timerange
        importStatements: []
    dynatrace_declarative_grouping Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_declarative_grouping Resource - terraform-provider-dynatrace
        title: dynatrace_declarative_grouping Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:declarativegrouping: )
            condition: (String) - $contains(svc) – Matches if svc appears anywhere in the process property value.
            detection: '(Block List, Max: 1) Enter a descriptive process group display name and a unique identifier that Dynatrace can use to recognize this process group. (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            name: (String) Monitored technology name
            process_definition: '(Block List, Min: 1) (see below for nested schema)'
            process_group_name: (String) This identifier is used by Dynatrace to recognize this process group.
            property: '(String) Possible Values: Executable, ExecutablePath, CommandLine'
            report: '(String) Possible Values: never, always, highResourceUsage'
            rule: '(Block List, Min: 1) (see below for nested schema)'
            rules: '(Block List, Max: 1) Define process detection rules by selecting a process property and a condition. Each process group can have multiple detection rules associated with it. (see below for nested schema)'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_declarative_grouping: downloads all existing declarative process grouping configuration
        importStatements: []
    dynatrace_disk_analytics Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_disk_analytics Resource - terraform-provider-dynatrace
        title: dynatrace_disk_analytics Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:disk.analytics.extension: )
            enabled: (Boolean) The Disk Analytics feature requires an extension to be added to your environment. The Disk Analytics extension consumes custom metrics and Davis data units.
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (HOST, HOST_GROUP)
            terraform-provider-dynatrace -export dynatrace_disk_analytics: downloads all existing Disk Analytics extension configuration
        importStatements: []
    dynatrace_disk_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_disk_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_disk_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
            disk_name: '(Block List, Max: 1) Narrows the rule usage down to disks, matching the specified criteria (see below for nested schema)'
            enabled: (Boolean) Disk event rule enabled/disabled
            filter: (Block Set) A Tag Filter (see below for nested schema)
            host_group_id: (String) Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group
            id: (String) The ID of this resource.
            key: (String) The key of the tag. Custom tags have the tag value here
            metric: '(String) The metric to monitor. Possible values are: LOW_DISK_SPACE, LOW_INODES, READ_TIME_EXCEEDING and WRITE_TIME_EXCEEDING'
            name: (String) The name of the disk event rule
            operator: '(String) Possible values are: CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS and STARTS_WITH'
            samples: (Number) The number of samples to evaluate
            tags: '(Block List, Max: 1) Narrows the rule usage down to the hosts matching the specified tags (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_disk_anomalies: downloads all existing disk anomaly detection configuration
            threshold: (Number) The threshold to trigger disk event.   * A percentage for LowDiskSpace or LowInodes metrics.   * In milliseconds for ReadTimeExceeding or WriteTimeExceeding metrics
            value: (String) Value to compare to
            violating_samples: (Number) The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples
        importStatements: []
    dynatrace_disk_anomalies_v2 Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_disk_anomalies_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_disk_anomalies_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.infrastructure-disks: )
            custom_thresholds: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            detection_mode: (String) Detection mode for low inodes number available
            disk: '(Block List, Min: 1, Max: 1) Disk (see below for nested schema)'
            disk_low_inodes_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            disk_low_space_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            disk_slow_writes_and_reads_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) Detect low inodes number available
            free_inodes_percentage: (Number) Alert if the percentage of available inodes is lower than this threshold in 3 out of 5 samples
            free_space_percentage: (Number) Alert if free disk space is lower than this percentage in 3 out of 5 samples
            id: (String) The ID of this resource.
            scope: (String) The scope for the disk anomaly detection
            terraform-provider-dynatrace -export dynatrace_disk_anomalies_v2: downloads all existing disk anomaly detection configuration
            write_and_read_time: (Number) Alert if disk read time or write time is higher than this threshold in 3 out of 5 samples
        importStatements: []
    dynatrace_disk_anomaly_rules Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_disk_anomaly_rules Resource - terraform-provider-dynatrace
        title: dynatrace_disk_anomaly_rules Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.disk-rules: )
            disk_name_filter: '(Block List, Min: 1, Max: 1) Only apply to disks whose name matches (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_group_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            metric: '(String) Possible Values: LOW_DISK_SPACE, LOW_INODES, READ_TIME_EXCEEDING, WRITE_TIME_EXCEEDING'
            name: (String) Name
            operator: '(String) Possible Values: CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH'
            sample_limit: '(Block List, Min: 1, Max: 1) Only alert if the threshold was violated in at least n of the last m samples (see below for nested schema)'
            samples: (Number) .. within the last
            tag_filters: (Set of String) Only apply to hosts that have the following tags
            terraform-provider-dynatrace -export dynatrace_disk_anomaly_rules: downloads all existing disk anomaly detection rules
            threshold_milliseconds: (Number) Alert if higher than
            threshold_percent: (Number) Alert if lower than
            value: (String) Matching text
            violating_samples: (Number) Minimum number of violating samples
        importStatements: []
    dynatrace_disk_options Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_disk_options Resource - terraform-provider-dynatrace
        title: dynatrace_disk_options Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:disk.options: )
            exclusion: '(Block List, Min: 1) (see below for nested schema)'
            exclusions: '(Block List, Max: 1) OneAgent automatically detects and monitors all your mount points, however you can create exception rules to remove disks from the monitoring list. (see below for nested schema)'
            filesystem: '(String) File system type field: the type of the file system to be excluded from monitoring. Examples:'
            id: (String) The ID of this resource.
            mountpoint: '(String) Disk or mount point path field: the path to where the disk to be excluded from monitoring is mounted. Examples:'
            nfs_show_all: (Boolean) When disabled OneAgent will try to deduplicate some of nfs disks. Disabled by default, applies only to Linux hosts. Requires OneAgent 1.209 or later
            os: '(String) Possible Values: OS_TYPE_AIX, OS_TYPE_DARWIN, OS_TYPE_HPUX, OS_TYPE_LINUX, OS_TYPE_SOLARIS, OS_TYPE_UNKNOWN, OS_TYPE_WINDOWS, OS_TYPE_ZOS'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_disk_options: downloads all existing host disk visibility settings
        importStatements: []
    dynatrace_disk_specific_anomalies_v2 Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_disk_specific_anomalies_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_disk_specific_anomalies_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.infrastructure-disks.per-disk-override: )
            custom_thresholds: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            detection_mode: (String) Detection mode for low inodes number available
            disk_id: (String) The id for the disk anomaly detection
            disk_low_inodes_detection: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            disk_low_space_detection: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            disk_slow_writes_and_reads_detection: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) Detect low inodes number available
            free_inodes_percentage: (Number) Alert if the percentage of available inodes is lower than this threshold in 3 out of 5 samples
            free_space_percentage: (Number) Alert if free disk space is lower than this percentage in 3 out of 5 samples
            id: (String) The ID of this resource.
            override_disk_low_space_detection: (Boolean) Override low disk space detection settings
            override_low_inodes_detection: (Boolean) Override low inodes detection settings
            override_slow_writes_and_reads_detection: (Boolean) Override slow writes and reads detection settings
            terraform-provider-dynatrace -export dynatrace_disk_specific_anomalies_v2: downloads all existing disk specific anomaly detection configuration
            write_and_read_time: (Number) Alert if disk read time or write time is higher than this threshold in 3 out of 5 samples
        importStatements: []
    dynatrace_email_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_email_notification Resource - terraform-provider-dynatrace
        title: dynatrace_email_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            bcc: (Set of String) The list of the email BCC-recipients
            body: '(String) The template of the email notification.  You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsHTML}: All problem event details, including root cause, as an HTML-formatted string.  * {ProblemDetailsJSON}: All problem event details, including root cause, as a JSON object.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            builtin:problem.notifications: )
            cc: (Set of String) The list of the email CC-recipients
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            name: (String) The name of the notification configuration
            notify_closed_problems: (Boolean) Send email if problem is closed
            profile: (String) The ID of the associated alerting profile
            subject: (String) The subject of the email notifications
            terraform-provider-dynatrace -export dynatrace_email_notification: downloads the existing problem notifications via Email
            to: (Set of String) The list of the email recipients
        importStatements: []
    dynatrace_environment Resource - terraform-provider-dynatrace:
        subCategory: Cluster Management
        description: The resource
        name: dynatrace_environment Resource - terraform-provider-dynatrace
        title: dynatrace_environment Resource - terraform-provider-dynatrace
        argumentDocs:
            annual: (Number) Annual environment quota. Not set if unlimited
            ddus: '(Block List, Max: 1) Davis Data Units consumption and quota information on environment level. Not set (and not editable) if Davis data units is not enabled (see below for nested schema)'
            dem_units: '(Block List, Max: 1) DEM units consumption and quota information on environment level (see below for nested schema)'
            host_units: (Number) Host units consumption and quota information on environment level
            id: (String) The ID of this resource.
            limits: '(Block List, Max: 1) (see below for nested schema)'
            logs: (Number) Log monitoring storage usage and limit information on environment level in bytes. Not editable when Log monitoring is not allowed by license or not configured on cluster level. 0 for unlimited.
            monthly: (Number) Monthly environment quota. Not set if unlimited
            name: (String) The display name of the environment
            quotas: '(Block List, Max: 1) Environment level consumption and quotas information (see below for nested schema)'
            retention: '(Block List, Max: 1) (see below for nested schema)'
            rum: (Number) Real user monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days
            service_code_level: (Number) Service code level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year
            service_request_level: (Number) Service request level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year
            session_replay: (Number) Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.
            state: (String) Indicates whether the environment is enabled or disabled. Possible values are ENABLED and DISABLED. The default value is ENABLED
            storage: '(Block List, Min: 1, Max: 1) Environment level storage usage and limit information (see below for nested schema)'
            symbol_files: (Number) Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.
            synthetic: (Number) Synthetic monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days
            tags: (Set of String) A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters
            transactions: (Number) Maximum number of newly monitored entry point PurePaths captured per process/minute on environment level. Can be set to any value from 100 to 100000
            trial: (Boolean) Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)
            user_actions: (Number) Maximum number of user actions generated per minute on environment level. Can be set to any value from 1 to 2147483646 or left unlimited by omitting this property
            user_sessions: '(Block List, Max: 1) User sessions consumption and quota information on environment level (see below for nested schema)'
        importStatements: []
    dynatrace_eula_settings Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_eula_settings Resource - terraform-provider-dynatrace
        title: dynatrace_eula_settings Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:eula-settings: )
            enable_eula: (Boolean) Display end user terms to new users logging in to the environment
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (environment)
            terraform-provider-dynatrace -export dynatrace_eula_settings: downloads existing clickwrap agreement configuration
        importStatements: []
    dynatrace_extension_execution_controller Resource - terraform-provider-dynatrace:
        subCategory: Extensions
        description: The resource
        name: dynatrace_extension_execution_controller Resource - terraform-provider-dynatrace
        title: dynatrace_extension_execution_controller Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:eec.local: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            ingest_active: (Boolean) Enable local HTTP Metric, Log and Event Ingest API
            performance_profile: '(String) Possible Values: DEFAULT, HIGH'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            statsd_active: (Boolean) Enable Dynatrace StatsD
            terraform-provider-dynatrace -export dynatrace_extension_execution_controller: downloads all existing Extension Execution Controller configuration
        importStatements: []
    dynatrace_extension_execution_remote Resource - terraform-provider-dynatrace:
        subCategory: Extensions
        description: The resource
        name: dynatrace_extension_execution_remote Resource - terraform-provider-dynatrace
        title: dynatrace_extension_execution_remote Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:eec.remote: )
            id: (String) The ID of this resource.
            performance_profile: (String) Select performance profile for Extension Execution Controller Documentation
            scope: (String) The scope of this setting (ENVIRONMENT_ACTIVE_GATE)
            terraform-provider-dynatrace -export dynatrace_extension_execution_remote: downloads all existing Extension Execution Controller configuration
        importStatements: []
    dynatrace_failure_detection_parameters Resource - terraform-provider-dynatrace:
        subCategory: Failure Detection
        description: The resource
        name: dynatrace_failure_detection_parameters Resource - terraform-provider-dynatrace
        title: dynatrace_failure_detection_parameters Resource - terraform-provider-dynatrace
        argumentDocs:
            broken_link_domains: (Set of String) If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
            broken_links: '(Block List, Min: 1, Max: 1) HTTP 404 response codes are thrown when a web server can''t find a certain page. 404s are classified as broken links on the client side and therefore aren''t considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures. (see below for nested schema)'
            builtin:failure-detection.environment.parameters: )
            case_sensitive: (Boolean) Case sensitive
            class_pattern: (String) The pattern will match if it is contained within the actual class name.
            client_side_errors: (String) HTTP response codes which indicate client side errors
            compare_operation_type: (String) Apply this comparison
            condition: '(Block List, Min: 1, Max: 1) Request attribute condition (see below for nested schema)'
            custom_error_rule: '(Block Set, Min: 1) (see below for nested schema)'
            custom_error_rules: '(Block List, Max: 1) Some custom error situations are only detectable via a return value or other means. To support such cases, define a request attribute that captures the required data. Then define a custom error rule that determines if the request has failed based on the value of the request attribute. (see below for nested schema)'
            custom_handled_exception: '(Block Set, Min: 1) (see below for nested schema)'
            custom_handled_exceptions: '(Block List, Max: 1) There may be situations where your application code handles exceptions gracefully in a manner that these failures aren''t detected by Dynatrace. Use this setting to define specific gracefully-handled exceptions that should be treated as service failures. (see below for nested schema)'
            description: (String) Description
            double_value: (Number) Value
            exception_rules: '(Block List, Min: 1, Max: 1) Customize failure detection for specific exceptions and errors (see below for nested schema)'
            fail_on_missing_response_code_client_side: (Boolean) Treat missing HTTP response code as client side error
            fail_on_missing_response_code_server_side: (Boolean) Treat missing HTTP response code as server side errors
            http_404_not_found_failures: (Boolean) Consider 404 HTTP response codes as failures
            http_response_codes: '(Block List, Min: 1, Max: 1) HTTP response codes (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_all_exceptions: (Boolean) Ignore all exceptions
            ignore_span_failure_detection: (Boolean) Ignore span failure detection
            ignored_exceptions: '(Block List, Max: 1) Some exceptions that are thrown by legacy or 3rd-party code indicate a specific response, not an error. Use this setting to instruct Dynatrace to treat such exceptions as non-failed requests.. If an exception matching any of the defined patterns occurs in a request, it will not be considered as a failure. Other exceptions occurring at the same request might still mark the request as failed. (see below for nested schema)'
            int_value: (Number) Value
            message_pattern: (String) Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
            name: (String) Name
            request_attribute: (String) Request attribute
            server_side_errors: (String) HTTP response codes which indicate an error on the server side
            success_forcing_exceptions: '(Block List, Max: 1) Define exceptions which indicate that a service call should not be considered as failed. E.g. an exception indicating that the client aborted the operation.. If an exception matching any of the defined patterns occurs on the entry node of the service, it will be considered successful. Compared to ignored exceptions, the request will be considered successful even if other exceptions occur in the same request. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_failure_detection_parameters: downloads all existing failure detection parameters
            text_value: (String) Value
        importStatements: []
    dynatrace_failure_detection_rules Resource - terraform-provider-dynatrace:
        subCategory: Failure Detection
        description: The resource
        name: dynatrace_failure_detection_rules Resource - terraform-provider-dynatrace
        title: dynatrace_failure_detection_rules Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute: '(String) Possible Values: PG_NAME, PG_TAG, SERVICE_MANAGEMENT_ZONE, SERVICE_NAME, SERVICE_TAG, SERVICE_TYPE'
            builtin:failure-detection.environment.rules: )
            case_sensitive: (Boolean) Case sensitive
            condition: '(Block Set, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Min: 1, Max: 1) Conditions (see below for nested schema)'
            description: (String) Rule description
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            management_zones: (Set of String) Management zones
            name: (String) Rule name
            parameter_id: (String) Failure detection parameters
            predicate: '(Block List, Min: 1, Max: 1) Condition to check the attribute against (see below for nested schema)'
            predicate_type: (String) Predicate type
            service_type: (Set of String) Service types
            tag_keys: (Set of String) Tag keys
            tags: (Set of String) Tags (exact match)
            terraform-provider-dynatrace -export dynatrace_failure_detection_rules: downloads all existing failure detection rules
            text_values: (Set of String) Names
        importStatements: []
    dynatrace_frequent_issues Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_frequent_issues Resource - terraform-provider-dynatrace
        title: dynatrace_frequent_issues Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.frequent-issues: )
            detect_apps: (Boolean) Detect frequent issues within applications, enabled (true) or disabled (false)
            detect_infra: (Boolean) Detect frequent issues within infrastructure, enabled (true) or disabled (false)
            detect_txn: (Boolean) Detect frequent issues within transactions and services, enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_frequent_issues: downloads the existing frequent issue detection configuration
        importStatements: []
    dynatrace_generic_relationships Resource - terraform-provider-dynatrace:
        subCategory: Topology Model
        description: The resource
        name: dynatrace_generic_relationships Resource - terraform-provider-dynatrace
        title: dynatrace_generic_relationships Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitoredentities.generic.relation: )
            condition: |-
                (String) Specify a filter that needs to match in order for the extraction to happen.. Two different filters are supported: $eq(value) will ensure that the source matches exactly 'value', while $prefix(value) will ensure that the source begins with exactly 'value'.
                If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
            created_by: (String) The user or extension that created this relationship.
            destination_property: (String) The case-sensitive name of a property of the destination type.
            destination_transformation: '(String) Possible Values: Leavetextas_is, Tolowercase, Touppercase'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            from_role: (String) Specify a role for the source entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the source type is considered for the relationship.
            from_type: (String) Define an entity type as the source of the relationship.
            id: (String) The ID of this resource.
            mapping_rule: '(Block Set, Min: 1) (see below for nested schema)'
            mapping_rules: '(Block List, Max: 1) Specify all properties which should be compared. If all mapping rules match a relationship between entities will be created. (see below for nested schema)'
            source: '(Block Set, Min: 1) (see below for nested schema)'
            source_property: (String) The case-sensitive name of a property of the source type.
            source_transformation: '(String) Possible Values: Leavetextas_is, Tolowercase, Touppercase'
            source_type: '(String) Possible Values: Entities, Events, Logs, Metrics, Spans, Topology'
            sources: '(Block List, Min: 1, Max: 1) Specify all sources which should be evaluated for this relationship rule. The relationship is only created when any of the filters match. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_generic_relationships: downloads all existing custom topology generic relationships configuration
            to_role: (String) Specify a role for the destination entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the destination type is considered for the relationship.
            to_type: (String) Define an entity type as the destination of the relationship. You can choose the same type as the source type. In this case you also may assign different roles for source and destination for having directed relationships.
            type_of_relation: '(String) Possible Values: CALLS, CHILD_OF, INSTANCE_OF, PART_OF, RUNS_ON, SAME_AS'
        importStatements: []
    dynatrace_generic_types Resource - terraform-provider-dynatrace:
        subCategory: Topology Model
        description: The resource
        name: dynatrace_generic_types Resource - terraform-provider-dynatrace
        title: dynatrace_generic_types Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute: '(Block Set, Min: 1) (see below for nested schema)'
            attributes: '(Block List, Max: 1) All attribute extraction rules will be applied and found attributes will be added to the extracted type. (see below for nested schema)'
            builtin:monitoredentities.generic.type: )
            condition: |-
                (String) Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: $eq(value) will ensure that the source matches exactly 'value', $prefix(value) will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
            created_by: (String) The user or extension that created this type.
            display_name: (String) The human readable type name for this entity type.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            icon_pattern: (String) Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
            id: (String) The ID of this resource.
            id_pattern: (String) ID patterns are comprised of static text and placeholders referring to dimensions in the ingest data. An ID pattern must contain at least one placeholder to ensure that different entities will be created.. Take care that the pattern results in the same ID for the same entity. For example, using timestamp or counter-like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!
            instance_name_pattern: (String) Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
            key: (String) The attribute key is the unique name of the attribute.
            name: (String) The entity type name. This type name must be unique and must not be changed after creation.
            pattern: (String) Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
            required_dimension: '(Block Set, Min: 1) (see below for nested schema)'
            required_dimensions: '(Block List, Max: 1) In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule. (see below for nested schema)'
            role: (String) If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
            rule: '(Block List, Min: 1) (see below for nested schema)'
            rules: '(Block List, Min: 1, Max: 1) Specify a list of rules which are evaluated in order. When any rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated. (see below for nested schema)'
            source: '(Block Set, Min: 1) (see below for nested schema)'
            source_type: '(String) Possible Values: Entities, Events, Logs, Metrics, Spans, Topology'
            sources: '(Block List, Min: 1, Max: 1) Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_generic_types: downloads all existing custom topology generic types configuration
            value_pattern: (String) A dimension value pattern which needs to exist in the ingest data to match this filter.
        importStatements: []
    dynatrace_geolocation Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_geolocation Resource - terraform-provider-dynatrace
        title: dynatrace_geolocation Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:geo-settings: )
            display_worldmap: (Boolean) Display the world map
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_geolocation: downloads all existing geolocation settings
        importStatements: []
    dynatrace_host_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_host_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_host_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            connections: '(Block List, Max: 1) Configuration of lost connection detection (see below for nested schema)'
            connectivity: '(Block List, Max: 1) Configuration of TCP connectivity problems detection (see below for nested schema)'
            cpu: '(Block List, Max: 1) Configuration of high CPU saturation detection (see below for nested schema)'
            disks: '(Block List, Max: 1) Configuration of disk related anomalies (see below for nested schema)'
            dropped_packets: '(Block List, Max: 1) Configuration of high number of dropped packets detection (see below for nested schema)'
            enabled: (Boolean) The detection is enabled (true) or disabled (false)
            enabled_on_graceful_shutdowns: (Boolean) Alert (true) on graceful host shutdowns
            errors: '(Block List, Max: 1) Configuration of high number of network errors detection (see below for nested schema)'
            errors_percentage: (Number) Receive/transmit error packet percentage is higher than X% in 3 out of 5 samples
            exception_count: (Number) Alert if the number of Java out of memory exceptions is X per minute or higher
            failed_connections: (Number) Number of failed connections is higher than X connections per minute in 3 out of 5 samples
            gc: '(Block List, Max: 1) Configuration of high Garbage Collector activity detection (see below for nested schema)'
            id: (String) The ID of this resource.
            inodes: '(Block List, Max: 1) Configuration of low disk inodes number detection (see below for nested schema)'
            java: '(Block List, Max: 1) Configuration of Java related anomalies (see below for nested schema)'
            linux: '(Block List, Min: 1, Max: 1) Custom thresholds for Linux (see below for nested schema)'
            memory: '(Block List, Max: 1) Configuration of high memory usage detection (see below for nested schema)'
            network: '(Block List, Max: 1) Configuration of network related anomalies (see below for nested schema)'
            new_connection_failures: (Number) Percentage of new connection failures is higher than X% in 3 out of 5 samples
            out_of_memory: '(Block List, Max: 1) Configuration of Java out of memory problems detection (see below for nested schema)'
            out_of_threads: '(Block List, Max: 1) Configuration of Java out of threads problems detection (see below for nested schema)'
            page_faults: (Number) Memory page fault rate is higher than X faults per second
            percentage: (Number) Alert if percentage of available inodes is lower than X% in 3 out of 5 samples
            retransmission: '(Block List, Max: 1) Configuration of high retransmission rate detection (see below for nested schema)'
            retransmission_rate: (Number) Retransmission rate is higher than X% in 3 out of 5 samples
            retransmitted_packets: (Number) Number of retransmitted packets is higher than X packets per minute in 3 out of 5 samples
            saturation: (Number) Alert if CPU usage is higher than X% in 3 out of 5 samples
            space: '(Block List, Max: 1) Configuration of low disk space detection (see below for nested schema)'
            speed: '(Block List, Max: 1) Configuration of slow running disks detection (see below for nested schema)'
            suspension_percentage: (Number) GC suspension is higher than X% in 3 out of 5 samples
            terraform-provider-dynatrace -export dynatrace_host_anomalies: downloads all existing host anomaly detection configuration
            thresholds: '(Block List, Max: 1) Custom thresholds for high CPU saturation. If not set then the automatic mode is used (see below for nested schema)'
            time_percentage: (Number) GC time is higher than X% in 3 out of 5 samples
            total_packets_rate: (Number) Total receive/transmit packets rate is higher than X packets per second in 3 out of 5 samples
            usage: (Number) Memory usage is higher than X%
            utilization: '(Block List, Max: 1) Configuration of high network utilization detection (see below for nested schema)'
            windows: '(Block List, Min: 1, Max: 1) Custom thresholds for Windows (see below for nested schema)'
            write_and_read_time: (Number) Alert if disk read/write time is higher than X milliseconds in 3 out of 5 samples
        importStatements: []
    dynatrace_host_anomalies_v2 Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_host_anomalies_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_host_anomalies_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.infrastructure-hosts: )
            connection_lost_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            cpu_saturation: (Number) Alert if the CPU usage is higher than this threshold for the defined amount of samples
            custom_thresholds: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            dealerting_evaluation_window: (Number) The number of 10-second samples that form the sliding evaluation window for dealerting.
            dealerting_samples: (Number) The number of 10-second samples within the evaluation window that must be lower the threshold to close an event
            detection_mode: (String) Detection mode for CPU saturation
            dropped_packets_percentage: (Number) Receive/transmit dropped packet percentage threshold
            enabled: (Boolean) Detect host or monitoring connection lost problems
            errors_percentage: (Number) Alert if sent/received traffic utilization is higher than this threshold for the defined amount of samples
            event_thresholds: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            failed_connections_number_per_minute: (Number) Number of failed connections threshold
            gc_suspension_percentage: (Number) Alert if the GC suspension is higher than this threshold
            gc_time_percentage: (Number) Alert if GC time is higher than this threshold
            high_cpu_saturation_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            high_gc_activity_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            high_memory_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            high_network_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            high_system_load_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            host: '(Block List, Min: 1, Max: 1) Hosts (see below for nested schema)'
            id: (String) The ID of this resource.
            network: '(Block List, Min: 1, Max: 1) Network (see below for nested schema)'
            network_dropped_packets_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            network_errors_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            network_high_retransmission_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            network_tcp_problems_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            new_connection_failures_percentage: (Number) New connection failure threshold
            on_graceful_shutdowns: (String) Graceful host shutdowns
            out_of_memory_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            out_of_memory_exceptions_number: (Number) Alert if the number of Java out-of-memory exceptions is at least this value
            out_of_threads_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            out_of_threads_exceptions_number: (Number) Alert if the number of Java out-of-threads exceptions is at least this value
            page_faults_per_second_non_windows: (Number) Alert if the memory page fault rate on Unix systems is higher than this threshold for the defined amount of samples
            page_faults_per_second_windows: (Number) Alert if the memory page fault rate on Windows is higher than this threshold for the defined amount of samples
            retransmission_rate_percentage: (Number) Retransmission rate threshold
            retransmitted_packets_number_per_minute: (Number) Number of retransmitted packets threshold
            scope: (String) The scope of this setting (HOST HOST_GROUP environment)
            system_load: (Number) Alert if the System Load / Logical cpu core is higher than this threshold for the defined amount of samples
            terraform-provider-dynatrace -export dynatrace_host_anomalies_v2: downloads all existing host anomaly detection configuration
            total_packets_rate: (Number) Total packets rate threshold
            used_memory_percentage_non_windows: (Number) Alert if the memory usage on Unix systems is higher than this threshold
            used_memory_percentage_windows: (Number) Alert if the memory usage on Windows is higher than this threshold
            violating_evaluation_window: (Number) The number of 10-second samples that form the sliding evaluation window to detect violating samples.
            violating_samples: (Number) The number of 10-second samples within the evaluation window that must exceed the threshold to trigger an event
        importStatements: []
    dynatrace_host_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_host_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_host_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            auto_injection: (Boolean) An auto-injection disabled with oneagentctl takes precedence over this setting and cannot be changed from the Dynatrace web UI.
            builtin:host.monitoring: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            full_stack: (Boolean, Deprecated) Dynatrace uses full-stack monitoring by default, to monitor every aspect of your environment, including all processes, services, and applications detected on your hosts.
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_host_monitoring: downloads all existing host monitoring configuration
        importStatements: []
    dynatrace_host_monitoring_mode Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_host_monitoring_mode Resource - terraform-provider-dynatrace
        title: dynatrace_host_monitoring_mode Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:host.monitoring.mode: )
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            monitoring_mode: '(String) Possible Values: DISCOVERY, FULL_STACK, INFRA_ONLY'
            terraform-provider-dynatrace -export dynatrace_host_monitoring_mode: downloads all existing host monitoring mode configuration
        importStatements: []
    dynatrace_host_naming Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_host_naming Resource - terraform-provider-dynatrace
        title: dynatrace_host_naming Resource - terraform-provider-dynatrace
        argumentDocs:
            application_type: (Block List) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            application_type_comparison: (Block List, Deprecated) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            attribute: (String) The attribute to be used for comparision
            azure_compute_mode: (Block List, Deprecated) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_compute_mode_comparison: (Block List) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_sku: (Block List) Comparison for AZURE_SKU attributes (see below for nested schema)
            azure_sku_comparision: (Block List, Deprecated) Comparison for AZURE_SKU attributes (see below for nested schema)
            base_comparison_basic: (Block List, Deprecated) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            base_condition_key: (Block List, Deprecated) Fallback for not yet known type (see below for nested schema)
            bitness: (Block List) Comparison for BITNESS attributes (see below for nested schema)
            bitness_comparision: (Block List, Deprecated) Comparison for BITNESS attributes (see below for nested schema)
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or insensitive (false)
            cloud_type: (Block List) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            cloud_type_comparison: (Block List, Deprecated) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            comparison: (Block List) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            condition: (Block List) A conditions for the metric usage (see below for nested schema)
            conditions: (Block List) A list of matching conditions of the rule.  The rule applies only if all conditions are fulfilled (see below for nested schema)
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the CONTEXTLESS value
            custom_application_type: (Block List) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_application_type_comparison: (Block List, Deprecated) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_host_metadata: (Block List) Key for Custom Host Metadata (see below for nested schema)
            custom_host_metadata_condition_key: (Block List, Deprecated) Key for Custom Host Metadata (see below for nested schema)
            custom_process_metadata: (Block List) Key for Custom Process Metadata (see below for nested schema)
            custom_process_metadata_condition_key: (Block List, Deprecated) Key for Custom Process Metadata (see below for nested schema)
            database_topology: (Block List) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            database_topology_comparison: (Block List, Deprecated) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            dcrum_decoder: (Block List) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dcrum_decoder_comparison: (Block List, Deprecated) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dynamic_key: '(Block List, Min: 1, Max: 1) The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key (see below for nested schema)'
            enabled: (Boolean) The rule is enabled (true) or disabled (false)
            entity: (Block List) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_id_comparison: (Block List, Deprecated) Comparison for ENTITY_ID attributes (see below for nested schema)
            format: '(String) The name to be assigned to matching entities. You can use the following placeholders here:  * {AwsAutoScalingGroup:Name}  * {AwsAvailabilityZone:Name}  * {AwsElasticLoadBalancer:Name}  * {AwsRelationalDatabaseService:DBName}  * {AwsRelationalDatabaseService:Endpoint}  * {AwsRelationalDatabaseService:Engine}  * {AwsRelationalDatabaseService:InstanceClass}  * {AwsRelationalDatabaseService:Name}  * {AwsRelationalDatabaseService:Port}  * {AzureRegion:Name}  * {AzureScaleSet:Name}  * {AzureVm:Name}  * {CloudFoundryOrganization:Name}  * {CustomDevice:DetectedName}  * {CustomDevice:DnsName}  * {CustomDevice:IpAddress}  * {CustomDevice:Port}  * {DockerContainerGroupInstance:ContainerName}  * {DockerContainerGroupInstance:FullImageName}  * {DockerContainerGroupInstance:ImageVersion}  * {DockerContainerGroupInstance:StrippedImageName}  * {ESXIHost:HardwareModel}  * {ESXIHost:HardwareVendor}  * {ESXIHost:Name}  * {ESXIHost:ProductName}  * {ESXIHost:ProductVersion}  * {Ec2Instance:AmiId}  * {Ec2Instance:BeanstalkEnvironmentName}  * {Ec2Instance:InstanceId}  * {Ec2Instance:InstanceType}  * {Ec2Instance:LocalHostName}  * {Ec2Instance:Name}  * {Ec2Instance:PublicHostName}  * {Ec2Instance:SecurityGroup}  * {GoogleComputeInstance:Id}  * {GoogleComputeInstance:IpAddresses}  * {GoogleComputeInstance:MachineType}  * {GoogleComputeInstance:Name}  * {GoogleComputeInstance:ProjectId}  * {GoogleComputeInstance:Project}  * {Host:AWSNameTag}  * {Host:AixLogicalCpuCount}  * {Host:AzureHostName}  * {Host:AzureSiteName}  * {Host:BoshDeploymentId}  * {Host:BoshInstanceId}  * {Host:BoshInstanceName}  * {Host:BoshName}  * {Host:BoshStemcellVersion}  * {Host:CpuCores}  * {Host:DetectedName}  * {Host:Environment:AppName}  * {Host:Environment:BoshReleaseVersion}  * {Host:Environment:Environment}  * {Host:Environment:Link}  * {Host:Environment:Organization}  * {Host:Environment:Owner}  * {Host:Environment:Support}  * {Host:IpAddress}  * {Host:LogicalCpuCores}  * {Host:OneAgentCustomHostName}  * {Host:OperatingSystemVersion}  * {Host:PaasMemoryLimit}  * {HostGroup:Name}  * {KubernetesCluster:Name}  * {KubernetesNode:DetectedName}  * {OpenstackAvailabilityZone:Name}  * {OpenstackZone:Name}  * {OpenstackComputeNode:Name}  * {OpenstackProject:Name}  * {OpenstackVm:InstanceType}  * {OpenstackVm:Name}  * {OpenstackVm:SecurityGroup}  * {ProcessGroup:AmazonECRImageAccountId}  * {ProcessGroup:AmazonECRImageRegion}  * {ProcessGroup:AmazonECSCluster}  * {ProcessGroup:AmazonECSContainerName}  * {ProcessGroup:AmazonECSFamily}  * {ProcessGroup:AmazonECSRevision}  * {ProcessGroup:AmazonLambdaFunctionName}  * {ProcessGroup:AmazonRegion}  * {ProcessGroup:ApacheConfigPath}  * {ProcessGroup:ApacheSparkMasterIpAddress}  * {ProcessGroup:AspDotNetCoreApplicationPath}  * {ProcessGroup:AspDotNetCoreApplicationPath}  * {ProcessGroup:AzureHostName}  * {ProcessGroup:AzureSiteName}  * {ProcessGroup:CassandraClusterName}  * {ProcessGroup:CatalinaBase}  * {ProcessGroup:CatalinaHome}  * {ProcessGroup:CloudFoundryAppId}  * {ProcessGroup:CloudFoundryAppName}  * {ProcessGroup:CloudFoundryInstanceIndex}  * {ProcessGroup:CloudFoundrySpaceId}  * {ProcessGroup:CloudFoundrySpaceName}  * {ProcessGroup:ColdFusionJvmConfigFile}  * {ProcessGroup:ColdFusionServiceName}  * {ProcessGroup:CommandLineArgs}  * {ProcessGroup:DetectedName}  * {ProcessGroup:DotNetCommandPath}  * {ProcessGroup:DotNetCommand}  * {ProcessGroup:DotNetClusterId}  * {ProcessGroup:DotNetNodeId}  * {ProcessGroup:ElasticsearchClusterName}  * {ProcessGroup:ElasticsearchNodeName}  * {ProcessGroup:EquinoxConfigPath}  * {ProcessGroup:ExeName}  * {ProcessGroup:ExePath}  * {ProcessGroup:GlassFishDomainName}  * {ProcessGroup:GlassFishInstanceName}  * {ProcessGroup:GoogleAppEngineInstance}  * {ProcessGroup:GoogleAppEngineService}  * {ProcessGroup:GoogleCloudProject}  * {ProcessGroup:HybrisBinDirectory}  * {ProcessGroup:HybrisConfigDirectory}  * {ProcessGroup:HybrisConfigDirectory}  * {ProcessGroup:HybrisDataDirectory}  * {ProcessGroup:IBMCicsRegion}  * {ProcessGroup:IBMCtgName}  * {ProcessGroup:IBMImsConnectRegion}  * {ProcessGroup:IBMImsControlRegion}  * {ProcessGroup:IBMImsMessageProcessingRegion}  * {ProcessGroup:IBMImsSoapGwName}  * {ProcessGroup:IBMIntegrationNodeName}  * {ProcessGroup:IBMIntegrationServerName}  * {ProcessGroup:IISAppPool}  * {ProcessGroup:IISRoleName}  * {ProcessGroup:JbossHome}  * {ProcessGroup:JbossMode}  * {ProcessGroup:JbossServerName}  * {ProcessGroup:JavaJarFile}  * {ProcessGroup:JavaJarPath}  * {ProcessGroup:JavaMainCLass}  * {ProcessGroup:KubernetesBasePodName}  * {ProcessGroup:KubernetesContainerName}  * {ProcessGroup:KubernetesFullPodName}  * {ProcessGroup:KubernetesNamespace}  * {ProcessGroup:KubernetesPodUid}  * {ProcessGroup:MssqlInstanceName}  * {ProcessGroup:NodeJsAppBaseDirectory}  * {ProcessGroup:NodeJsAppName}  * {ProcessGroup:NodeJsScriptName}  * {ProcessGroup:OracleSid}  * {ProcessGroup:PHPScriptPath}  * {ProcessGroup:PHPWorkingDirectory}  * {ProcessGroup:Ports}  * {ProcessGroup:RubyAppRootPath}  * {ProcessGroup:RubyScriptPath}  * {ProcessGroup:SoftwareAGInstallRoot}  * {ProcessGroup:SoftwareAGProductPropertyName}  * {ProcessGroup:SpringBootAppName}  * {ProcessGroup:SpringBootProfileName}  * {ProcessGroup:SpringBootStartupClass}  * {ProcessGroup:TIBCOBusinessWorksAppNodeName}  * {ProcessGroup:TIBCOBusinessWorksAppSpaceName}  * {ProcessGroup:TIBCOBusinessWorksCeAppName}  * {ProcessGroup:TIBCOBusinessWorksCeVersion}  * {ProcessGroup:TIBCOBusinessWorksDomainName}  * {ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}  * {ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}  * {ProcessGroup:TIBCOBusinessWorksHome}  * {ProcessGroup:VarnishInstanceName}  * {ProcessGroup:WebLogicClusterName}  * {ProcessGroup:WebLogicDomainName}  * {ProcessGroup:WebLogicHome}  * {ProcessGroup:WebLogicName}  * {ProcessGroup:WebSphereCellName}  * {ProcessGroup:WebSphereClusterName}  * {ProcessGroup:WebSphereNodeName}  * {ProcessGroup:WebSphereServerName}  * {ProcessGroup:ActorSystem}  * {Service:STGServerName}  * {Service:DatabaseHostName}  * {Service:DatabaseName}  * {Service:DatabaseVendor}  * {Service:DetectedName}  * {Service:EndpointPath}  * {Service:EndpointPathGatewayUrl}  * {Service:IIBApplicationName}  * {Service:MessageListenerClassName}  * {Service:Port}  * {Service:PublicDomainName}  * {Service:RemoteEndpoint}  * {Service:RemoteName}  * {Service:WebApplicationId}  * {Service:WebContextRoot}  * {Service:WebServerName}  * {Service:WebServiceNamespace}  * {Service:WebServiceName}  * {VmwareDatacenter:Name}  * `{VmwareVm:Name}'
            host_tech: (Block List) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            hypervisor: (Block List) Comparison for HYPERVISOR_TYPE attributes (see below for nested schema)
            hypervisor_type_comparision: (Block List, Deprecated) hypervisor_type_comparision is deprecated. Use hypervisor instead (see below for nested schema)
            id: (String) The ID of this resource.
            indexed_name: (Block List) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_name_comparison: (Block List, Deprecated) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_string: (Block List) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_string_comparison: (Block List, Deprecated) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_tag: (Block List) Comparison for INDEXED_TAG attributes (see below for nested schema)
            indexed_tag_comparison: (Block List, Deprecated) Comparison for INDEXED_TAG attributes (see below for nested schema)
            integer: (Block List) Comparison for INTEGER attributes (see below for nested schema)
            integer_comparison: (Block List, Deprecated) Comparison for INTEGER attributes (see below for nested schema)
            ipaddress: (Block List) Comparison for IP_ADDRESS attributes (see below for nested schema)
            ipaddress_comparison: (Block List, Deprecated) Comparison for IP_ADDRESS attributes (see below for nested schema)
            key: (Block List) Fallback for not yet known type (see below for nested schema)
            mobile_platform: (Block List) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            mobile_platform_comparison: (Block List, Deprecated) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            name: (String) The name of the rule
            negate: (Boolean) Reverses the operator. For example it turns the begins with into does not begin with
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true
            os_arch: (Block List) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            os_type: (Block List) Comparison for OS_TYPE attributes (see below for nested schema)
            osarchitecture_comparison: (Block List, Deprecated) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            ostype_comparison: (Block List, Deprecated) Comparison for OS_TYPE attributes (see below for nested schema)
            paas_type: (Block List) Comparison for PAAS_TYPE attributes (see below for nested schema)
            paas_type_comparison: (Block List, Deprecated) Comparison for PAAS_TYPE attributes (see below for nested schema)
            process_metadata: (Block List) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            process_metadata_condition_key: (Block List, Deprecated) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            service_topology: (Block List) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_topology_comparison: (Block List, Deprecated) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_type: (Block List) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            service_type_comparison: (Block List, Deprecated) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            simple_host_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            simple_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            source: (String) The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
            string: (Block List) Comparison for STRING attributes (see below for nested schema)
            string_comparison: (Block List, Deprecated) Comparison for STRING attributes (see below for nested schema)
            string_condition_key: (Block List, Deprecated) The key for dynamic attributes of the STRING type (see below for nested schema)
            string_key: (Block List) The key for dynamic attributes of the STRING type (see below for nested schema)
            synthetic_engine: (Block List) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            synthetic_engine_type_comparison: (Block List, Deprecated) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            tag: (Block List) Comparison for TAG attributes (see below for nested schema)
            tag_comparison: (Block List, Deprecated) Comparison for TAG attributes (see below for nested schema)
            tech: (Block List) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_host_naming: downloads all existing host naming configuration
            type: (String, Deprecated) if specified, needs to be APPLICATION_TYPE
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to compare to
            verbatim_type: (String) Non-predefined technology, use for custom technologies
        importStatements: []
    dynatrace_host_process_group_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_host_process_group_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_host_process_group_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:host.process-groups.monitoring-state: )
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            monitoring_state: '(String) Possible Values: DEFAULT, MONITORING_OFF, MONITORING_ON'
            process_group: (String) Process group
            terraform-provider-dynatrace -export dynatrace_host_process_group_monitoring: downloads all existing host level process group monitoring configuration
        importStatements: []
    dynatrace_http_monitor Resource - terraform-provider-dynatrace:
        subCategory: HTTP Monitors
        description: The resource
        name: dynatrace_http_monitor Resource - terraform-provider-dynatrace
        title: dynatrace_http_monitor Resource - terraform-provider-dynatrace
        argumentDocs:
            accept_any_certificate: (Boolean) If set to false, then the monitor fails with invalid SSL certificates.
            affected_locations: (Number) The number of affected locations to trigger an alert
            anomaly_detection: (Block List) The anomaly detection configuration. (see below for nested schema)
            authentication: '(Block List, Max: 1) Authentication options for this request (see below for nested schema)'
            body: (String) The body of the HTTP request.
            client_certificate: (String, Sensitive) The client certificate, if applicable - eg. CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
            configuration: '(Block List, Max: 1) The setup of the monitor (see below for nested schema)'
            consecutive_runs: (Number) The number of consecutive fails to trigger an alert
            context: (String) The origin of the tag. Supported values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES.
            credentials: (String) The ID of the credentials within the Dynatrace Credentials Vault.
            description: (String) A short description of the event to appear in the web UI.
            enabled: (Boolean) The monitor is enabled (true) or disabled (false).
            event_index: (Number) Specify the event to which an ACTION threshold applies
            follow_redirects: (Boolean) If set to false, redirects are reported as successful requests with response code 3xx.
            frequency: (Number) The frequency of the monitor, in minutes.
            global_outage: (Boolean) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) When enabled (true), generate a problem and send an alert when the monitor is unavailable at all configured locations
            global_outage_policy: (Block List) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) Global outage handling configuration.
            header: '(Block Set, Min: 1) contains an HTTP header of the request (see below for nested schema)'
            headers: '(Block List, Max: 1) The setup of the monitor (see below for nested schema)'
            id: (String) The ID of this resource.
            kdc_ip: (String) The KDC IP. Valid and required only if the type of authentication is KERBEROS.
            key: (String) The key of the tag.
            loading_time_thresholds: (Block List) Thresholds for loading times (see below for nested schema)
            local_outage: (Boolean) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) When enabled (true), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location
            local_outage_policy: (Block List) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) Local outage handling configuration.
            locations: (Set of String) A list of locations from which the monitor is executed.
            manually_assigned_apps: (Set of String) A set of manually assigned applications.
            method: (String) The HTTP method of the request.
            name: (String) The name of the monitor.
            outage_handling: (Block List) Outage handling configuration (see below for nested schema)
            pass_if_found: (Boolean) The validation condition. true means validation succeeds if the specified content/element is found. false means validation fails if the specified content/element is found. Always specify false for certificateExpiryDateConstraint to fail the monitor if SSL certificate expiry is within the specified number of days
            post_processing: (String) Javascript code to execute after sending the request.
            pre_processing: (String) Javascript code to execute before sending the request.
            realm_name: (String) The Realm Name. Valid and required only if the type of authentication is KERBEROS.
            request: '(Block List, Min: 1) A HTTP request to be performed by the monitor. (see below for nested schema)'
            request_index: (Number) Specify the request to which an ACTION threshold applies
            request_timeout: (Number) Adapt request timeout option - the maximum time this request is allowed to consume. Keep in mind the maximum timeout of the complete monitor is 60 seconds
            retry_on_error: (Boolean) (Field has overlap with dynatrace_browser_monitor_outage and dynatrace_http_monitor_outage) Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored
            rule: '(Block List, Min: 1) A list of validation rules (see below for nested schema)'
            script: '(Block List, Max: 1) The HTTP Script (see below for nested schema)'
            sensitive_data: (Boolean) Option not to store and display request and response bodies and header values in execution details, true or false. If not set, false.
            source: (String) The source of the tag. Supported values are USER, RULE_BASED and AUTO.
            tag: (Block Set) Tag with source of a Dynatrace entity. (see below for nested schema)
            tags: (Block List) A set of tags assigned to the monitor.
            terraform-provider-dynatrace -export dynatrace_http_monitor: downloads all existing HTTP monitor configuration
            threshold: '(Block List, Min: 1) The list of performance threshold rules (see below for nested schema)'
            thresholds: (Block List) The list of performance threshold rules (see below for nested schema)
            type: '(String) The type of the threshold: TOTAL (total loading time) or ACTION (action loading time)'
            url: (String) The URL to check.
            user_agent: (String) The User agent of the request
            validation: '(Block List, Max: 1) Validation helps you verify that your HTTP monitor loads the expected content (see below for nested schema)'
            value: (String) The value of the header
            value_ms: (Number) Notify if monitor takes longer than X milliseconds to load
        importStatements: []
    dynatrace_http_monitor_cookies Resource - terraform-provider-dynatrace:
        subCategory: HTTP Monitors
        description: The resource
        name: dynatrace_http_monitor_cookies Resource - terraform-provider-dynatrace
        title: dynatrace_http_monitor_cookies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:synthetic.http.cookies: )
            cookie: '(Block Set, Min: 1) (see below for nested schema)'
            cookies: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            domain: (String) Enclose placeholder values in brackets, for example {email}
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            name: (String) Enclose placeholder values in brackets, for example {email}
            path: (String) Enclose placeholder values in brackets, for example {email}
            scope: (String) The scope of this setting (HTTP_CHECK)
            terraform-provider-dynatrace -export dynatrace_http_monitor_cookies: downloads all existing HTTP monitor cookie configuration
            value: (String) Enclose placeholder values in brackets, for example {email}
        importStatements: []
    dynatrace_http_monitor_outage Resource - terraform-provider-dynatrace:
        subCategory: HTTP Monitors
        description: The resource
        name: dynatrace_http_monitor_outage Resource - terraform-provider-dynatrace
        title: dynatrace_http_monitor_outage Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:synthetic.http.outage-handling: )
            global_consecutive_outage_count_threshold: (Number) (Field has overlap with dynatrace_http_monitor) Alert if all locations are unable to access my web application
            global_outages: (Boolean) (Field has overlap with dynatrace_http_monitor) Generate a problem and send an alert when the monitor is unavailable at all configured locations.
            id: (String) The ID of this resource.
            local_consecutive_outage_count_threshold: (Number) (Field has overlap with dynatrace_http_monitor) are unable to access my web application
            local_location_outage_count_threshold: (Number) (Field has overlap with dynatrace_http_monitor) Alert if at least
            local_outages: (Boolean) (Field has overlap with dynatrace_http_monitor) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.
            scope: (String) The scope of this setting (HTTP_CHECK). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_http_monitor_outage: downloads all existing HTTP monitor outage handling configuration
        importStatements: []
    dynatrace_http_monitor_performance Resource - terraform-provider-dynatrace:
        subCategory: HTTP Monitors
        description: The resource
        name: dynatrace_http_monitor_performance Resource - terraform-provider-dynatrace
        title: dynatrace_http_monitor_performance Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:synthetic.http.performance-thresholds: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            event: (String) Request
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (HTTP_CHECK)
            terraform-provider-dynatrace -export dynatrace_http_monitor_performance: downloads all existing HTTP monitor performance thresholds configuration
            threshold: '(Block Set, Min: 1) (see below for nested schema)'
            thresholds: '(Block List, Max: 1) Performance thresholds (see below for nested schema)'
        importStatements: []
    dynatrace_iam_group Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_iam_group Resource - terraform-provider-dynatrace
        title: dynatrace_iam_group Resource - terraform-provider-dynatrace
        argumentDocs:
            description: (String)
            federated_attribute_values: (Set of String)
            id: (String) The ID of this resource.
            name: (String)
            permission: '(Block Set, Min: 1) A Permission (see below for nested schema)'
            permissions: '(Block List, Max: 1) (see below for nested schema)'
            scope: (String) If type is account this attribute should hold the UUID of the account. If type is 'tenant this attribute should hold the ID of the environment (https://.live.dynatrace.com). If typeismanagement-zonethis attribute should hold a value like:. You need to use the attribute legacy_id when referring to a resource dynatrace_management_zone_v2 or a data source dynatrace_management_zone.
            type: (String) The type of this permission. Possible values are account, tenant, management-zone
        importStatements: []
    dynatrace_iam_permission Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_iam_permission Resource - terraform-provider-dynatrace
        title: dynatrace_iam_permission Resource - terraform-provider-dynatrace
        argumentDocs:
            account: (String) The UUID of the account this permission is valid for
            environment: (String) The environment this permission is valid (https://<environmentid>.live.dynatrace.com). Also required in when trying to specify a management zone permission.
            group: (String) The ID of the group this permission is valid for
            id: (String) The ID of this resource.
            management_zone: (String) The management zone this permission is valid for. You need to use the attribute legacy_id when referring to a resource dynatrace_management_zone_v2 or a data source dynatrace_management_zone. The attribute environment is required to get specified also in order to identify the management zone uniquely.
            name: '(String) Possible values: account-company-info, account-user-management, account-viewer, tenant-viewer, tenant-manage-settings, tenant-agent-install, tenant-logviewer, tenant-view-sensitive-request-data, tenant-configure-request-capture-data, tenant-replay-sessions-with-masking, tenant-replay-sessions-without-masking, tenant-manage-security-problems, tenant-manage-support-tickets'
        importStatements: []
    dynatrace_iam_policy Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_iam_policy Resource - terraform-provider-dynatrace
        title: dynatrace_iam_policy Resource - terraform-provider-dynatrace
        argumentDocs:
            account: '(String) The UUID of the account (urn:dtaccount:<account-uuid>) in case the policy should be applied to all environments of this account. The prefix urn:dtaccount: MUST be omitted here.'
            description: (String) An optional description text for the policy
            environment: (String) The ID of the environment (https://.live.dynatrace.com) if the policy should be applied to a specific environment
            id: (String) The ID of this resource.
            name: (String) The name of the policy
            statement_query: (String) The Statement Query of the policy
            tags: (Set of String) Tags for this policy
        importStatements: []
    dynatrace_iam_policy_bindings Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_iam_policy_bindings Resource - terraform-provider-dynatrace
        title: dynatrace_iam_policy_bindings Resource - terraform-provider-dynatrace
        argumentDocs:
            account: '(String) The UUID of the account (urn:dtaccount:<account-uuid>). The attribute policies must contain ONLY policies defined for that account. The prefix urn:dtaccount: MUST be omitted here.'
            environment: (String) The ID of the environment (https://.live.dynatrace.com). The attribute policies must contain ONLY policies defined for that environment.
            group: (String) The name of the policy
            id: (String) The ID of this resource.
            policies: (Set of String) A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes account or environment.
        importStatements: []
    dynatrace_iam_user Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_iam_user Resource - terraform-provider-dynatrace
        title: dynatrace_iam_user Resource - terraform-provider-dynatrace
        argumentDocs:
            email: (String)
            groups: (Set of String)
            id: (String) The ID of this resource.
            uid: (String)
        importStatements: []
    dynatrace_ibm_mq_filters Resource - terraform-provider-dynatrace:
        subCategory: Mainframe
        description: The resource
        name: dynatrace_ibm_mq_filters Resource - terraform-provider-dynatrace
        title: dynatrace_ibm_mq_filters Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:mainframe.mqfilters: )
            cics_mq_queue_id_excludes: '(Set of String) CICS: Excluded MQ queues'
            cics_mq_queue_id_includes: '(Set of String) CICS: Included MQ queues'
            id: (String) The ID of this resource.
            ims_cr_trn_id_excludes: (Set of String) When you add a transaction ID to the exclude list remaining transactions are still monitored.
            ims_cr_trn_id_includes: (Set of String) When you add a transaction ID to the include list, all the remaining transactions are ignored.
            ims_mq_queue_id_excludes: '(Set of String) IMS: Excluded MQ queues'
            ims_mq_queue_id_includes: '(Set of String) IMS: Included MQ queues'
            terraform-provider-dynatrace -export dynatrace_ibm_mq_filters: downloads all existing IBM MQ filter configuration
        importStatements: []
    dynatrace_ims_bridges Resource - terraform-provider-dynatrace:
        subCategory: Mainframe
        description: The resource
        name: dynatrace_ims_bridges Resource - terraform-provider-dynatrace
        title: dynatrace_ims_bridges Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:ibmmq.ims-bridges: )
            id: (String) The ID of this resource.
            name: (String) The name of the IMS bridge
            queue_manager: (Block List) Queue manager definition for IMS bridge (see below for nested schema)
            queue_manager_queue: (Set of String) Queue(s) that belong to the queue manager
            queue_managers: (Block List) Queue manager(s) that belong to the IMS bridge (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_ims_bridges: downloads all existing IBM MQ IMS bridge configuration
        importStatements: []
    dynatrace_ip_address_masking Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_ip_address_masking Resource - terraform-provider-dynatrace
        title: dynatrace_ip_address_masking Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:preferences.ipaddressmasking: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (MOBILE_APPLICATION, CUSTOM_APPLICATION, APPLICATION). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_ip_address_masking: downloads all existing IP address masking configuration
            type: '(String) Possible Values: all, public'
        importStatements: []
    dynatrace_issue_tracking Resource - terraform-provider-dynatrace:
        subCategory: Integrations
        description: The resource
        name: dynatrace_issue_tracking Resource - terraform-provider-dynatrace
        title: dynatrace_issue_tracking Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:issue-tracking.integration: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            issuelabel: (String) Set a label to identify these issues, for example, release_blocker or non-critical
            issuequery: '(String) You can use the following placeholders to automatically insert values from the Release monitoring page in your query: {NAME}, {VERSION}, {STAGE}, {PRODUCT}.'
            issuetheme: '(String) Possible Values: ERROR, INFO, RESOLVED'
            issuetrackersystem: '(String) Possible Values: GITHUB, GITLAB, JIRA, JIRA_CLOUD, JIRA_ON_PREMISE, SERVICENOW'
            password: (String) Password
            terraform-provider-dynatrace -export dynatrace_issue_tracking: downloads all existing issue-tracking integrations
            token: (String, Sensitive) Token
            url: (String) For Jira, use the base URL (for example, https://jira.yourcompany.com); for GitHub, use the repository URL (for example, https://github.com/org/repo); for GitLab, use the specific project API for a single project (for example, https://gitlab.com/api/v4/projects/:projectId), and the specific group API for a multiple projects (for example, https://gitlab.com/api/v4/groups/:groupId); for ServiceNow, use your company instance URL (for example, https://yourinstance.service-now.com/)
            username: (String) Username
        importStatements: []
    dynatrace_jira_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_jira_notification Resource - terraform-provider-dynatrace
        title: dynatrace_jira_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            api_token: (String, Sensitive) The API token for the Jira profile. Using password authentication was deprecated by Jira
            builtin:problem.notifications: )
            description: (String) The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
            id: (String) The ID of this resource.
            issue_type: (String) The type of the Jira issue to be created by this notification
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            name: (String) The name of the notification configuration
            profile: (String) The ID of the associated alerting profile
            project_key: (String) The project key of the Jira issue to be created by this notification
            summary: '(String) The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            terraform-provider-dynatrace -export dynatrace_jira_notification: downloads the existing problem notifications for Jira
            url: (String) The URL of the Jira API endpoint
            username: (String) The username of the Jira profile
        importStatements: []
    dynatrace_json_dashboard Resource - terraform-provider-dynatrace:
        subCategory: Dashboards
        description: The resource
        name: dynatrace_json_dashboard Resource - terraform-provider-dynatrace
        title: dynatrace_json_dashboard Resource - terraform-provider-dynatrace
        argumentDocs:
            contents: (String) Contains the JSON Code of the Dashboard
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_json_dashboard: downloads all existing dashboard configuration
        importStatements: []
    dynatrace_k8s_cluster_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_k8s_cluster_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_cluster_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.kubernetes.cluster: )
            configuration: '(Block List, Max: 1) Alert if (see below for nested schema)'
            cpu_requests_saturation: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            memory_requests_saturation: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            monitoring_issues: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            observation_period_in_minutes: (Number) within the last
            pods_saturation: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            readiness_issues: '(Block List, Min: 1, Max: 1) Alerts if cluster has not been ready for a given amount of time (see below for nested schema)'
            sample_period_in_minutes: (Number) of cluster CPU capacity for at least
            scope: (String) The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_k8s_cluster_anomalies: downloads all existing Kubernetes cluster anomaly configuration
            threshold: (Number) amount of requested CPU is above
        importStatements: []
    dynatrace_k8s_credentials Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_k8s_credentials Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_credentials Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
            active_gate_group: (String) Active Gate group to filter active gates for this credentials.
            auth_token: (String, Sensitive) The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as null.  If the field is omitted during an update, the old value remains unaffected.
            certificate_check_enabled: (Boolean) The check of SSL certificates is enabled (true) or disabled (false) for the Kubernetes cluster.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
            davis_events_integration_enabled: (Boolean) Inclusion of all Davis relevant events is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
            endpoint_url: (String) The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
            event_analysis_and_alerting_enabled: (Boolean) Event analysis and alerting is (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
            events_field_selectors: (Block List) Kubernetes event filters based on field-selectors. If set to null on creation, no events field selectors are subscribed. If set to null on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors. (see below for nested schema)
            events_integration_enabled: (Boolean) Monitoring of events is enabled (true) or disabled (false) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the false value is used.  If the field is omitted during an update, the old value remains unaffected.
            field_selector: (String) The field selector string (url decoding is applied) when storing it.
            hostname_verification: (Boolean) Verify hostname in certificate against Kubernetes API URL
            id: (String) The ID of this resource.
            label: '(String) The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: .+-_. Leading or trailing whitespace is not allowed.'
            prometheus_exporters: (Boolean) Prometheus exporters integration is enabled (true) or disabled (false) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
            terraform-provider-dynatrace -export dynatrace_k8s_credentials: downloads all existing Kubernetes credentials configuration
            unknowns: (String) Any attributes that aren't yet supported by this provider
            workload_integration_enabled: (Boolean) Workload and cloud application processing is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        importStatements: []
    dynatrace_k8s_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Cloud Platforms
        description: The resource
        name: dynatrace_k8s_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) Activate
            builtin:cloud.kubernetes.monitoring: )
            cloud_application_pipeline_enabled: (Boolean) Monitor Kubernetes namespaces, services, workloads, and pods
            event_pattern: '(Block List, Min: 1) (see below for nested schema)'
            event_patterns: '(Block List, Max: 1) Define Kubernetes event filters to ingest events into your environment. For more details, see the documentation. (see below for nested schema)'
            event_processing_active: (Boolean) All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.
            filter_events: (Boolean) Include only events specified by Events Field Selectors
            id: (String) The ID of this resource.
            include_all_fdi_events: (Boolean) For a list of included events, see the documentation.
            label: (String) Field selector name
            open_metrics_builtin_enabled: (Boolean) Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size, this may increase the CPU/memory resource consumption of your ActiveGate.
            open_metrics_pipeline_enabled: (Boolean) For annotation guidance, see the documentation.
            pattern: (String) The set of allowed characters for this field has been extended with ActiveGate version 1.259. For more details, see the documentation.
            pvc_monitoring_enabled: (Boolean) To enable dashboards and alerts, add the Kubernetes persistent volume claims extension to your environment.
            scope: (String) The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_k8s_monitoring: downloads all existing Kubernetes monitoring settings
        importStatements: []
    dynatrace_k8s_namespace_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_k8s_namespace_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_namespace_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.kubernetes.namespace: )
            configuration: '(Block List, Max: 1) Alert if (see below for nested schema)'
            cpu_limits_quota_saturation: '(Block List, Min: 1, Max: 1) Alerts if almost no CPU-limit quota left in namespace (see below for nested schema)'
            cpu_requests_quota_saturation: '(Block List, Min: 1, Max: 1) Alerts if almost no CPU-request quota left in namespace (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            memory_limits_quota_saturation: '(Block List, Min: 1, Max: 1) Alerts if almost no memory-limit quota left in namespace (see below for nested schema)'
            memory_requests_quota_saturation: '(Block List, Min: 1, Max: 1) Alerts if almost no memory-request quota left in namespace (see below for nested schema)'
            observation_period_in_minutes: (Number) within the last
            pods_quota_saturation: '(Block List, Min: 1, Max: 1) Alerts if almost no pod quota left in namespace (see below for nested schema)'
            sample_period_in_minutes: (Number) of quota for at least
            scope: (String) The scope of this setting (CLOUD_APPLICATION_NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_k8s_namespace_anomalies: downloads all existing Kubernetes namespace anomaly configuration
            threshold: (Number) amount of utilized namespace CPU is above
        importStatements: []
    dynatrace_k8s_node_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_k8s_node_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_node_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.kubernetes.node: )
            configuration: '(Block List, Max: 1) Alert if (see below for nested schema)'
            cpu_requests_saturation: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            memory_requests_saturation: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            node_problematic_condition: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            observation_period_in_minutes: (Number) within the last
            pods_saturation: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            readiness_issues: '(Block List, Min: 1, Max: 1) Alerts if node has not been available for a given amount of time (see below for nested schema)'
            sample_period_in_minutes: (Number) of node CPU capacity for at least
            scope: (String) The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_k8s_node_anomalies: downloads all existing Kubernetes node anomaly configuration
            threshold: (Number) amount of requested CPU is higher than
        importStatements: []
    dynatrace_k8s_pvc_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_k8s_pvc_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_pvc_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.kubernetes.pvc: )
            configuration: '(Block List, Max: 1) Alert if (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            low_disk_space_critical: '(Block List, Min: 1, Max: 1) Alerts on low disk space in megabytes for a persistent volume claim. (see below for nested schema)'
            low_disk_space_critical_percentage: '(Block List, Min: 1, Max: 1) Alerts on low disk space in % for a persistent volume claim. (see below for nested schema)'
            observation_period_in_minutes: (Number) within the last
            sample_period_in_minutes: (Number) for at least
            scope: (String) The scope of this setting (CLOUD_APPLICATION_NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_k8s_pvc_anomalies: downloads all existing Kubernetes persistent volume claim anomaly configuration
            threshold: (Number) the available disk space is below
        importStatements: []
    dynatrace_k8s_workload_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_k8s_workload_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_k8s_workload_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.kubernetes.workload: )
            configuration: '(Block List, Max: 1) Alert if (see below for nested schema)'
            container_restarts: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            deployment_stuck: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            high_cpu_throttling: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            high_cpu_usage: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            high_memory_usage: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            id: (String) The ID of this resource.
            job_failure_events: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            not_all_pods_ready: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            observation_period_in_minutes: (Number) within the last
            oom_kills: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            pending_pods: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            pod_backoff_events: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            pod_eviction_events: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            pod_preemption_events: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            pod_stuck_in_terminating: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            sample_period_in_minutes: (Number) per minute, for any
            scope: (String) The scope of this setting (CLOUD_APPLICATION_NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_k8s_workload_anomalies: downloads all existing Kubernetes workload anomaly configuration
            threshold: (Number) there is at least
            workload_without_ready_pods: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
        importStatements: []
    dynatrace_key_requests Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_key_requests Resource - terraform-provider-dynatrace
        title: dynatrace_key_requests Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:settings.subscriptions.service: )
            id: (String) The ID of this resource.
            names: (Set of String) The names of the key requests
            service: (String) ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH
            terraform-provider-dynatrace -export dynatrace_key_requests: downloads all existing key request configuration
        importStatements: []
    dynatrace_kubernetes Resource - terraform-provider-dynatrace:
        subCategory: Cloud Platforms
        description: The resource
        name: dynatrace_kubernetes Resource - terraform-provider-dynatrace
        title: dynatrace_kubernetes Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) Activate
            active_gate_group: (String) ActiveGate Group
            auth_token: (String, Sensitive) Create a bearer token for Kubernetes or OpenShift.
            builtin:cloud.kubernetes: )
            certificate_check_enabled: (Boolean) Require valid certificates for communication with API server (recommended)
            cloud_application_pipeline_enabled: (Boolean, Deprecated) Monitor Kubernetes namespaces, services, workloads, and pods
            cluster_id: (String) Unique ID of the cluster, the containerized ActiveGate is deployed to. Defaults to the UUID of the kube-system namespace. The cluster ID of containerized ActiveGates is shown on the Deployment status screen.
            cluster_id_enabled: (Boolean) For more information on local Kubernetes API monitoring, see the documentation.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            endpoint_url: (String) Get the API URL for Kubernetes or OpenShift.
            event_pattern: '(Block List, Min: 1) (see below for nested schema)'
            event_patterns: '(Block List, Max: 1, Deprecated) Define Kubernetes event filters to ingest events into your environment. For more details, see the documentation. (see below for nested schema)'
            event_processing_active: (Boolean, Deprecated) All events are monitored by default unless event filters are specified.
            filter_events: (Boolean, Deprecated) Include only events specified by Events Field Selectors
            hostname_verification_enabled: (Boolean) Verify hostname in certificate against Kubernetes API URL
            id: (String) The ID of this resource.
            include_all_fdi_events: (Boolean, Deprecated) For a list of included events, see the documentation.
            label: (String) Renaming the cluster breaks configurations that are based on its name (e.g., management zones, and alerting).
            open_metrics_builtin_enabled: (Boolean, Deprecated) The workload resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size, this may increase the CPU/memory resource consumption of your ActiveGate.
            open_metrics_pipeline_enabled: (Boolean, Deprecated) For annotation guidance, see the documentation.
            pattern: (String) The set of allowed characters for this field has been extended with ActiveGate version 1.259. For more details, see the documentation.
            pvc_monitoring_enabled: (Boolean, Deprecated) To enable dashboards and alerts, add the Kubernetes persistent volume claims extension to your environment.
            scope: (String) The scope of this setting (KUBERNETES_CLUSTER)
            terraform-provider-dynatrace -export dynatrace_kubernetes: downloads all existing Kubernetes connection settings
        importStatements: []
    dynatrace_limit_outbound_connections Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_limit_outbound_connections Resource - terraform-provider-dynatrace
        title: dynatrace_limit_outbound_connections Resource - terraform-provider-dynatrace
        argumentDocs:
            allowed_outbound_connections: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            builtin:dt-javascript-runtime.allowed-outbound-connections: )
            enforced: (Boolean) If enabled, the Dynatrace JavaScript runtime will only be able to connect to the specified hosts.
            host_list: (Set of String) The Dynatrace JavaScript runtime will only be to connect to these hosts.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_limit_outbound_connections: downloads existing configuration for limiting outbound connections running in the Dynatrace JavaScript runtime
        importStatements: []
    dynatrace_log_buckets Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_buckets Resource - terraform-provider-dynatrace
        title: dynatrace_log_buckets Resource - terraform-provider-dynatrace
        argumentDocs:
            bucket_name: (String) A 'bucket' is the length of time your logs will be stored. Select the bucket that's best for you.
            builtin:logmonitoring.log-buckets-rules: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            matcher: (String) Matcher (DQL)
            rule_name: (String) Rule name
            terraform-provider-dynatrace -export dynatrace_log_buckets: downloads all existing log bucket configuration
        importStatements: []
    dynatrace_log_custom_attribute Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_custom_attribute Resource - terraform-provider-dynatrace
        title: dynatrace_log_custom_attribute Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:logmonitoring.log-custom-attributes: )
            id: (String) The ID of this resource.
            key: (String) The attribute key is case insensitive in log data ingestion.
            sidebar: (Boolean) Show attribute values in side bar
            terraform-provider-dynatrace -export dynatrace_log_custom_attribute: downloads all existing custom log attributes
        importStatements: []
    dynatrace_log_custom_source Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_custom_source Resource - terraform-provider-dynatrace
        title: dynatrace_log_custom_source Resource - terraform-provider-dynatrace
        argumentDocs:
            accept_binary: (Boolean) Accept binary content
            attribute: '(String) Possible Values: Dt_entity_process_group'
            builtin:logmonitoring.custom-log-source-settings: )
            context: '(Block List, Max: 1) Define Custom Log Source only within context if provided (see below for nested schema)'
            custom_log_source: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            name: (String) Name
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_log_custom_source: downloads all existing custom log source configuration
            type: '(String) Possible Values: LOG_PATH_PATTERN, WINDOWS_EVENT_LOG'
            values: (Set of String) It might be either an absolute path to log(s) with optional wildcards or Windows Event Log name.
        importStatements: []
    dynatrace_log_events Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_events Resource - terraform-provider-dynatrace
        title: dynatrace_log_events Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:logmonitoring.log-events: )
            davis_merge: (Boolean) Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
            description: (String) The description of the event to trigger.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            event_template: '(Block List, Min: 1, Max: 1) Event template (see below for nested schema)'
            event_type: '(String) Possible Values: AVAILABILITY, CUSTOM_ALERT, CUSTOM_ANNOTATION, CUSTOM_CONFIGURATION, CUSTOM_DEPLOYMENT, ERROR, INFO, MARKED_FOR_TERMINATION, RESOURCE, SLOWDOWN'
            id: (String) The ID of this resource.
            item: '(Block Set, Min: 1) (see below for nested schema)'
            metadata: '(Block List, Max: 1) Set of additional key-value properties to be attached to the triggered event. (see below for nested schema)'
            metadata_key: (String) Type 'dt.' for key hints.
            metadata_value: (String) no documentation available
            query: (String) Log query
            summary: (String) The textual summary of the log event entry
            terraform-provider-dynatrace -export dynatrace_log_events: downloads all existing log events configuration
            title: (String) The title of the event to trigger.
        importStatements: []
    dynatrace_log_grail Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_log_grail Resource - terraform-provider-dynatrace
        title: dynatrace_log_grail Resource - terraform-provider-dynatrace
        argumentDocs:
            activated: (Boolean) Activate logs powered by Grail.
            builtin:logmonitoring.logs-on-grail-activate: )
            id: (String) The ID of this resource.
            parallel_ingest_period: '(String) Possible Values: NONE, SEVEN_DAYS, THIRTY_FIVE_DAYS'
            terraform-provider-dynatrace -export dynatrace_log_grail: downloads log powered by Grail configuration
        importStatements: []
    dynatrace_log_metrics Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_metrics Resource - terraform-provider-dynatrace
        title: dynatrace_log_metrics Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:logmonitoring.schemaless-log-metric: )
            dimensions: (Set of String) no documentation available
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            key: (String) Metric key
            measure: '(String) Possible Values: OCCURRENCE, ATTRIBUTE'
            measure_attribute: (String) Attribute
            query: (String) Matcher
            terraform-provider-dynatrace -export dynatrace_log_metrics: downloads all existing log metric configuration
        importStatements: []
    dynatrace_log_oneagent Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_oneagent Resource - terraform-provider-dynatrace
        title: dynatrace_log_oneagent Resource - terraform-provider-dynatrace
        argumentDocs:
            '"builtin:logmonitoring.log-agent-configuration': )
            container_timezone_heuristic_enabled: (Boolean) Detect container time zones
            containers_logs_detection_enabled: (Boolean) Detect logs inside containers
            date_search_limit_bytes: (Number) Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
            default_timezone: (String) Default timezone for agent if more specific configurations is not defined.
            event_log_query_timeout_sec: (Number) Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs
            id: (String) The ID of this resource.
            iisdetection_enabled: (Boolean) Detect IIS logs
            log_scanner_linux_nfs_enabled: (Boolean) Detect logs on Network File Systems (NFS)
            max_lgis_per_entity_count: (Number) Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn't be added.
            min_binary_detection_limit_bytes: (Number) Defines the minimum number of bytes in log file required for binary detection.
            monitor_own_logs_enabled: (Boolean) Enabling this option may affect your licensing costs. For more details, see documentation.
            open_log_files_detection_enabled: (Boolean) Detect open log files
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            severity_detection_limit_bytes: (Number) Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.
            severity_detection_lines_limit: (Number) Defines the number of the first lines of every log entry where severity is searched.
            system_logs_detection_enabled: '(Boolean) (Linux: syslog, message log) (Windows: system, application, security event logs)'
            terraform-provider-dynatrace -export dynatrace_log_oneagent: downloads all existing OneAgent settings for Log Monitoring
            utcas_default_container_timezone: (Boolean) Deprecated for OneAgent 1.247+
        importStatements: []
    dynatrace_log_processing Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_processing Resource - terraform-provider-dynatrace
        title: dynatrace_log_processing Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:logmonitoring.log-dpp-rules: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            processor_definition: |-
                (Block List, Min: 1, Max: 1) ## Processor definition
                Add a rule definition using our syntax. In our documentation you will find instructions and application examples. (see below for nested schema)
            query: (String) Matcher
            rule: (String) Processor definition
            rule_name: (String) Rule name
            rule_testing: '(Block List, Min: 1, Max: 1) ## Rule testing'
            sample_log: (String) Sample log in JSON format.
            terraform-provider-dynatrace -export dynatrace_log_processing: downloads all existing log processing configuration
        importStatements: []
    dynatrace_log_security_context Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_security_context Resource - terraform-provider-dynatrace
        title: dynatrace_log_security_context Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:logmonitoring.log-security-context-rules: )
            id: (String) The ID of this resource.
            query: (String) Matcher
            rule_name: (String) Rule name
            security_context_rule: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_log_security_context: downloads all existing log security context configuration
            value: (String) Literal value to be set
            value_source: '(String) Possible Values: FIELD, LITERAL'
            value_source_field: (String) Name of field used to copy value
        importStatements: []
    dynatrace_log_sensitive_data_masking Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_sensitive_data_masking Resource - terraform-provider-dynatrace
        title: dynatrace_log_sensitive_data_masking Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute: '(String) Possible Values: Container_name, Dt_entity_container_group, Dt_entity_process_group, K8s_container_name, K8s_deployment_name, K8s_namespace_name, Log_source, Process_technology'
            builtin:logmonitoring.sensitive-data-masking-settings: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            expression: (String) Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
            id: (String) The ID of this resource.
            masking: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            matcher: '(Block Set, Min: 1) (see below for nested schema)'
            matchers: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            name: (String) Name
            operator: '(String) Possible Values: MATCHES'
            replacement: (String) The string to replace the masked expression with. Irrelevant if type is SHA1.
            scope: (String) The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_log_sensitive_data_masking: downloads all existing custom log attributes
            type: '(String) Possible Values: SHA1, STRING'
            values: (Set of String) no documentation available
        importStatements: []
    dynatrace_log_storage Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_storage Resource - terraform-provider-dynatrace
        title: dynatrace_log_storage Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute: '(String) Possible Values: Container_name, Dt_entity_container_group, Dt_entity_process_group, K8s_container_name, K8s_deployment_name, K8s_namespace_name, Log_content, Log_source, Process_technology'
            builtin:logmonitoring.log-storage-settings: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            matcher: '(Block Set, Min: 1) (see below for nested schema)'
            matchers: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            name: (String) Name
            operator: '(String) Possible Values: MATCHES'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            send_to_storage: (Boolean) If true matching logs will be included in storage. If false matching logs will be excluded from storage.
            terraform-provider-dynatrace -export dynatrace_log_storage: downloads all existing log storage setting configuration
            values: (Set of String) no documentation available
        importStatements: []
    dynatrace_log_timestamp Resource - terraform-provider-dynatrace:
        subCategory: Log Monitoring
        description: The resource
        name: dynatrace_log_timestamp Resource - terraform-provider-dynatrace
        title: dynatrace_log_timestamp Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute: '(String) Possible Values: Container_name, Dt_entity_container_group, Dt_entity_process_group, K8s_container_name, K8s_deployment_name, K8s_namespace_name, Log_source, Process_technology'
            builtin:logmonitoring.timestamp-configuration: )
            config_item_title: (String) Name
            date_search_limit: (Number) (v1.275) Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
            date_time_pattern: (String) Date-time pattern
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            matcher: '(Block Set, Min: 1) (see below for nested schema)'
            matchers: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            operator: '(String) Possible Values: MATCHES'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_log_timestamp: downloads all existing log timestamp configuration
            timezone: (String) Timezone
            values: (Set of String) no documentation available
        importStatements: []
    dynatrace_mainframe_transaction_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Mainframe
        description: The resource
        name: dynatrace_mainframe_transaction_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_mainframe_transaction_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:mainframe.txmonitoring: )
            group_cics_regions: (Boolean) If enabled, CICS regions belonging to the same CICSPlex will be grouped into a single process group. If disabled, a process group will be created for each CICS region.
            group_ims_regions: (Boolean) If enabled, IMS regions belonging to the same subsystem will be grouped into a single process group. If disabled, a process group will be created for each IMS region.
            id: (String) The ID of this resource.
            monitor_all_ctg_protocols: (Boolean) If enabled, the CICS Transaction Gateway sensor will trace all EXCI requests including those that are using the TCP/IP or SNA protocol.
            monitor_all_incoming_web_requests: (Boolean) Dynatrace automatically traces incoming web requests when they are called by already-monitored services. Enable this setting to monitor all incoming web requests. We recommend enabling it only over a short period of time.
            node_limit: (Number) We recommend the default limit of 500 nodes. The value 0 means unlimited number of nodes.
            terraform-provider-dynatrace -export dynatrace_mainframe_transaction_monitoring: downloads all additional monitoring settings for CICS and IMS transactions
            zos_cics_service_detection_uses_transaction_id: (Boolean) If enabled, a CICS service will be created for each monitored transaction ID within a process group. If disabled, a CICS service will be created for each monitored CICS region within a process group. We recommend enabling it only when the CICS regions are grouped by their CICSPlex.
            zos_ims_service_detection_uses_transaction_id: (Boolean) If enabled, an IMS service will be created for each monitored transaction ID within a process group. If disabled, an IMS service will be created for each monitored IMS region within a process group. We recommend enabling it only when the IMS regions are grouped by their subsystem.
        importStatements: []
    dynatrace_maintenance Resource - terraform-provider-dynatrace:
        subCategory: Alerting
        description: The resource
        name: dynatrace_maintenance Resource - terraform-provider-dynatrace
        title: dynatrace_maintenance Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:alerting.maintenance-window: )
            daily_recurrence: '(Block List, Max: 1) The configuration for maintenance windows occuring daily (see below for nested schema)'
            day_of_month: (Number) The day of the month for monthly maintenance. If the selected day does not fall within the month, the maintenance window will be active on the last day of the month.
            day_of_week: '(String) The day of the week for weekly maintenance, possible values: FRIDAY, MONDAY, SATURDAY, SUNDAY, THURSDAY, TUESDAY, WEDNESDAY'
            description: (String) A short description of the maintenance purpose.
            disable_synthetic: (Boolean) Disables the execution of the synthetic monitors that are within the scope of this maintenance window.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            end_date: (String) The end date of the recurrence range in YYYY-MM-DD format
            end_time: (String) The end time of the maintenance window validity period in hh:mm:ss format
            entity_id: '(String) A specific entity that should match this maintenance window.. Note: If an entity type filter value is set, it must be equal to the type of the selected entity. Otherwise this maintenance window will not match.'
            entity_tags: (Set of String) Entities which contain all of the configured tags will match this maintenance window.
            entity_type: (String) Type of entities this maintenance window should match.. If no entity type is selected all entities regardless of the type will match.
            filter: '(Block Set, Min: 1) (see below for nested schema)'
            filters: |-
                (Block List, Max: 1) ## Filters
                Add filters to limit the scope of maintenance to only select matching entities. If no filter is defined, the maintenance window is valid for the whole environment. Each filter is evaluated separately (OR). (see below for nested schema)
            general_properties: '(Block List, Min: 1, Max: 1) The general properties of the maintenance window (see below for nested schema)'
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of this setting when referred to by the Config REST API V1
            management_zones: (Set of String) Entities which are part of all the configured management zones will match this maintenance window.
            monthly_recurrence: '(Block List, Max: 1) The configuration for maintenance windows occuring monthly (see below for nested schema)'
            name: (String) The name of the maintenance window, displayed in the UI
            once_recurrence: '(Block List, Max: 1) The configuration for maintenance windows occuring once (see below for nested schema)'
            recurrence_range: '(Block List, Min: 1, Max: 1) The recurrence date range of the maintenance window (see below for nested schema)'
            schedule: '(Block List, Min: 1, Max: 1) The schedule of the maintenance window (see below for nested schema)'
            start_date: (String) The start date of the recurrence range in YYYY-MM-DD format
            start_time: (String) The start time of the maintenance window validity period in hh:mm:ss format
            suppression: '(String) The type of suppression of alerting and problem detection during the maintenance. Possible Values: DETECT_PROBLEMS_AND_ALERT, DETECT_PROBLEMS_DONT_ALERT, DONT_DETECT_PROBLEMS'
            terraform-provider-dynatrace -export dynatrace_maintenance: downloads all existing maintenance window configuration
            time_window: '(Block List, Min: 1, Max: 1) The time window of the maintenance window (see below for nested schema)'
            time_zone: (String) The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset UTC+01:00 format or the IANA Time Zone Database format (for example, Europe/Vienna)
            type: '(String) The type of the maintenance, possible values: PLANNED or UNPLANNED'
            weekly_recurrence: '(Block List, Max: 1) The configuration for maintenance windows occuring weekly (see below for nested schema)'
        importStatements: []
    dynatrace_maintenance_window Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_maintenance_window Resource - terraform-provider-dynatrace
        title: dynatrace_maintenance_window Resource - terraform-provider-dynatrace
        argumentDocs:
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
            day_of_month: (Number) The day of the month for monthly maintenance.  The value of 31 is treated as the last day of the month for months that don't have a 31st day. The value of 30 is also treated as the last day of the month for February
            day_of_week: (String) The day of the week for weekly maintenance.  The format is the full name of the day in upper case, for example THURSDAY
            description: (String) A short description of the maintenance purpose
            duration_minutes: (Number) The duration of the maintenance window in minutes
            enabled: (Boolean) The Maintenance Window is enabled or disabled
            end: (String) The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format
            entities: (Set of String) A list of Dynatrace entities (for example, hosts or services) to be included in the scope.  Allowed values are Dynatrace entity IDs
            id: (String) The ID of this resource.
            key: (String) The key of the tag. Custom tags have the tag value here
            matches: (Block List) A list of matching rules for dynamic scope formation.  If several rules are set, the OR logic applies (see below for nested schema)
            mz_id: (String) The ID of a management zone to which the matched entities must belong
            name: (String) The name of the maintenance window, displayed in the UI
            recurrence: '(Block List, Max: 1) The recurrence of the maintenance window (see below for nested schema)'
            recurrence_type: (String) The type of the schedule recurrence. Possible values are DAILY, MONTHLY, ONCE and WEEKLY
            schedule: '(Block List, Max: 1) The schedule of the maintenance window (see below for nested schema)'
            scope: '(Block List, Max: 1) the tiles this Dashboard consist of (see below for nested schema)'
            start: (String) The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format
            start_time: (String) The start time of the maintenance window in HH:mm format
            suppress_synth_mon_exec: (Boolean) Suppress execution of synthetic monitors during the maintenance
            suppression: (String) The type of suppression of alerting and problem detection during the maintenance
            tag_combination: '(String) The logic that applies when several tags are specified: AND/OR.  If not set, the OR logic is used'
            tags: (Block Set) The tag you want to use for matching.  You can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables (see below for nested schema)
            type: '(String) The type of the maintenance: planned or unplanned'
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value of the tag. Not applicable to custom tags
            zone_id: (String) The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset UTC+01:00 format or the IANA Time Zone Database format (for example, Europe/Vienna)
        importStatements: []
    dynatrace_management_zone Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_management_zone Resource - terraform-provider-dynatrace
        title: dynatrace_management_zone Resource - terraform-provider-dynatrace
        argumentDocs:
            AZURE_TO_PG: ': Apply to process groups connected to matching Azure entities'
            AZURE_TO_SERVICE: ': Apply to services provided by matching Azure entities'
            CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE: ': Apply to custom devices in matching custom device groups'
            HOST_TO_PROCESS_GROUP_INSTANCE: ': Apply to processes running on matching hosts'
            PROCESS_GROUP_TO_HOST: ': Apply to underlying hosts of matching process groups'
            PROCESS_GROUP_TO_SERVICE: ': Apply to all services provided by matching process groups'
            SERVICE_TO_HOST_LIKE: ': Apply to underlying hosts of matching services'
            SERVICE_TO_PROCESS_GROUP_LIKE: ': Apply to underlying process groups of matching services'
            application_type: (Block List) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            application_type_comparison: (Block List, Deprecated) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            applies_to: (String) The target of the rule. Possible values are
            attribute: (String) The attribute to be used for comparision
            azure_compute_mode: (Block List, Deprecated) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_compute_mode_comparison: (Block List) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_sku: (Block List) Comparison for AZURE_SKU attributes (see below for nested schema)
            azure_sku_comparision: (Block List, Deprecated) Comparison for AZURE_SKU attributes (see below for nested schema)
            base_comparison_basic: (Block List, Deprecated) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            base_condition_key: (Block List, Deprecated) Fallback for not yet known type (see below for nested schema)
            bitness: (Block List) Comparison for BITNESS attributes (see below for nested schema)
            bitness_comparision: (Block List, Deprecated) Comparison for BITNESS attributes (see below for nested schema)
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or insensitive (false)
            cloud_type: (Block List) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            cloud_type_comparison: (Block List, Deprecated) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            comparison: (Block List) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            condition: (Block List) A list of conditions for the management zone. The management zone applies only if all conditions are fulfilled (see below for nested schema)
            conditions: (Block List) A list of matching rules for the management zone. The management zone applies only if all conditions are fulfilled (see below for nested schema)
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the CONTEXTLESS value
            custom_application_type: (Block List) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_application_type_comparison: (Block List, Deprecated) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_host_metadata: (Block List) Key for Custom Host Metadata (see below for nested schema)
            custom_host_metadata_condition_key: (Block List, Deprecated) Key for Custom Host Metadata (see below for nested schema)
            custom_process_metadata: (Block List) Key for Custom Process Metadata (see below for nested schema)
            custom_process_metadata_condition_key: (Block List, Deprecated) Key for Custom Process Metadata (see below for nested schema)
            database_topology: (Block List) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            database_topology_comparison: (Block List, Deprecated) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            dcrum_decoder: (Block List) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dcrum_decoder_comparison: (Block List, Deprecated) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            description: (String) The description of the management zone
            dimensional_rule: (Block Set) A list of dimensional data rules for management zone usage. If several rules are specified, the or logic applies (see below for nested schema)
            dynamic_key: '(Block List, Min: 1, Max: 1) The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key (see below for nested schema)'
            enabled: (Boolean) The rule is enabled (true) or disabled (false)
            entity: (Block List) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_id_comparison: (Block List, Deprecated) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_selector_based_rule: (Block Set) A list of entity-selector based rules for management zone usage. If several rules are specified, the or logic applies (see below for nested schema)
            host_tech: (Block List) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            hypervisor: (Block List) Comparison for HYPERVISOR_TYPE attributes (see below for nested schema)
            hypervisor_type_comparision: (Block List, Deprecated) hypervisor_type_comparision is deprecated. Use hypervisor instead (see below for nested schema)
            id: (String) The ID of this resource.
            indexed_name: (Block List) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_name_comparison: (Block List, Deprecated) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_string: (Block List) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_string_comparison: (Block List, Deprecated) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_tag: (Block List) Comparison for INDEXED_TAG attributes (see below for nested schema)
            indexed_tag_comparison: (Block List, Deprecated) Comparison for INDEXED_TAG attributes (see below for nested schema)
            integer: (Block List) Comparison for INTEGER attributes (see below for nested schema)
            integer_comparison: (Block List, Deprecated) Comparison for INTEGER attributes (see below for nested schema)
            ipaddress: (Block List) Comparison for IP_ADDRESS attributes (see below for nested schema)
            ipaddress_comparison: (Block List, Deprecated) Comparison for IP_ADDRESS attributes (see below for nested schema)
            key: (String) The reference value for comparison. For conditions of the DIMENSION type, specify the key here
            match: (String) How to compare. Possible values are
            mobile_platform: (Block List) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            mobile_platform_comparison: (Block List, Deprecated) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            name: (String) The name of the management zone
            negate: (Boolean) Reverses the operator. For example it turns the begins with into does not begin with
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true
            os_arch: (Block List) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            os_type: (Block List) Comparison for OS_TYPE attributes (see below for nested schema)
            osarchitecture_comparison: (Block List, Deprecated) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            ostype_comparison: (Block List, Deprecated) Comparison for OS_TYPE attributes (see below for nested schema)
            paas_type: (Block List) Comparison for PAAS_TYPE attributes (see below for nested schema)
            paas_type_comparison: (Block List, Deprecated) Comparison for PAAS_TYPE attributes (see below for nested schema)
            process_metadata: (Block List) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            process_metadata_condition_key: (Block List, Deprecated) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            propagation_types: '(Set of String) How to apply the management zone to underlying entities:'
            rules: (Block Set) A list of rules for management zone usage.  Each rule is evaluated independently of all other rules (see below for nested schema)
            selector: (String) The entity selector string, by which the entities are selected
            service_topology: (Block List) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_topology_comparison: (Block List, Deprecated) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_type: (Block List) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            service_type_comparison: (Block List, Deprecated) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            simple_host_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            simple_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            source: (String) The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
            string: (Block List) Comparison for STRING attributes (see below for nested schema)
            string_comparison: (Block List, Deprecated) Comparison for STRING attributes (see below for nested schema)
            string_condition_key: (Block List, Deprecated) The key for dynamic attributes of the STRING type (see below for nested schema)
            string_key: (Block List) The key for dynamic attributes of the STRING type (see below for nested schema)
            synthetic_engine: (Block List) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            synthetic_engine_type_comparison: (Block List, Deprecated) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            tag: (Block List) Comparison for TAG attributes (see below for nested schema)
            tag_comparison: (Block List, Deprecated) Comparison for TAG attributes (see below for nested schema)
            tech: (Block List) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_management_zone: downloads all existing management zone configuration
            type: (String) The type of the condition. Possible values are
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value of the dimension. Only applicable when type is set to DIMENSION
            verbatim_type: (String) Non-predefined technology, use for custom technologies
        importStatements: []
    dynatrace_management_zone_v2 Resource - terraform-provider-dynatrace:
        subCategory: Management Zones
        description: The resource
        name: dynatrace_management_zone_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_management_zone_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            applies_to: '(String) Possible Values: ANY, LOG, METRIC'
            attribute_conditions: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            attribute_rule: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            azure_to_pgpropagation: (Boolean) Apply to process groups connected to matching Azure entities
            azure_to_service_propagation: (Boolean) Apply to services provided by matching Azure entities
            builtin:management-zones: )
            case_sensitive: (Boolean) Case sensitive
            condition: '(Block Set, Min: 1) Attribute conditions (see below for nested schema)'
            condition_type: '(String) Possible Values: DIMENSION, LOG_FILE_NAME, METRIC_KEY'
            custom_device_group_to_custom_device_propagation: (Boolean) Apply to custom devices in a custom device group
            description: (String) Description
            dimension_conditions: '(Block List, Max: 1) Conditions (see below for nested schema)'
            dimension_rule: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            dynamic_key: (String) Dynamic key
            dynamic_key_source: (String) Key source
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            entity_id: (String) Value
            entity_selector: (String) The documentation of the entity selector can be found here.
            entity_type: '(String) Possible Values: APPMON_SERVER, APPMON_SYSTEM_PROFILE, AWS_ACCOUNT, AWS_APPLICATION_LOAD_BALANCER, AWS_AUTO_SCALING_GROUP, AWS_CLASSIC_LOAD_BALANCER, AWS_NETWORK_LOAD_BALANCER, AWS_RELATIONAL_DATABASE_SERVICE, AZURE, BROWSER_MONITOR, CLOUD_APPLICATION, CLOUD_APPLICATION_NAMESPACE, CLOUD_FOUNDRY_FOUNDATION, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATA_CENTER_SERVICE, ENTERPRISE_APPLICATION, ESXI_HOST, EXTERNAL_MONITOR, HOST, HOST_GROUP, HTTP_MONITOR, KUBERNETES_CLUSTER, KUBERNETES_SERVICE, MOBILE_APPLICATION, OPENSTACK_ACCOUNT, PROCESS_GROUP, QUEUE, SERVICE, WEB_APPLICATION'
            enum_value: (String) Value
            host_to_pgpropagation: (Boolean) Apply to processes running on matching hosts
            id: (String) The ID of this resource.
            integer_value: (Number) Value
            key: '(String) Possible Values: APPMON_SERVER_NAME, APPMON_SYSTEM_PROFILE_NAME, AWS_ACCOUNT_ID, AWS_ACCOUNT_NAME, AWS_APPLICATION_LOAD_BALANCER_NAME, AWS_APPLICATION_LOAD_BALANCER_TAGS, AWS_AUTO_SCALING_GROUP_NAME, AWS_AUTO_SCALING_GROUP_TAGS, AWS_AVAILABILITY_ZONE_NAME, AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS, AWS_CLASSIC_LOAD_BALANCER_NAME, AWS_CLASSIC_LOAD_BALANCER_TAGS, AWS_NETWORK_LOAD_BALANCER_NAME, AWS_NETWORK_LOAD_BALANCER_TAGS, AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME, AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT, AWS_RELATIONAL_DATABASE_SERVICE_ENGINE, AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS, AWS_RELATIONAL_DATABASE_SERVICE_NAME, AWS_RELATIONAL_DATABASE_SERVICE_PORT, AWS_RELATIONAL_DATABASE_SERVICE_TAGS, AZURE_ENTITY_NAME, AZURE_ENTITY_TAGS, AZURE_MGMT_GROUP_NAME, AZURE_MGMT_GROUP_UUID, AZURE_REGION_NAME, AZURE_SCALE_SET_NAME, AZURE_SUBSCRIPTION_NAME, AZURE_SUBSCRIPTION_UUID, AZURE_TENANT_NAME, AZURE_TENANT_UUID, AZURE_VM_NAME, BROWSER_MONITOR_NAME, BROWSER_MONITOR_TAGS, CLOUD_APPLICATION_LABELS, CLOUD_APPLICATION_NAME, CLOUD_APPLICATION_NAMESPACE_LABELS, CLOUD_APPLICATION_NAMESPACE_NAME, CLOUD_FOUNDRY_FOUNDATION_NAME, CLOUD_FOUNDRY_ORG_NAME, CUSTOM_APPLICATION_NAME, CUSTOM_APPLICATION_PLATFORM, CUSTOM_APPLICATION_TAGS, CUSTOM_APPLICATION_TYPE, CUSTOM_DEVICE_DNS_ADDRESS, CUSTOM_DEVICE_GROUP_NAME, CUSTOM_DEVICE_GROUP_TAGS, CUSTOM_DEVICE_IP_ADDRESS, CUSTOM_DEVICE_METADATA, CUSTOM_DEVICE_NAME, CUSTOM_DEVICE_PORT, CUSTOM_DEVICE_TAGS, CUSTOM_DEVICE_TECHNOLOGY, DATA_CENTER_SERVICE_DECODER_TYPE, DATA_CENTER_SERVICE_IP_ADDRESS, DATA_CENTER_SERVICE_METADATA, DATA_CENTER_SERVICE_NAME, DATA_CENTER_SERVICE_PORT, DATA_CENTER_SERVICE_TAGS, DOCKER_CONTAINER_NAME, DOCKER_FULL_IMAGE_NAME, DOCKER_IMAGE_VERSION, EC2_INSTANCE_AMI_ID, EC2_INSTANCE_AWS_INSTANCE_TYPE, EC2_INSTANCE_AWS_SECURITY_GROUP, EC2_INSTANCE_BEANSTALK_ENV_NAME, EC2_INSTANCE_ID, EC2_INSTANCE_NAME, EC2_INSTANCE_PRIVATE_HOST_NAME, EC2_INSTANCE_PUBLIC_HOST_NAME, EC2_INSTANCE_TAGS, ENTERPRISE_APPLICATION_DECODER_TYPE, ENTERPRISE_APPLICATION_IP_ADDRESS, ENTERPRISE_APPLICATION_METADATA, ENTERPRISE_APPLICATION_NAME, ENTERPRISE_APPLICATION_PORT, ENTERPRISE_APPLICATION_TAGS, ESXI_HOST_CLUSTER_NAME, ESXI_HOST_HARDWARE_MODEL, ESXI_HOST_HARDWARE_VENDOR, ESXI_HOST_NAME, ESXI_HOST_PRODUCT_NAME, ESXI_HOST_PRODUCT_VERSION, ESXI_HOST_TAGS, EXTERNAL_MONITOR_ENGINE_DESCRIPTION, EXTERNAL_MONITOR_ENGINE_NAME, EXTERNAL_MONITOR_ENGINE_TYPE, EXTERNAL_MONITOR_NAME, EXTERNAL_MONITOR_TAGS, GEOLOCATION_SITE_NAME, GOOGLE_CLOUD_PLATFORM_ZONE_NAME, GOOGLE_COMPUTE_INSTANCE_ID, GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE, GOOGLE_COMPUTE_INSTANCE_NAME, GOOGLE_COMPUTE_INSTANCE_PROJECT, GOOGLE_COMPUTE_INSTANCE_PROJECT_ID, GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES, HOST_AIX_LOGICAL_CPU_COUNT, HOST_AIX_SIMULTANEOUS_THREADS, HOST_AIX_VIRTUAL_CPU_COUNT, HOST_ARCHITECTURE, HOST_AWS_NAME_TAG, HOST_AZURE_COMPUTE_MODE, HOST_AZURE_SKU, HOST_AZURE_WEB_APPLICATION_HOST_NAMES, HOST_AZURE_WEB_APPLICATION_SITE_NAMES, HOST_BITNESS, HOST_BOSH_AVAILABILITY_ZONE, HOST_BOSH_DEPLOYMENT_ID, HOST_BOSH_INSTANCE_ID, HOST_BOSH_INSTANCE_NAME, HOST_BOSH_NAME, HOST_BOSH_STEMCELL_VERSION, HOST_CLOUD_TYPE, HOST_CPU_CORES, HOST_CUSTOM_METADATA, HOST_DETECTED_NAME, HOST_GROUP_ID, HOST_GROUP_NAME, HOST_HYPERVISOR_TYPE, HOST_IP_ADDRESS, HOST_KUBERNETES_LABELS, HOST_LOGICAL_CPU_CORES, HOST_NAME, HOST_ONEAGENT_CUSTOM_HOST_NAME, HOST_OS_TYPE, HOST_OS_VERSION, HOST_PAAS_MEMORY_LIMIT, HOST_PAAS_TYPE, HOST_TAGS, HOST_TECHNOLOGY, HTTP_MONITOR_NAME, HTTP_MONITOR_TAGS, KUBERNETES_CLUSTER_NAME, KUBERNETES_NODE_NAME, KUBERNETES_SERVICE_NAME, MOBILE_APPLICATION_NAME, MOBILE_APPLICATION_PLATFORM, MOBILE_APPLICATION_TAGS, NAME_OF_COMPUTE_NODE, OPENSTACK_ACCOUNT_NAME, OPENSTACK_ACCOUNT_PROJECT_NAME, OPENSTACK_AVAILABILITY_ZONE_NAME, OPENSTACK_PROJECT_NAME, OPENSTACK_REGION_NAME, OPENSTACK_VM_INSTANCE_TYPE, OPENSTACK_VM_NAME, OPENSTACK_VM_SECURITY_GROUP, PROCESS_GROUP_AZURE_HOST_NAME, PROCESS_GROUP_AZURE_SITE_NAME, PROCESS_GROUP_CUSTOM_METADATA, PROCESS_GROUP_DETECTED_NAME, PROCESS_GROUP_ID, PROCESS_GROUP_LISTEN_PORT, PROCESS_GROUP_NAME, PROCESS_GROUP_PREDEFINED_METADATA, PROCESS_GROUP_TAGS, PROCESS_GROUP_TECHNOLOGY, PROCESS_GROUP_TECHNOLOGY_EDITION, PROCESS_GROUP_TECHNOLOGY_VERSION, QUEUE_NAME, QUEUE_TECHNOLOGY, QUEUE_VENDOR, SERVICE_AKKA_ACTOR_SYSTEM, SERVICE_CTG_SERVICE_NAME, SERVICE_DATABASE_HOST_NAME, SERVICE_DATABASE_NAME, SERVICE_DATABASE_TOPOLOGY, SERVICE_DATABASE_VENDOR, SERVICE_DETECTED_NAME, SERVICE_ESB_APPLICATION_NAME, SERVICE_IBM_CTG_GATEWAY_URL, SERVICE_MESSAGING_LISTENER_CLASS_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REMOTE_ENDPOINT, SERVICE_REMOTE_SERVICE_NAME, SERVICE_TAGS, SERVICE_TECHNOLOGY, SERVICE_TECHNOLOGY_EDITION, SERVICE_TECHNOLOGY_VERSION, SERVICE_TOPOLOGY, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_ENDPOINT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, VMWARE_DATACENTER_NAME, VMWARE_VM_NAME, WEB_APPLICATION_NAME, WEB_APPLICATION_NAME_PATTERN, WEB_APPLICATION_TAGS, WEB_APPLICATION_TYPE'
            legacy_id: (String) The ID of this setting when referred to by the Config REST API V1
            name: (String) Be careful when renaming - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!
            operator: '(String) Possible Values: BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, IS_IP_IN_RANGE, LOWER_THAN, LOWER_THAN_OR_EQUAL, NOT_BEGINS_WITH, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_EXISTS, NOT_GREATER_THAN, NOT_GREATER_THAN_OR_EQUAL, NOT_IS_IP_IN_RANGE, NOT_LOWER_THAN, NOT_LOWER_THAN_OR_EQUAL, NOT_REGEX_MATCHES, NOT_TAG_KEY_EQUALS, REGEX_MATCHES, TAG_KEY_EQUALS'
            pg_to_host_propagation: (Boolean) Apply to underlying hosts of matching process groups
            pg_to_service_propagation: (Boolean) Apply to all services provided by the process groups
            rule: '(Block Set, Min: 1) A management zone rule (see below for nested schema)'
            rule_matcher: '(String) Possible Values: BEGINS_WITH, EQUALS'
            rules: '(Block List, Max: 1) Rules (see below for nested schema)'
            service_to_host_propagation: (Boolean) Apply to underlying hosts of matching services
            service_to_pgpropagation: (Boolean) Apply to underlying process groups of matching services
            string_value: (String) Value
            tag: '(String) Format: [CONTEXT]tagKey:tagValue'
            terraform-provider-dynatrace -export dynatrace_management_zone_v2: downloads all existing management zone configuration
            type: '(String) Possible Values: DIMENSION, ME, SELECTOR'
            value: (String) no documentation available
        importStatements: []
    dynatrace_metric_events Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_metric_events Resource - terraform-provider-dynatrace
        title: dynatrace_metric_events Resource - terraform-provider-dynatrace
        argumentDocs:
            aggregation: '(String) Possible Values: AVG, COUNT, MAX, MEDIAN, MIN, PERCENTILE90, SUM, VALUE'
            alert_condition: '(String) Possible Values: ABOVE, BELOW, OUTSIDE'
            alert_on_no_data: (Boolean) The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
            builtin:anomaly-detection.metric-events: )
            condition: '(Block Set, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            davis_merge: (Boolean) Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
            dealerting_samples: (Number) The number of one-minute samples within the evaluation window that must go back to normal to close the event.
            description: (String) The description of the event to trigger.
            dimension_filter: '(Block List, Max: 1) Dimension filter (see below for nested schema)'
            dimension_key: (String) Dimension key
            dimension_value: (String) Dimension value
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            entity_filter: '(Block List, Max: 1) Use rule-based filters to define the scope this event monitors. (see below for nested schema)'
            event_entity_dimension_key: (String) Controls the preferred entity type used for triggered events.
            event_template: '(Block List, Min: 1, Max: 1) Event template (see below for nested schema)'
            event_type: '(String) Possible Values: AVAILABILITY, CUSTOM_ALERT, CUSTOM_ANNOTATION, CUSTOM_CONFIGURATION, CUSTOM_DEPLOYMENT, ERROR, INFO, MARKED_FOR_TERMINATION, RESOURCE, SLOWDOWN'
            filter: '(Block Set, Min: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            legacy_id: (String) Config id
            management_zone: (String) Management zone
            metadata: (Block Set) Set of additional key-value properties to be attached to the triggered event. (see below for nested schema)
            metadata_key: (String) Type 'dt.' for key hints.
            metadata_value: (String) no documentation available
            metric_key: (String) Metric key
            metric_selector: (String) To learn more, visit Metric Selector
            model_properties: '(Block List, Min: 1, Max: 1) Monitoring strategy (see below for nested schema)'
            operator: '(String) Possible Values: CONTAINS_CASE_SENSITIVE, DOES_NOT_CONTAIN_CASE_SENSITIVE, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH'
            query_definition: '(Block List, Min: 1, Max: 1) Query definition (see below for nested schema)'
            query_offset: (Number) Minute offset of sliding evaluation window for metrics with latency
            samples: (Number) The number of one-minute samples that form the sliding evaluation window.
            signal_fluctuation: (Number) Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
            summary: (String) The textual summary of the metric event entry
            terraform-provider-dynatrace -export dynatrace_metric_events: downloads all existing custom metric event configuration
            threshold: (Number) Raise an event if this value is violated
            title: (String) The title of the event to trigger.
            tolerance: (Number) Controls the width of the confidence band and larger values lead to a less sensitive model
            type: '(String) Possible Values: AUTO_ADAPTIVE_THRESHOLD, SEASONAL_BASELINE, STATIC_THRESHOLD'
            value: (String) no documentation available
            violating_samples: (Number) The number of one-minute samples within the evaluation window that must violate to trigger an event.
        importStatements: []
    dynatrace_metric_metadata Resource - terraform-provider-dynatrace:
        subCategory: Metrics
        description: The resource
        name: dynatrace_metric_metadata Resource - terraform-provider-dynatrace
        title: dynatrace_metric_metadata Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:metric.metadata: )
            description: (String) Description
            dimension: '(Block List, Min: 1) (see below for nested schema)'
            dimensions: '(Block List, Max: 1) Define metadata per metric dimension. (see below for nested schema)'
            display_name: (String) Display name
            id: (String) The ID of this resource.
            impact_relevant: (Boolean) Whether (true or false) the metric is relevant to a problem's impact.
            key: (String) Dimension key
            latency: (Number) The latency of the metric, in minutes.
            max_value: (Number) The maximum allowed value of the metric.
            metric_id: (String) The scope of this setting (metric)
            metric_properties: '(Block List, Max: 1) Metric properties (see below for nested schema)'
            min_value: (Number) The minimum allowed value of the metric.
            root_cause_relevant: (Boolean) Whether (true or false) the metric is related to a root cause of a problem.
            source_entity_type: (String) Specifies which entity dimension should be used as the primary dimension. The property can only be configured for metrics ingested with the Metrics API.
            tags: (Set of String) Tags
            terraform-provider-dynatrace -export dynatrace_metric_metadata: downloads all existing metric metadata configuration
            unit: (String) Unit
            unit_display_format: '(String) The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:'
            value_type: '(String) Possible Values: Error, Score, Unknown'
        importStatements: []
    dynatrace_metric_query Resource - terraform-provider-dynatrace:
        subCategory: Metrics
        description: The resource
        name: dynatrace_metric_query Resource - terraform-provider-dynatrace
        title: dynatrace_metric_query Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:metric.query: )
            id: (String) The ID of this resource.
            metric_id: (String) The scope of this setting (metric)
            metric_selector: (String) Query
            terraform-provider-dynatrace -export dynatrace_metric_query: downloads all existing metric query configuration
        importStatements: []
    dynatrace_mgmz_permission Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_mgmz_permission Resource - terraform-provider-dynatrace
        title: dynatrace_mgmz_permission Resource - terraform-provider-dynatrace
        argumentDocs:
            environment: (String) The UUID of the environment
            group: (String) The ID of the group the permissions are valid for. You may refer to the id of a resource dynatrace_user_group here
            id: (String) The ID of this resource.
            management_zone: (String) The ID of the management zone the permissions are valid for. When referring to resource dynatrace_management_zone_v2 or data source dynatrace_management_zone you need to refer to the attribute legacy_id.
            permissions: (Set of String) The permissions to assign for that management zone. Allowed values are DEMO_USER, LOG_VIEWER, MANAGE_SECURITY_PROBLEMS, MANAGE_SETTINGS, REPLAY_SESSION_DATA, REPLAY_SESSION_DATA_WITHOUT_MASKING, VIEWER, VIEW_SENSITIVE_REQUEST_DATA
        importStatements: []
    dynatrace_mobile_app_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_mobile_app_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_mobile_app_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:anomaly-detection.rum-mobile: )
            detection_mode: '(String) Possible Values: Auto, Fixed'
            duration_avoid_overalerting: '(Block List, Min: 1, Max: 1) To avoid over-alerting do not alert for low traffic applications with less than (see below for nested schema)'
            duration_threshold: (Number) Absolute threshold
            duration_threshold_all: '(Block List, Min: 1, Max: 1) Alert if the action duration of all user actions degrades beyond both the absolute and relative threshold: (see below for nested schema)'
            duration_threshold_all_fixed: '(Block List, Min: 1, Max: 1) Alert if the action duration of all user actions degrades beyond the absolute threshold: (see below for nested schema)'
            duration_threshold_slowest: '(Block List, Min: 1, Max: 1) Alert if the action duration of the slowest 10% of user actions degrades beyond both the absolute and relative threshold: (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            error_rate_increase: '(Block List, Min: 1, Max: 1) Error rate increase (see below for nested schema)'
            error_rate_increase_auto: '(Block List, Max: 1) Alert if the percentage of user actions affected by reported errors exceeds both the absolute threshold and the relative threshold (see below for nested schema)'
            error_rate_increase_fixed: '(Block List, Max: 1) Alert if the custom reported error rate threshold is exceeded during any 5-minute period (see below for nested schema)'
            id: (String) The ID of this resource.
            min_action_rate: (Number) no documentation available
            scope: (String) The scope of this setting (DEVICE_APPLICATION_METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
            sensitivity: '(String) Possible Values: Low, Medium, High'
            slow_user_actions: '(Block List, Min: 1, Max: 1) Slow user actions (see below for nested schema)'
            slow_user_actions_auto: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            slow_user_actions_fixed: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            slowdown_percentage: (Number) Relative threshold
            terraform-provider-dynatrace -export dynatrace_mobile_app_anomalies: downloads all existing mobile application anomaly detection configuration
            threshold_absolute: (Number) Absolute threshold
            threshold_percentage: (Number) Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
            threshold_relative: (Number) Relative threshold
            unexpected_high_load: '(Block List, Min: 1, Max: 1) Unexpected high load (see below for nested schema)'
            unexpected_low_load: '(Block List, Min: 1, Max: 1) Unexpected low load (see below for nested schema)'
        importStatements: []
    dynatrace_mobile_app_crash_rate Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_mobile_app_crash_rate Resource - terraform-provider-dynatrace
        title: dynatrace_mobile_app_crash_rate Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute_crash_rate: (Number) Absolute threshold
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            baseline_violation_percentage: (Number) Dynatrace learns the typical crash rate for all app versions and will create an alert if the baseline is violated by more than a specified threshold. Analysis happens based on a sliding window of 10 minutes.
            builtin:anomaly-detection.rum-mobile-crash-rate-increase: )
            concurrent_users: (Number) Amount of users
            crash_rate_increase: '(Block List, Min: 1, Max: 1) Crash rate increase (see below for nested schema)'
            crash_rate_increase_auto: '(Block List, Max: 1) Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users (see below for nested schema)'
            crash_rate_increase_fixed: '(Block List, Max: 1) Alert crash rate increases when the defined threshold is exceeded by a certain number of users (see below for nested schema)'
            detection_mode: '(String) Possible Values: Auto, Fixed'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            sensitivity: '(String) Possible Values: Low, Medium, High'
            terraform-provider-dynatrace -export dynatrace_mobile_app_crash_rate: downloads all existing mobile application crash rate increase configuration
        importStatements: []
    dynatrace_mobile_app_enablement Resource - terraform-provider-dynatrace:
        subCategory: Mobile & Custom Applications
        description: The resource
        name: dynatrace_mobile_app_enablement Resource - terraform-provider-dynatrace
        title: dynatrace_mobile_app_enablement Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            builtin:rum.mobile.enablement: )
            cost_and_traffic_control: (Number) Percentage of user sessions captured and analyzed. By default, Dynatrace captures all user actions and user sessions for analysis. This approach ensures complete insight into your application’s performance and customer experience. You can optionally reduce the granularity of user-action and user-session analysis by capturing a lower percentage of user sessions. While this approach can reduce monitoring costs, it also results in lower visibility into how your customers are using your applications. For example, a setting of 10% results in Dynatrace analyzing only every tenth user session.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            on_crash: (Boolean) Before enabling, Dynatrace checks your system against the prerequisites for Session Replay.
            rum: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_mobile_application) Capture and analyze all user actions within your application. Enable Real User Monitoring (RUM) to monitor and improve your application''s performance, identify errors, and gain insight into your user''s behavior and experience. (see below for nested schema)'
            session_replay: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_mobile_application) Session Replay on crashes gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing best-in-class security and data protection. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_mobile_app_enablement: downloads all existing mobile application enablement and cost control configuration
        importStatements: []
    dynatrace_mobile_app_key_performance Resource - terraform-provider-dynatrace:
        subCategory: Mobile & Custom Applications
        description: The resource
        name: dynatrace_mobile_app_key_performance Resource - terraform-provider-dynatrace
        title: dynatrace_mobile_app_key_performance Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.mobile.key-performance-metrics: )
            frustrating_if_reported_or_web_request_error: (Boolean) Treat user actions with reported errors or web request errors as erroneous and rate their performance as Frustrating. Turn off this setting if errors should not affect the Apdex rate.
            frustrating_threshold_seconds: (Number) If the action duration is above this value, the Apdex is considered to be Frustrating.
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (DEVICE_APPLICATION_METHOD, MOBILE_APPLICATION, CUSTOM_APPLICATION)
            terraform-provider-dynatrace -export dynatrace_mobile_app_key_performance: downloads all existing apdex threshold configuration for mobile/custom applications
            thresholds: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            tolerable_threshold_seconds: (Number) If the action duration is below this value, the Apdex is considered to be Satisfactory.
        importStatements: []
    dynatrace_mobile_app_request_errors Resource - terraform-provider-dynatrace:
        subCategory: Mobile & Custom Applications
        description: The resource
        name: dynatrace_mobile_app_request_errors Resource - terraform-provider-dynatrace
        title: dynatrace_mobile_app_request_errors Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.mobile.request-errors: )
            error_codes: (String) Exclude response codes
            error_rule: '(Block Set, Min: 1) (see below for nested schema)'
            error_rules: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (MOBILE_APPLICATION, CUSTOM_APPLICATION)
            terraform-provider-dynatrace -export dynatrace_mobile_app_request_errors: downloads all existing mobile application request error configuration
        importStatements: []
    dynatrace_mobile_application Resource - terraform-provider-dynatrace:
        subCategory: Mobile & Custom Applications
        description: The resource
        name: dynatrace_mobile_application Resource - terraform-provider-dynatrace
        title: dynatrace_mobile_application Resource - terraform-provider-dynatrace
        argumentDocs:
            aggregation: (String) The aggregation type of the property. It defines how multiple values of the property are aggregated. Possible values are SUM, MIN, MAX, FIRST and LAST
            apdex: '(Block List, Min: 1, Max: 1) Apdex configuration of a mobile application. A duration less than the tolerable threshold is considered satisfied (see below for nested schema)'
            api_value: (Block List) A User Action / Session Property based on a value reported by the API (see below for nested schema)
            application_id: (String) The UUID of the application.
            application_type: (String) The type of the application. Either CUSTOM_APPLICATION or MOBILE_APPLICATION.
            beacon_endpoint_type: (String) The type of the beacon endpoint. Possible values are CLUSTER_ACTIVE_GATE, ENVIRONMENT_ACTIVE_GATE and INSTRUMENTED_WEB_SERVER.
            beacon_endpoint_url: (String) The URL of the beacon endpoint.
            cleanup_rule: (String) The cleanup rule of the property. Defines how to extract the data you need from a string value. Specify the regular expression for the data you need there
            display_name: (String) The display name of the property
            frustrated: '(Number) Apdex frustrated threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated'
            frustrated_on_error: '(Boolean) Apdex error condition: if true the user session is considered frustrated when an error is reported'
            icon_type: (String) Custom application icon. Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.
            id: (String) The ID of this resource.
            key: (String) The unique key of the mobile session or user action property
            key_user_actions: (Set of String) User Action names to be flagged as Key User Actions
            name: (String) The name of the application
            opt_in_mode: (Boolean) The opt-in mode is enabled (true) or disabled (false)
            properties: '(Block List, Max: 1) User Action and Session Properties (see below for nested schema)'
            request_attribute: (Block List) A User Action / Session Property based on a Server Side Request Attribute (see below for nested schema)
            session_replay: (Boolean) (Field has overlap with dynatrace_mobile_app_enablement) The session replay is enabled (true) or disabled (false).
            session_replay_on_crash: (Boolean) The session replay on crash is enabled (true) or disabled (false).
            store_as_session_property: (Boolean) If true, the property is stored as a session property
            store_as_user_action_property: (Boolean) If true, the property is stored as a user action property
            terraform-provider-dynatrace -export dynatrace_mobile_application: downloads all existing web application configuration
            tolerable: '(Number) Apdex tolerable threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable'
            type: (String) The data type of the property. Possible values are DOUBLE, LONG and STRING
            user_session_percentage: (Number) (Field has overlap with dynatrace_mobile_app_enablement for mobile and dynatrace_custom_app_enablement for custom apps) The percentage of user sessions to be analyzed
        importStatements: []
    dynatrace_monitored_technologies_apache Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_apache Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_apache Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.apache: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_apache: downloads all existing Apache HTTP Server monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_dotnet Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_dotnet Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_dotnet Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.dotnet: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            enabled_dot_net_core: (Boolean) Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_dotnet: downloads all existing .NET monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_go Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_go Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_go Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.go: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            enabled_go_static_monitoring: (Boolean) Learn more about the known limitations for Go static monitoring
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_go: downloads all existing Go monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_iis Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_iis Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_iis Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.iis: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_iis: downloads all existing IIS monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_java Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_java Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_java Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.java: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_java: downloads all existing Java monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_nginx Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_nginx Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_nginx Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.nginx: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_nginx: downloads all existing NGINX monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_nodejs Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_nodejs Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_nodejs Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.nodejs: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_nodejs: downloads all existing Node.js monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_opentracing Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_opentracing Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_opentracing Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.open-tracing-native: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_opentracing: downloads all existing OpenTracing monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_php Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_php Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_php Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.php: )
            enable_php_cli_server: (Boolean) Requires enabled PHP monitoring and Dynatrace OneAgent version 1.261 or later
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            enabled_fast_cgi: (Boolean) Requires PHP monitoring enabled and from Dynatrace OneAgent version 1.191 it's ignored and permanently enabled
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_php: downloads all existing PHP monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_varnish Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_varnish Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_varnish Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.varnish: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_varnish: downloads all existing Varnish monitoring configuration
        importStatements: []
    dynatrace_monitored_technologies_wsmb Resource - terraform-provider-dynatrace:
        subCategory: Monitored Technologies
        description: The resource
        name: dynatrace_monitored_technologies_wsmb Resource - terraform-provider-dynatrace
        title: dynatrace_monitored_technologies_wsmb Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitored-technologies.wsmb: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_monitored_technologies_wsmb: downloads all existing IBM Integration Bus | IBM App Connect Enterprise monitoring configuration
        importStatements: []
    dynatrace_muted_requests Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_muted_requests Resource - terraform-provider-dynatrace
        title: dynatrace_muted_requests Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:settings.mutedrequests: )
            id: (String) The ID of this resource.
            muted_request_names: (Set of String) Muted request names
            service_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            terraform-provider-dynatrace -export dynatrace_muted_requests: downloads all existing muted requests configuration
        importStatements: []
    dynatrace_nettracer Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_nettracer Resource - terraform-provider-dynatrace
        title: dynatrace_nettracer Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:nettracer.traffic: )
            id: (String) The ID of this resource.
            net_tracer: (Boolean) When disabled, OneAgent won't use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_nettracer: downloads all existing NetTracer traffic configuration
        importStatements: []
    dynatrace_network_traffic Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_network_traffic Resource - terraform-provider-dynatrace
        title: dynatrace_network_traffic Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:exclude.network.traffic: )
            exclude_ip: '(Block List, Max: 1) Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated). (see below for nested schema)'
            exclude_nic: '(Block List, Max: 1) Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the "other one" option. (see below for nested schema)'
            host_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            interface: (String) Network interface
            ip_address: (String) IP address
            ip_address_form: '(Block List, Min: 1) (see below for nested schema)'
            nic_form: '(Block List, Min: 1) (see below for nested schema)'
            os: '(String) Possible Values: OS_TYPE_AIX, OS_TYPE_DARWIN, OS_TYPE_HPUX, OS_TYPE_LINUX, OS_TYPE_SOLARIS, OS_TYPE_UNKNOWN, OS_TYPE_WINDOWS, OS_TYPE_ZOS'
            terraform-provider-dynatrace -export dynatrace_network_traffic: downloads all existing host network traffic exclusion configuration
        importStatements: []
    dynatrace_network_zone Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_network_zone Resource - terraform-provider-dynatrace
        title: dynatrace_network_zone Resource - terraform-provider-dynatrace
        argumentDocs:
            alternative_zones: (List of String) A list of alternative network zones.
            description: (String) A short description of the network zone
            id: (String) The ID of this resource.
            name: '(String) Name of the network zone, not case sensitive. Dynatrace stores the name in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot'
            num_of_configured_activegates: (Number) The number of ActiveGates in the network zone.
            num_of_configured_oneagents: (Number) The number of OneAgents that are configured to use the network zone as primary.
            num_of_oneagents_from_other_zones: (Number) The number of OneAgents from other network zones that are using ActiveGates in the network zone.
            num_of_oneagents_using: (Number) The number of OneAgents that are using ActiveGates in the network zone.
            terraform-provider-dynatrace -export dynatrace_network_zone: downloads all existing network zone configuration
        importStatements: []
    dynatrace_network_zones Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_network_zones Resource - terraform-provider-dynatrace
        title: dynatrace_network_zones Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:networkzones: )
            enabled: (Boolean) Network Zones are enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_network_zones: downloads all existing network zone configuration
        importStatements: []
    dynatrace_notification Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_notification Resource - terraform-provider-dynatrace
        title: dynatrace_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            accept_any_certificate: (Boolean) Accept any, including self-signed and invalid, SSL certificate (true) or only trusted (false) certificates
            account: (String) The name of the PagerDuty account
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            alerting_profile: (String) The ID of the associated alerting profile
            ansible_tower: '(Block List, Max: 1) Configuration for Ansible Tower Notification (see below for nested schema)'
            api_key: (String) The API key to access OpsGenie
            application_key: (String) The application key for the Trello account
            authorization_token: (String) The application token for the Trello account
            bcc_receivers: (Set of String) The list of the email BCC-recipients
            board_id: (String) The Trello board to which the card should be assigned
            body: '(String) The template of the email notification.  You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsHTML}: All problem event details, including root cause, as an HTML-formatted string.  * {ProblemDetailsJSON}: All problem event details, including root cause, as a JSON object.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            cc_receivers: (Set of String) The list of the email CC-recipients
            channel: '(String) The channel (for example, #general) or the user (for example, @john.smith) to send the message to'
            config: '(Block List, Max: 1) Configuration for Generic Notification (see below for nested schema)'
            custom_message: '(String) The custom message of the notification.   This message will be displayed in the extra variables Message field of your job template.  You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            description: (String) The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
            domain: (String) The region domain of the OpsGenie
            email: '(Block List, Max: 1) Configuration for Email Notification (see below for nested schema)'
            header: (Block Set) A list of the additional HTTP headers (see below for nested schema)
            id: (String) The ID of this resource.
            instance_name: (String) The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the url field. You can only use one of them
            issue_type: (String) The type of the Jira issue to be created by this notification
            jira: '(Block List, Max: 1) Configuration for Jira Notification (see below for nested schema)'
            job_template_id: (Number) The ID of the target Ansible Tower job template
            job_template_url: (String) The URL of the target Ansible Tower job template
            list_id: (String) The Trello list to which the card should be assigned
            message: '(String) The content of the message.  You can use the following placeholders:  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem'
            name: (String) The name of the notification configuration
            notify_event_merges: (Boolean) Call webhook if new events merge into existing problems
            ops_genie: '(Block List, Max: 1) Configuration for OpsGenie Notification (see below for nested schema)'
            pager_duty: '(Block List, Max: 1) Configuration for PagerDuty Notification (see below for nested schema)'
            password: (String) The password for the Ansible Tower account
            payload: '(String) The content of the notification message.  You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsHTML}: All problem event details, including root cause, as an HTML-formatted string.  * {ProblemDetailsJSON}: All problem event details, including root cause, as a JSON object.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            project_key: (String) The project key of the Jira issue to be created by this notification
            receivers: (Set of String) The list of the email recipients
            resolved_list_id: (String) The Trello list to which the card of the resolved problem should be assigned
            routing_key: (String) The routing key, defining the group to be notified
            send_events: (Boolean) Send events into ServiceNow ITOM (true)
            send_incidents: (Boolean) Send incidents into ServiceNow ITSM (true)
            service_api_key: (String) The API key to access PagerDuty
            service_name: (String) The name of the service
            service_now: '(Block List, Max: 1) Configuration for ServiceNow Notification (see below for nested schema)'
            slack: '(Block List, Max: 1) Configuration for Slack Notification (see below for nested schema)'
            subject: (String) The subject of the email notifications
            summary: '(String) The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            terraform-provider-dynatrace -export dynatrace_notification: downloads all existing notification configuration
            text: '(String) The text of the generated Trello card.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            title: '(String) The content of the message.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            trello: '(Block List, Max: 1) Configuration for Trello Notification (see below for nested schema)'
            type: '(String) Defines the actual set of fields depending on the value. See one of the following objects:  * EMAIL -> EmailNotificationConfig  * PAGER_DUTY -> PagerDutyNotificationConfig  * WEBHOOK -> WebHookNotificationConfig  * SLACK -> SlackNotificationConfig  * HIPCHAT -> HipChatNotificationConfig  * VICTOROPS -> VictorOpsNotificationConfig  * SERVICE_NOW -> ServiceNowNotificationConfig  * XMATTERS -> XMattersNotificationConfig  * ANSIBLETOWER -> AnsibleTowerNotificationConfig  * OPS_GENIE -> OpsGenieNotificationConfig  * JIRA -> JiraNotificationConfig  * TRELLO -> TrelloNotificationConfig'
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            url: (String) The URL of the Jira API endpoint
            username: (String) The username of the Ansible Tower account
            value: (String) The value of the HTTP header. May contain an empty value.   Required when creating a new notification.  For the Authorization header, GET requests return the null value.  If you want update a notification configuration with an Authorization header which you want to remain intact, set the Authorization header with the null value
            victor_ops: '(Block List, Max: 1) Configuration for VictorOps Notification (see below for nested schema)'
            web_hook: '(Block List, Max: 1) Configuration for WebHook Notification (see below for nested schema)'
            xmatters: '(Block List, Max: 1) Configuration for XMatters Notification (see below for nested schema)'
        importStatements: []
    dynatrace_oneagent_default_version Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_oneagent_default_version Resource - terraform-provider-dynatrace
        title: dynatrace_oneagent_default_version Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:deployment.oneagent.default-version: )
            default_version: (String) Default version
            id: (String) The ID of this resource.
            revision: (String) Revision
            terraform-provider-dynatrace -export dynatrace_oneagent_default_version: downloads existing OneAgent default version configuration
        importStatements: []
    dynatrace_oneagent_features Resource - terraform-provider-dynatrace:
        subCategory: Environment Settings
        description: The resource
        name: dynatrace_oneagent_features Resource - terraform-provider-dynatrace
        title: dynatrace_oneagent_features Resource - terraform-provider-dynatrace
        argumentDocs:
            _restore_: (String) Used internally by the terraform provider. Do not populate
            builtin:oneagent.features: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            forcible: (Boolean) Activate this feature also in OneAgents only fulfilling the minimum Opt-In version
            id: (String) The ID of this resource.
            instrumentation: (Boolean) Instrumentation enabled (change needs a process restart)
            key: (String) Feature
            scope: (String) The scope of this setting (PROCESS_GROUP_INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_oneagent_features: downloads the current configuration for OneAgent Features
        importStatements: []
    dynatrace_oneagent_updates Resource - terraform-provider-dynatrace:
        subCategory: Updates
        description: The resource
        name: dynatrace_oneagent_updates Resource - terraform-provider-dynatrace
        title: dynatrace_oneagent_updates Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:deployment.oneagent.updates: )
            id: (String) The ID of this resource.
            maintenance_window: '(Block Set, Min: 1) (see below for nested schema)'
            maintenance_windows: '(Block List, Max: 1) Maintenance windows (see below for nested schema)'
            revision: (String) Revision
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            target_version: (String) Target version
            terraform-provider-dynatrace -export dynatrace_oneagent_updates: downloads existing OneAgent update configuration
            update_mode: '(String) Possible Values: AUTOMATIC, AUTOMATIC_DURING_MW, MANUAL'
        importStatements: []
    dynatrace_opentelemetry_metrics Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_opentelemetry_metrics Resource - terraform-provider-dynatrace
        title: dynatrace_opentelemetry_metrics Resource - terraform-provider-dynatrace
        argumentDocs:
            additional_attribute: '(Block Set, Min: 1) (see below for nested schema)'
            additional_attributes: '(Block List, Max: 1) When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are present in the OpenTelemetry resource or in the instrumentation scope.'
            additional_attributes_to_dimension_enabled: (Boolean) Add the resource and scope attributes configured below as dimensions
            attribute_key: (String) Attribute key
            builtin:opentelemetry-metrics: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            meter_name_to_dimension_enabled: (Boolean) When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs) and version will be added as dimensions (otel.scope.name and otel.scope.version) to ingested OTLP metrics.
            scope: (String) The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_opentelemetry_metrics: downloads all existing OpenTelemetry metric configuration
            to_drop_attribute: '(Block Set, Min: 1) (see below for nested schema)'
            to_drop_attributes: '(Block List, Max: 1) The attributes defined in the list below will be dropped from all ingested OTLP metrics.'
        importStatements: []
    dynatrace_ops_genie_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_ops_genie_notification Resource - terraform-provider-dynatrace
        title: dynatrace_ops_genie_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            api_key: (String, Sensitive) The API key to access OpsGenie
            builtin:problem.notifications: )
            domain: (String) The region domain of the OpsGenie
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            message: '(String) The content of the message.  You can use the following placeholders:  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem'
            name: (String) The name of the notification configuration
            profile: (String) The ID of the associated alerting profile
            terraform-provider-dynatrace -export dynatrace_ops_genie_notification: downloads the existing problem notifications for OpsGenie
        importStatements: []
    dynatrace_os_services Resource - terraform-provider-dynatrace:
        subCategory: Host Monitoring
        description: The resource
        name: dynatrace_os_services Resource - terraform-provider-dynatrace
        title: dynatrace_os_services Resource - terraform-provider-dynatrace
        argumentDocs:
            $and($prefix(ss),$suffix(hd)): – Matches if service's property value starts with ss and ends with hd.
            $contains(ssh): – Matches if ssh appears anywhere in the service's property value.
            $eq(enabled): – Matches services with startup type equal to enabled.
            $eq(failed): – Matches services that are in failed state.
            $eq(manual): – Matches services that are started manually.
            $eq(paused): – Matches services that are in paused state.
            $eq(sshd): – Matches if sshd matches the service's property value exactly.
            $not($eq(active)): – Matches services with state different from active.
            $not($eq(auto)): – Matches services with startup type different from Automatic.
            $not($eq(enabled)): – Matches services with startup type different from enabled.
            $not($eq(paused)): – Matches services that are in state different from paused.
            $not($eq(sshd)): – Matches if the service's property value is different from sshd.
            $or($eq(auto),$eq(manual)): – Matches if service's startup type is either Automatic or Manual.
            $or($eq(enabled),$eq(disabled)): '- Matches services that are either enabled or disabled.'
            $or($eq(inactive),$eq(failed)): – Matches services that are either in inactive or failed state.
            $or($eq(paused),$eq(running)): – Matches services that are either in paused or running state.
            $or($prefix(ss),$suffix(hd)): – Matches if service's property value starts with ss or ends with hd.
            $prefix(ss): – Matches if ss matches the prefix of the service's property value.
            $suffix(hd): – Matches if hd matches the suffix of the service's property value.
            alert_activation_duration: (Number) The number of 10-second measurement cycles before alerting is triggered
            alerting: (Boolean) Toggle the switch in order to enable or disable alerting for this policy
            auto: for Automatic
            auto_delay: for Automatic (Delayed Start)
            auto_delay_trigger: for Automatic (Delayed Start, Trigger Start)
            auto_trigger: for Automatic (Trigger Start)
            builtin:os-services-monitoring: )
            condition: (String) This string has to match a required format. See OS services monitoring.
            detection_conditions_linux: '(Block List, Max: 1) Detection rules (see below for nested schema)'
            detection_conditions_window: '(Block List, Min: 1) (see below for nested schema)'
            detection_conditions_windows: '(Block List, Max: 1) Detection rules (see below for nested schema)'
            disabled: for Disabled
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            item: '(Block Set, Min: 1) (see below for nested schema)'
            linux_detection_condition: '(Block List, Min: 1) (see below for nested schema)'
            manual: for Manual
            manual_trigger: for Manual (Trigger Start)
            metadata: '(Block List, Max: 1) Set of additional key-value properties to be attached to the triggered event. (see below for nested schema)'
            metadata_key: (String) Type 'dt.' for key hints.
            metadata_value: (String) no documentation available
            monitoring: (Boolean) Toggle the switch in order to enable or disable availability metric monitoring for this policy. Availability metrics consume custom metrics (DDUs). Refer to documentation for DDU consumption examples. Each monitored service consumes one custom metric.
            name: (String) Rule name
            not_installed_alerting: (Boolean) By default, Dynatrace does not alert if the service is not installed. Toggle the switch to enable or disable this feature
            property: '(String) Possible Values: ServiceName, StartupType'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            startup_condition: (String) This string has to match a required format. See OS services monitoring.
            status_condition_linux: (String) This string has to match a required format. See OS services monitoring.
            status_condition_windows: (String) This string has to match a required format. See OS services monitoring.
            system: '(String) Possible Values: LINUX, WINDOWS'
            terraform-provider-dynatrace -export dynatrace_os_services: downloads all existing OS services monitoring configuration
        importStatements: []
    dynatrace_ownership_config Resource - terraform-provider-dynatrace:
        subCategory: Ownership
        description: The resource
        name: dynatrace_ownership_config Resource - terraform-provider-dynatrace
        title: dynatrace_ownership_config Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:ownership.config: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            key: (String) Key for ownership metadata and tags
            ownership_identifier: '(Block List, Min: 1) (see below for nested schema)'
            ownership_identifiers: '(Block List, Min: 1, Max: 1) Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_ownership_config: downloads all existing ownership configuration
        importStatements: []
    dynatrace_ownership_teams Resource - terraform-provider-dynatrace:
        subCategory: Ownership
        description: The resource
        name: dynatrace_ownership_teams Resource - terraform-provider-dynatrace
        title: dynatrace_ownership_teams Resource - terraform-provider-dynatrace
        argumentDocs:
            additional_information: '(Block List, Max: 1) Define key/value pairs that further describe this team — for example, cost center, solution type, or business unit assignments. (see below for nested schema)'
            builtin:ownership.teams: )
            contact_detail: '(Block List, Min: 1) (see below for nested schema)'
            contact_details: '(Block List, Max: 1) Define options for messaging integration or other means of contacting this team. (see below for nested schema)'
            default_assignee: (String) Default Assignee
            description: (String) Description
            development: (Boolean) Responsible for developing and maintaining high quality software. Development teams are responsible for making code changes to address performance regressions, errors, or security vulnerabilities.
            email: (String) no documentation available
            external_id: (String) This field should only be used for the automation purpose when importing team information.
            id: (String) The ID of this resource.
            identifier: (String) The team identifier is used to reference the team from any entity in Dynatrace. If you are using Kubernetes labels, keep in mind the 63 character limit that they enforce.
            infrastructure: (Boolean) Responsible for the administration, management, and support of the IT infrastructure including physical servers, virtualization, and cloud. Teams with infrastructure responsibility are responsible for addressing hardware issues, resource limits, and operating system vulnerabilities.
            integration_type: '(String) Possible Values: EMAIL, JIRA, MS_TEAMS, SLACK'
            jira: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            key: (String) Name
            line_of_business: (Boolean) Responsible for ensuring that applications in development align with business needs and meet the usability requirements of users, stakeholders, customers, and external partners. Teams with line of business responsibility are responsible for understanding the customer experience and how it affects business goals.
            link: '(Block List, Min: 1) (see below for nested schema)'
            link_type: '(String) Possible Values: DASHBOARD, DOCUMENTATION, HEALTH_APP, REPOSITORY, RUNBOOK, URL, WIKI'
            links: '(Block List, Max: 1) Include links to online resources where information relevant to this team’s responsibilities can be found. (see below for nested schema)'
            ms_teams: (String) Team
            name: (String) Team name
            operations: (Boolean) Responsible for deploying and managing software, with a focus on high availability and performance. Teams with operations responsibilities needs to understand the impact, priority, and team responsible for addressing problems detected by Dynatrace.
            project: (String) no documentation available
            responsibilities: '(Block List, Min: 1, Max: 1) Turn on all responsibility assignments that apply to this team. (see below for nested schema)'
            security: (Boolean) Responsible for the security posture of the organization. Teams with security responsibility must understand the impact, priority, and team responsible for addressing security vulnerabilities.
            slack_channel: (String) Channel
            supplementary_identifier: '(Block Set, Min: 1) (see below for nested schema)'
            supplementary_identifiers: '(Block List, Max: 1) The supplementary team identifiers can be optionally used in addition to the main team identifier to reference this team from any entity in Dynatrace. Up to 3 supplementary identifiers are supported. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_ownership_teams: downloads all existing ownership team configuration
            url: (String) no documentation available
            value: (String) no documentation available
        importStatements: []
    dynatrace_pager_duty_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_pager_duty_notification Resource - terraform-provider-dynatrace
        title: dynatrace_pager_duty_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            account: (String) The name of the PagerDuty account
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            api_key: (String, Sensitive) The API key to access PagerDuty
            builtin:problem.notifications: )
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            name: (String) The name of the notification configuration
            profile: (String) The ID of the associated alerting profile
            service: (String) The name of the PagerDuty Service
            terraform-provider-dynatrace -export dynatrace_pager_duty_notification: downloads the existing problem notifications for Pager Duty
        importStatements: []
    dynatrace_pg_alerting Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_pg_alerting Resource - terraform-provider-dynatrace
        title: dynatrace_pg_alerting Resource - terraform-provider-dynatrace
        argumentDocs:
            alerting_mode: |-
                (String) if any process becomes unavailable:
                Dynatrace will open a new problem if a single process in this group shuts down or crashes.
            builtin:availability.process-group-alerting: )
            enabled: (Boolean) Enable process group availability monitoring
            id: (String) The ID of this resource.
            minimum_instance_threshold: '(Number) Open a new problem if the number of active process instances in the group is fewer than:'
            process_group: (String) The process group ID for availability monitoring
            terraform-provider-dynatrace -export dynatrace_pg_alerting: downloads all existing process group availability monitoring configuration
        importStatements: []
    dynatrace_pg_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_pg_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_pg_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            availability: '(Block List, Max: 1) Configuration of the availability monitoring for the process group. (see below for nested schema)'
            id: (String) The ID of this resource.
            method: '(String) How to monitor the availability of the process group:  * PROCESS_IMPACT: Alert if any process of the group becomes unavailable.  * MINIMUM_THRESHOLD: Alert if the number of active processes in the group falls below the specified threshold.  * OFF: Availability monitoring is disabled.'
            minimum_threshold: (Number) Alert if the number of active processes in the group is lower than this value.
            pg_id: (String) The ID of the process group
            terraform-provider-dynatrace -export dynatrace_pg_anomalies: downloads all existing process group detection configuration
        importStatements: []
    dynatrace_policy Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_policy Resource - terraform-provider-dynatrace
        title: dynatrace_policy Resource - terraform-provider-dynatrace
        argumentDocs:
            cluster: (String) The UUID of the cluster in case the policy should be applied to all environments of this cluster.
            description: (String) An optional description text for the policy
            environment: (String) The ID of the environment if the policy should be applied to a specific environment
            id: (String) The ID of this resource.
            name: (String) The name of the policy
            statement_query: (String) The Statement Query of the policy
            tags: (Set of String) Tags for this policy
        importStatements: []
    dynatrace_policy_bindings Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_policy_bindings Resource - terraform-provider-dynatrace
        title: dynatrace_policy_bindings Resource - terraform-provider-dynatrace
        argumentDocs: {}
        importStatements: []
    dynatrace_process_availability Resource - terraform-provider-dynatrace:
        subCategory: Process Monitoring
        description: The resource
        name: dynatrace_process_availability Resource - terraform-provider-dynatrace
        title: dynatrace_process_availability Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:processavailability: )
            condition: (String) - $contains(svc) – Matches if svc appears anywhere in the process property value.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            item: '(Block Set, Min: 1) (see below for nested schema)'
            key: (String) Type 'dt.' for key hints.
            metadata: '(Block List, Max: 1) Set of additional key-value properties to be attached to the triggered event. (see below for nested schema)'
            name: (String) Monitored rule name
            property: '(String) Possible Values: Executable, ExecutablePath, CommandLine'
            rule: '(Block List, Min: 1) (see below for nested schema)'
            rules: '(Block List, Max: 1) Define process detection rules by selecting a process property and a condition. Each monitoring rule can have multiple detection rules associated with it. (see below for nested schema)'
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_process_availability: downloads all existing process availability configuration
            value: (String) no documentation available
        importStatements: []
    dynatrace_process_group_detection Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_process_group_detection Resource - terraform-provider-dynatrace
        title: dynatrace_process_group_detection Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:process-group.advanced-detection-rule: )
            contained_string: (String) The substring to be contained in the value property refers to. Case Sensitive
            delimiter: '(Block List, Min: 1, Max: 1) Optionally delimit this property between From and To. (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            from: (String) Delimit from
            group_extraction: '(Block List, Min: 1, Max: 1) You can define the properties that should be used to identify your process groups. (see below for nested schema)'
            id: (String) The ID of this resource.
            instance_extraction: '(Block List, Max: 1) You can define the properties that should be used to identify your process instances. (see below for nested schema)'
            process_detection: '(Block List, Min: 1, Max: 1) Apply this rule to processes where the selected property contains the specified string. (see below for nested schema)'
            property: '(String) Possible values: DOTNET_COMMAND, DOTNET_COMMAND_PATH, ASP_NET_CORE_APPLICATION_PATH, AWS_ECR_ACCOUNT_ID, AWS_ECR_REGION, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, AWS_LAMBDA_FUNCTION_NAME, AWS_REGION, APACHE_SPARK_MASTER_IP_ADDRESS, APACHE_CONFIG_PATH, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_APPLICATION_ID, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_NAME, CLOUD_FOUNDRY_SPACE_ID, COLDFUSION_JVM_CONFIG_FILE, SERVICE_NAME, COMMAND_LINE_ARGS, CONTAINER_ID, CONTAINER_IMAGE_VERSION, CONTAINER_NAME, DECLARATIVE_ID, CONTAINER_IMAGE_NAME, RUXIT_CLUSTER_ID, RUXIT_NODE_ID, EXE_NAME, EXE_PATH, ELASTIC_SEARCH_CLUSTER_NAME, ELASTIC_SEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, GLASSFISH_DOMAIN_NAME, GLASSFISH_INSTANCE_NAME, PG_ID_CALC_INPUT_KEY_LINKAGE, GAE_INSTANCE, GAE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIR, HYBRIS_CONFIG_DIR, HYBRIS_DATA_DIR, IBM_CICS_REGION, IBM_CICS_IMS_APPLID, IBM_CICS_IMS_JOBNAME, IBM_CTG_NAME, IBM_IMS_CONNECT, IBM_IMS_CONTROL, IBM_IMS_MPR, IBM_IMS_SOAP_GW_NAME, IIB_BROKER_NAME, IIB_EXECUTION_GROUP_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, KUBERNETES_BASEPODNAME, KUBERNETES_CONTAINERNAME, KUBERNETES_FULLPODNAME, KUBERNETES_NAMESPACE, KUBERNETES_PODUID, MSSQL_INSTANCE_NAME, NODEJS_APP_NAME, NODEJS_APP_BASE_DIR, NODEJS_SCRIPT_NAME, ORACLE_SID, PHP_CLI_SCRIPT_PATH, PHP_CLI_WORKING_DIR, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESSWORKS_APP_NODE_NAME, TIBCO_BUSINESSWORKS_APP_SPACE_NAME, TIBCO_BUSINESSWORKS_DOMAIN_NAME, TIPCO_BUSINESSWORKS_PROPERTY_FILE, TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH, TIBCO_BUSINESSWORKS_HOME, VARNISH_INSTANCE_NAME, WEBLOGIC_NAME, WEBLOGIC_CLUSTER_NAME, WEBLOGIC_DOMAIN_NAME, WEBLOGIC_HOME, WEBSPHERE_LIBERTY_SERVER_NAME, WEBSPHERE_CELL_NAME, WEBSPHERE_CLUSTER_NAME, WEBSPHERE_NODE_NAME, WEBSPHERE_SERVER_NAME'
            remove_ids: (Boolean) (e.g. versions, hex, dates, and build numbers)
            restrict_to_process_type: '(String) Restrict this rule to specific process types. Note: Not all types can be detected at startup. Possible values: PROCESS_TYPE_APACHE_HTTPD, PROCESS_TYPE_GLASSFISH, PROCESS_TYPE_GO, PROCESS_TYPE_IIS_APP_POOL, PROCESS_TYPE_JBOSS, PROCESS_TYPE_JAVA, PROCESS_TYPE_NGINX, PROCESS_TYPE_NODE_JS, PROCESS_TYPE_PHP, PROCESS_TYPE_TOMCAT, PROCESS_TYPE_WEBLOGIC, PROCESS_TYPE_WEBSPHERE'
            standalone_rule: (Boolean) If this option is selected, the default Dynatrace behavior is disabled for these detected processes. Only this rule is used to separate the process group.
            terraform-provider-dynatrace -export dynatrace_process_group_detection: downloads all existing advanced process group detection configuration
            to: (String) Delimit to
        importStatements: []
    dynatrace_process_group_detection_flags Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_process_group_detection_flags Resource - terraform-provider-dynatrace
        title: dynatrace_process_group_detection_flags Resource - terraform-provider-dynatrace
        argumentDocs:
            add_node_js_script_name: (Boolean) In older versions, Node.js applications were distinguished based on their directory name, omitting the script name. Changing this setting may change the general handling of Node.js process groups. Leave unchanged if in doubt.
            auto_detect_cassandra_clusters: (Boolean) Enabling this flag will detect separate Cassandra process groups based on the configured Cassandra cluster name.
            auto_detect_spring_boot: (Boolean) Enabling this flag will detect Spring Boot process groups based on command line and applications' configuration files.
            auto_detect_tibco_container_edition_engines: (Boolean) Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.
            auto_detect_tibco_engines: (Boolean) Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.
            auto_detect_web_methods_integration_server: (Boolean) Enabling this flag will detect webMethods Integration Server including specific properties like install root and product name.
            auto_detect_web_sphere_liberty_application: (Boolean) Enabling this flag will detect separate WebSphere Liberty process groups based on java command line.
            builtin:process-group.detection-flags: )
            group_ibmmqby_instance_name: (Boolean) Enable to group and separately analyze the processes of each IBM MQ Queue manager instance. Each process group receives a unique name based on the queue manager instance name.
            id: (String) The ID of this resource.
            identify_jboss_server_by_system_property: (Boolean) Enabling this flag will detect the JBoss server name from the system property jboss.server.name=, only if -D[Server:] is not set.
            ignore_unique_identifiers: (Boolean) To determine the unique identity of each detected process, and to generate a unique name for each detected process, Dynatrace evaluates the name of the directory that each process binary is contained within. For application containers like Tomcat and JBoss, Dynatrace evaluates important directories like CATALINA_HOME and JBOSS_HOME for this information. In some automated deployment scenarios such directory names are updated automatically with new version numbers, build numbers, dates, or GUIDs. Enable this setting to ensure that automated directory name changes don't result in Dynatrace registering pre-existing processes as new processes.
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            short_lived_processes_monitoring: (Boolean) Enable to monitor CPU and memory usage of short lived processes, otherwise being lost by traditional monitoring. Disabling this flag blocks passing data to cluster only, it does not stop data collection and has no effect on performance.
            split_oracle_database_pg: (Boolean) Enable to group and separately analyze the processes of each Oracle DB. Each process group receives a unique name based on the Oracle DB SID.
            split_oracle_listener_pg: (Boolean) Enable to group and separately analyze the processes of each Oracle Listener. Each process group receives a unique name based on the Oracle Listener name.
            terraform-provider-dynatrace -export dynatrace_process_group_detection_flags: downloads all existing built-in process group detection rules
            use_catalina_base: (Boolean) By default, Tomcat clusters are identified and named based on the CATALINA_HOME directory name. This setting results in the use of the CATALINA_BASE directory name to identify multiple Tomcat nodes within each Tomcat cluster. If this setting is not enabled, each CATALINA_HOME+CATALINA_BASE combination will be considered a separate Tomcat cluster. In other words, Tomcat clusters can't have multiple nodes on a single host.
            use_docker_container_name: (Boolean) By default, Dynatrace uses image names as identifiers for individual process groups, with one process-group instance per host. Normally Docker container names can't serve as stable identifiers of process group instances because they are variable and auto-generated. You can however manually assign proper container names to their Docker instances. Such manually-assigned container names can serve as reliable process-group instance identifiers. This flag instructs Dynatrace to use Docker-provided names to distinguish between multiple instances of the same image. If this flag is not applied and you run multiple containers of the same image on the same host, the resulting processes will be consolidated into a single process view. Use this flag with caution!
        importStatements: []
    dynatrace_process_group_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_process_group_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_process_group_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:process-group.monitoring.state: )
            id: (String) The ID of this resource.
            monitoring_state: '(String) Possible Values: DEFAULT, MONITORING_OFF, MONITORING_ON'
            process_group_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            terraform-provider-dynatrace -export dynatrace_process_group_monitoring: downloads all existing process group monitoring configuration
        importStatements: []
    dynatrace_process_group_rum Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_process_group_rum Resource - terraform-provider-dynatrace
        title: dynatrace_process_group_rum Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.processgroup: )
            enable: '(Boolean) Allows OneAgent to:'
            id: (String) The ID of this resource.
            process_group_id: (String) The scope of this setting - PROCESS_GROUP-XXXXXXXXXXXXXXXX
            terraform-provider-dynatrace -export dynatrace_process_group_rum: downloads all real user monitoring configuration for process groups
        importStatements: []
    dynatrace_process_group_simple_detection Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_process_group_simple_detection Resource - terraform-provider-dynatrace
        title: dynatrace_process_group_simple_detection Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:process-group.simple-detection-rule: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            group_identifier: (String) If Dynatrace detects this property at startup of a process, it will use its value to identify process groups more granular.
            id: (String) The ID of this resource.
            instance_identifier: (String) Use a variable to identify instances within a process group.
            process_type: '(String) Note: Not all types can be detected at startup.'
            rule_type: '(String) Possible Values: Prop, Env'
            terraform-provider-dynatrace -export dynatrace_process_group_simple_detection: downloads all existing process group simple detection rules
        importStatements: []
    dynatrace_process_monitoring Resource - terraform-provider-dynatrace:
        subCategory: Process Monitoring
        description: The resource
        name: dynatrace_process_monitoring Resource - terraform-provider-dynatrace
        title: dynatrace_process_monitoring Resource - terraform-provider-dynatrace
        argumentDocs:
            auto_monitoring: |-
                (Boolean) By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.
                Disabling only works if all installed Agents have version 1.123 or higher.
            builtin:process.process-monitoring: )
            host_group_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_process_monitoring: downloads all existing key processes configuration
        importStatements: []
    dynatrace_process_monitoring_rule Resource - terraform-provider-dynatrace:
        subCategory: Process Monitoring
        description: The resource
        name: dynatrace_process_monitoring_rule Resource - terraform-provider-dynatrace
        title: dynatrace_process_monitoring_rule Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:process.custom-process-monitoring-rule: )
            condition: '(Block List, Min: 1, Max: 1) Condition (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            env_var: (String) supported only with OneAgent 1.167+
            host_group_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope
            id: (String) The ID of this resource.
            item: (String) Condition target
            mode: '(String) Possible Values: MONITORING_ON, MONITORING_OFF'
            operator: (String) Condition operator
            terraform-provider-dynatrace -export dynatrace_process_monitoring_rule: downloads all existing custom process monitoring configuration
            value: (String) Condition value
        importStatements: []
    dynatrace_process_visibility Resource - terraform-provider-dynatrace:
        subCategory: Process Monitoring
        description: The resource
        name: dynatrace_process_visibility Resource - terraform-provider-dynatrace
        title: dynatrace_process_visibility Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:processvisibility: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            max_processes: (Number) The maximum amount of processes that host may report is 100
            scope: (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
            terraform-provider-dynatrace -export dynatrace_process_visibility: downloads all existing process instance snapshots configuration
        importStatements: []
    dynatrace_processgroup_naming Resource - terraform-provider-dynatrace:
        subCategory: Process Group Monitoring
        description: The resource
        name: dynatrace_processgroup_naming Resource - terraform-provider-dynatrace
        title: dynatrace_processgroup_naming Resource - terraform-provider-dynatrace
        argumentDocs:
            application_type: (Block List) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            application_type_comparison: (Block List, Deprecated) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            attribute: (String) The attribute to be used for comparision
            azure_compute_mode: (Block List, Deprecated) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_compute_mode_comparison: (Block List) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_sku: (Block List) Comparison for AZURE_SKU attributes (see below for nested schema)
            azure_sku_comparision: (Block List, Deprecated) Comparison for AZURE_SKU attributes (see below for nested schema)
            base_comparison_basic: (Block List, Deprecated) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            base_condition_key: (Block List, Deprecated) Fallback for not yet known type (see below for nested schema)
            bitness: (Block List) Comparison for BITNESS attributes (see below for nested schema)
            bitness_comparision: (Block List, Deprecated) Comparison for BITNESS attributes (see below for nested schema)
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or insensitive (false)
            cloud_type: (Block List) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            cloud_type_comparison: (Block List, Deprecated) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            comparison: (Block List) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            condition: (Block List) A conditions for the metric usage (see below for nested schema)
            conditions: (Block List) A list of matching conditions of the rule.  The rule applies only if all conditions are fulfilled (see below for nested schema)
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the CONTEXTLESS value
            custom_application_type: (Block List) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_application_type_comparison: (Block List, Deprecated) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_host_metadata: (Block List) Key for Custom Host Metadata (see below for nested schema)
            custom_host_metadata_condition_key: (Block List, Deprecated) Key for Custom Host Metadata (see below for nested schema)
            custom_process_metadata: (Block List) Key for Custom Process Metadata (see below for nested schema)
            custom_process_metadata_condition_key: (Block List, Deprecated) Key for Custom Process Metadata (see below for nested schema)
            database_topology: (Block List) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            database_topology_comparison: (Block List, Deprecated) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            dcrum_decoder: (Block List) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dcrum_decoder_comparison: (Block List, Deprecated) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dynamic_key: '(Block List, Min: 1, Max: 1) The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key (see below for nested schema)'
            enabled: (Boolean) The rule is enabled (true) or disabled (false)
            entity: (Block List) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_id_comparison: (Block List, Deprecated) Comparison for ENTITY_ID attributes (see below for nested schema)
            format: '(String) The name to be assigned to matching entities. You can use the following placeholders here:  * {AwsAutoScalingGroup:Name}  * {AwsAvailabilityZone:Name}  * {AwsElasticLoadBalancer:Name}  * {AwsRelationalDatabaseService:DBName}  * {AwsRelationalDatabaseService:Endpoint}  * {AwsRelationalDatabaseService:Engine}  * {AwsRelationalDatabaseService:InstanceClass}  * {AwsRelationalDatabaseService:Name}  * {AwsRelationalDatabaseService:Port}  * {AzureRegion:Name}  * {AzureScaleSet:Name}  * {AzureVm:Name}  * {CloudFoundryOrganization:Name}  * {CustomDevice:DetectedName}  * {CustomDevice:DnsName}  * {CustomDevice:IpAddress}  * {CustomDevice:Port}  * {DockerContainerGroupInstance:ContainerName}  * {DockerContainerGroupInstance:FullImageName}  * {DockerContainerGroupInstance:ImageVersion}  * {DockerContainerGroupInstance:StrippedImageName}  * {ESXIHost:HardwareModel}  * {ESXIHost:HardwareVendor}  * {ESXIHost:Name}  * {ESXIHost:ProductName}  * {ESXIHost:ProductVersion}  * {Ec2Instance:AmiId}  * {Ec2Instance:BeanstalkEnvironmentName}  * {Ec2Instance:InstanceId}  * {Ec2Instance:InstanceType}  * {Ec2Instance:LocalHostName}  * {Ec2Instance:Name}  * {Ec2Instance:PublicHostName}  * {Ec2Instance:SecurityGroup}  * {GoogleComputeInstance:Id}  * {GoogleComputeInstance:IpAddresses}  * {GoogleComputeInstance:MachineType}  * {GoogleComputeInstance:Name}  * {GoogleComputeInstance:ProjectId}  * {GoogleComputeInstance:Project}  * {Host:AWSNameTag}  * {Host:AixLogicalCpuCount}  * {Host:AzureHostName}  * {Host:AzureSiteName}  * {Host:BoshDeploymentId}  * {Host:BoshInstanceId}  * {Host:BoshInstanceName}  * {Host:BoshName}  * {Host:BoshStemcellVersion}  * {Host:CpuCores}  * {Host:DetectedName}  * {Host:Environment:AppName}  * {Host:Environment:BoshReleaseVersion}  * {Host:Environment:Environment}  * {Host:Environment:Link}  * {Host:Environment:Organization}  * {Host:Environment:Owner}  * {Host:Environment:Support}  * {Host:IpAddress}  * {Host:LogicalCpuCores}  * {Host:OneAgentCustomHostName}  * {Host:OperatingSystemVersion}  * {Host:PaasMemoryLimit}  * {HostGroup:Name}  * {KubernetesCluster:Name}  * {KubernetesNode:DetectedName}  * {OpenstackAvailabilityZone:Name}  * {OpenstackZone:Name}  * {OpenstackComputeNode:Name}  * {OpenstackProject:Name}  * {OpenstackVm:InstanceType}  * {OpenstackVm:Name}  * {OpenstackVm:SecurityGroup}  * {ProcessGroup:AmazonECRImageAccountId}  * {ProcessGroup:AmazonECRImageRegion}  * {ProcessGroup:AmazonECSCluster}  * {ProcessGroup:AmazonECSContainerName}  * {ProcessGroup:AmazonECSFamily}  * {ProcessGroup:AmazonECSRevision}  * {ProcessGroup:AmazonLambdaFunctionName}  * {ProcessGroup:AmazonRegion}  * {ProcessGroup:ApacheConfigPath}  * {ProcessGroup:ApacheSparkMasterIpAddress}  * {ProcessGroup:AspDotNetCoreApplicationPath}  * {ProcessGroup:AspDotNetCoreApplicationPath}  * {ProcessGroup:AzureHostName}  * {ProcessGroup:AzureSiteName}  * {ProcessGroup:CassandraClusterName}  * {ProcessGroup:CatalinaBase}  * {ProcessGroup:CatalinaHome}  * {ProcessGroup:CloudFoundryAppId}  * {ProcessGroup:CloudFoundryAppName}  * {ProcessGroup:CloudFoundryInstanceIndex}  * {ProcessGroup:CloudFoundrySpaceId}  * {ProcessGroup:CloudFoundrySpaceName}  * {ProcessGroup:ColdFusionJvmConfigFile}  * {ProcessGroup:ColdFusionServiceName}  * {ProcessGroup:CommandLineArgs}  * {ProcessGroup:DetectedName}  * {ProcessGroup:DotNetCommandPath}  * {ProcessGroup:DotNetCommand}  * {ProcessGroup:DotNetClusterId}  * {ProcessGroup:DotNetNodeId}  * {ProcessGroup:ElasticsearchClusterName}  * {ProcessGroup:ElasticsearchNodeName}  * {ProcessGroup:EquinoxConfigPath}  * {ProcessGroup:ExeName}  * {ProcessGroup:ExePath}  * {ProcessGroup:GlassFishDomainName}  * {ProcessGroup:GlassFishInstanceName}  * {ProcessGroup:GoogleAppEngineInstance}  * {ProcessGroup:GoogleAppEngineService}  * {ProcessGroup:GoogleCloudProject}  * {ProcessGroup:HybrisBinDirectory}  * {ProcessGroup:HybrisConfigDirectory}  * {ProcessGroup:HybrisConfigDirectory}  * {ProcessGroup:HybrisDataDirectory}  * {ProcessGroup:IBMCicsRegion}  * {ProcessGroup:IBMCtgName}  * {ProcessGroup:IBMImsConnectRegion}  * {ProcessGroup:IBMImsControlRegion}  * {ProcessGroup:IBMImsMessageProcessingRegion}  * {ProcessGroup:IBMImsSoapGwName}  * {ProcessGroup:IBMIntegrationNodeName}  * {ProcessGroup:IBMIntegrationServerName}  * {ProcessGroup:IISAppPool}  * {ProcessGroup:IISRoleName}  * {ProcessGroup:JbossHome}  * {ProcessGroup:JbossMode}  * {ProcessGroup:JbossServerName}  * {ProcessGroup:JavaJarFile}  * {ProcessGroup:JavaJarPath}  * {ProcessGroup:JavaMainCLass}  * {ProcessGroup:KubernetesBasePodName}  * {ProcessGroup:KubernetesContainerName}  * {ProcessGroup:KubernetesFullPodName}  * {ProcessGroup:KubernetesNamespace}  * {ProcessGroup:KubernetesPodUid}  * {ProcessGroup:MssqlInstanceName}  * {ProcessGroup:NodeJsAppBaseDirectory}  * {ProcessGroup:NodeJsAppName}  * {ProcessGroup:NodeJsScriptName}  * {ProcessGroup:OracleSid}  * {ProcessGroup:PHPScriptPath}  * {ProcessGroup:PHPWorkingDirectory}  * {ProcessGroup:Ports}  * {ProcessGroup:RubyAppRootPath}  * {ProcessGroup:RubyScriptPath}  * {ProcessGroup:SoftwareAGInstallRoot}  * {ProcessGroup:SoftwareAGProductPropertyName}  * {ProcessGroup:SpringBootAppName}  * {ProcessGroup:SpringBootProfileName}  * {ProcessGroup:SpringBootStartupClass}  * {ProcessGroup:TIBCOBusinessWorksAppNodeName}  * {ProcessGroup:TIBCOBusinessWorksAppSpaceName}  * {ProcessGroup:TIBCOBusinessWorksCeAppName}  * {ProcessGroup:TIBCOBusinessWorksCeVersion}  * {ProcessGroup:TIBCOBusinessWorksDomainName}  * {ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}  * {ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}  * {ProcessGroup:TIBCOBusinessWorksHome}  * {ProcessGroup:VarnishInstanceName}  * {ProcessGroup:WebLogicClusterName}  * {ProcessGroup:WebLogicDomainName}  * {ProcessGroup:WebLogicHome}  * {ProcessGroup:WebLogicName}  * {ProcessGroup:WebSphereCellName}  * {ProcessGroup:WebSphereClusterName}  * {ProcessGroup:WebSphereNodeName}  * {ProcessGroup:WebSphereServerName}  * {ProcessGroup:ActorSystem}  * {Service:STGServerName}  * {Service:DatabaseHostName}  * {Service:DatabaseName}  * {Service:DatabaseVendor}  * {Service:DetectedName}  * {Service:EndpointPath}  * {Service:EndpointPathGatewayUrl}  * {Service:IIBApplicationName}  * {Service:MessageListenerClassName}  * {Service:Port}  * {Service:PublicDomainName}  * {Service:RemoteEndpoint}  * {Service:RemoteName}  * {Service:WebApplicationId}  * {Service:WebContextRoot}  * {Service:WebServerName}  * {Service:WebServiceNamespace}  * {Service:WebServiceName}  * {VmwareDatacenter:Name}  * `{VmwareVm:Name}'
            host_tech: (Block List) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            hypervisor: (Block List) Comparison for HYPERVISOR_TYPE attributes (see below for nested schema)
            hypervisor_type_comparision: (Block List, Deprecated) hypervisor_type_comparision is deprecated. Use hypervisor instead (see below for nested schema)
            id: (String) The ID of this resource.
            indexed_name: (Block List) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_name_comparison: (Block List, Deprecated) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_string: (Block List) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_string_comparison: (Block List, Deprecated) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_tag: (Block List) Comparison for INDEXED_TAG attributes (see below for nested schema)
            indexed_tag_comparison: (Block List, Deprecated) Comparison for INDEXED_TAG attributes (see below for nested schema)
            integer: (Block List) Comparison for INTEGER attributes (see below for nested schema)
            integer_comparison: (Block List, Deprecated) Comparison for INTEGER attributes (see below for nested schema)
            ipaddress: (Block List) Comparison for IP_ADDRESS attributes (see below for nested schema)
            ipaddress_comparison: (Block List, Deprecated) Comparison for IP_ADDRESS attributes (see below for nested schema)
            key: (Block List) Fallback for not yet known type (see below for nested schema)
            mobile_platform: (Block List) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            mobile_platform_comparison: (Block List, Deprecated) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            name: (String) The name of the rule
            negate: (Boolean) Reverses the operator. For example it turns the begins with into does not begin with
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true
            os_arch: (Block List) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            os_type: (Block List) Comparison for OS_TYPE attributes (see below for nested schema)
            osarchitecture_comparison: (Block List, Deprecated) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            ostype_comparison: (Block List, Deprecated) Comparison for OS_TYPE attributes (see below for nested schema)
            paas_type: (Block List) Comparison for PAAS_TYPE attributes (see below for nested schema)
            paas_type_comparison: (Block List, Deprecated) Comparison for PAAS_TYPE attributes (see below for nested schema)
            process_metadata: (Block List) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            process_metadata_condition_key: (Block List, Deprecated) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            service_topology: (Block List) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_topology_comparison: (Block List, Deprecated) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_type: (Block List) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            service_type_comparison: (Block List, Deprecated) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            simple_host_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            simple_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            source: (String) The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
            string: (Block List) Comparison for STRING attributes (see below for nested schema)
            string_comparison: (Block List, Deprecated) Comparison for STRING attributes (see below for nested schema)
            string_condition_key: (Block List, Deprecated) The key for dynamic attributes of the STRING type (see below for nested schema)
            string_key: (Block List) The key for dynamic attributes of the STRING type (see below for nested schema)
            synthetic_engine: (Block List) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            synthetic_engine_type_comparison: (Block List, Deprecated) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            tag: (Block List) Comparison for TAG attributes (see below for nested schema)
            tag_comparison: (Block List, Deprecated) Comparison for TAG attributes (see below for nested schema)
            tech: (Block List) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_processgroup_naming: downloads all existing process group naming configuration
            type: (String, Deprecated) if specified, needs to be APPLICATION_TYPE
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to compare to
            verbatim_type: (String) Non-predefined technology, use for custom technologies
        importStatements: []
    dynatrace_queue_manager Resource - terraform-provider-dynatrace:
        subCategory: Mainframe
        description: The resource
        name: dynatrace_queue_manager Resource - terraform-provider-dynatrace
        title: dynatrace_queue_manager Resource - terraform-provider-dynatrace
        argumentDocs:
            alias_queue: (Block List) Alias queue definitions for queue manager (see below for nested schema)
            alias_queue_name: (String) The name of the alias queue
            alias_queues: (Block List) The alias queues in the queue manager (see below for nested schema)
            base_queue_name: (String) The name of the base queue
            builtin:ibmmq.queue-managers: )
            cluster_queue: (Block List) Cluster queue definitions for queue manager (see below for nested schema)
            cluster_queues: (Block List) The alias queues in the queue manager (see below for nested schema)
            cluster_visibility: (Set of String) Name of the cluster(s) this alias should be visible in
            clusters: (Set of String) Name of the cluster(s) this queue manager is part of
            id: (String) The ID of this resource.
            local_queue_name: (String) The name of the local queue
            name: (String) The name of the queue manager
            remote_queue: (Block List) Remote queue definitions for queue manager (see below for nested schema)
            remote_queue_manager: (String) The name of the remote queue manager
            remote_queue_name: (String) The name of the remote queue
            remote_queues: (Block List) The alias queues in the queue manager (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_queue_manager: downloads all existing queue manager configuration
        importStatements: []
    dynatrace_queue_sharing_groups Resource - terraform-provider-dynatrace:
        subCategory: Mainframe
        description: The resource
        name: dynatrace_queue_sharing_groups Resource - terraform-provider-dynatrace
        title: dynatrace_queue_sharing_groups Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:ibmmq.queue-sharing-group: )
            id: (String) The ID of this resource.
            name: (String) Queue sharing group name
            queue_managers: (Set of String) Queue managers
            shared_queues: (Set of String) Shared queues
            terraform-provider-dynatrace -export dynatrace_queue_sharing_groups: downloads all existing IBM MQ queue sharing group configuration
        importStatements: []
    dynatrace_remote_environments Resource - terraform-provider-dynatrace:
        subCategory: Integrations
        description: The resource
        name: dynatrace_remote_environments Resource - terraform-provider-dynatrace
        title: dynatrace_remote_environments Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:remote.environment: )
            id: (String) The ID of this resource.
            name: (String) Name
            network_scope: '(String) Possible Values: CLUSTER, EXTERNAL, INTERNAL'
            terraform-provider-dynatrace -export dynatrace_remote_environments: downloads all existing remote Dynatrace environment configuration
            token: (String, Sensitive) Provide a valid token created on the remote environment.
            uri: (String) Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
        importStatements: []
    dynatrace_request_attribute Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_request_attribute Resource - terraform-provider-dynatrace
        title: dynatrace_request_attribute Resource - terraform-provider-dynatrace
        argumentDocs:
            aggregation: (String) Aggregation type for the request values
            argument_index: (Number) The index of the argument to capture. Set 0 to capture the return value, 1 or higher to capture a mehtod argument.   Required if the capture is set to ARGUMENT.  Not applicable in other cases
            argument_types: (List of String) Configuration of a method to be captured
            capture: (String) What to capture from the method
            capturing_and_storage_location: '(String) Specifies the location where the values are captured and stored.  Required if the source is one of the following: GET_PARAMETER, URI, REQUEST_HEADER, RESPONSE_HEADER.   Not applicable in other cases.   If the source value is REQUEST_HEADER or RESPONSE_HEADER, the CAPTURE_AND_STORE_ON_BOTH location is not allowed'
            cics_sdk_method_node_condition: '(Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)'
            class_name: (String) The class name where the method to capture resides.   Either this or the fileName must be set
            confidential: (Boolean) Confidential data flag. Set true to treat the captured data as confidential
            data_sources: (Block List) The list of data sources (see below for nested schema)
            data_type: (String) The data type of the request attribute
            deep_object_access: '(String) The getter chain to apply to the captured object. It is required in one of the following cases:  The capture is set to THIS.    The capture is set to ARGUMENT, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases'
            delimiter: (String) The delimiter string
            enabled: (Boolean) The request attribute is enabled (true) or disabled (false)
            end_delimiter: (String) The end-delimiter string.   Required if the position value is BETWEEN. Otherwise not allowed
            extract_substring: '(Block List, Max: 1) Preprocess by extracting a substring from the original value (see below for nested schema)'
            file_name: (String) The file name where the method to capture resides.   Either this or className must be set
            file_name_matcher: (String) The operator of the comparison. If not set, EQUALS is used
            host_group: (String) Only applies to this host group
            id: (String) The ID of this resource.
            iib_label_method_node_condition: '(Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)'
            iib_method_node_condition: '(Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)'
            iib_node_type: '(String) The IBM integration bus node type for which the value is captured.  This or iibMethodNodeCondition is required if the source is: IIB_NODE.  Not applicable in other cases'
            method: '(Block List, Max: 1) Configuration of a method to be captured (see below for nested schema)'
            method_name: (String) The name of the method to capture
            methods: (Block List) The method specification if the source value is METHOD_PARAM.   Not applicable in other cases (see below for nested schema)
            modifiers: (Set of String) The modifiers of the method to capture
            name: (String) The name of the request attribute
            negate: (Boolean) Negate the comparison
            normalization: (String) String values transformation.   If the dataType is not string, set the Original here
            operator: (String) Operator comparing the extracted value to the comparison value
            parameter_name: '(String) The name of the web request parameter to capture.  Required if the source is one of the following: POST_PARAMETER, GET_PARAMETER, REQUEST_HEADER, RESPONSE_HEADER, CUSTOM_ATTRIBUTE.  Not applicable in other cases'
            position: (String) The position of the extracted string relative to delimiters
            process_group: (String) Only applies to this process group. Note that this can't be transferred between different clusters or environments
            return_type: (String) The return type
            scope: '(Block List, Max: 1) Conditions for data capturing (see below for nested schema)'
            service_technology: (String) Only applies to this service technology
            session_attribute_technology: (String) The technology of the session attribute to capture if the source value is SESSION_ATTRIBUTE.
            skip_personal_data_masking: '(Boolean) Personal data masking flag. Set true to skip masking.   Warning: This will potentially access personalized data'
            source: (String) The source of the attribute to capture. Works in conjunction with parameterName or methods and technology
            split_at: (String) Split (preprocessed) string values at this separator
            tag_of_process_group: (String) Only apply to process groups matching this tag
            technology: (String) The technology of the method to capture if the source value is METHOD_PARAM.
            terraform-provider-dynatrace -export dynatrace_request_attribute: downloads all existing request attribute configuration
            trim: (Boolean) Prune Whitespaces. Defaults to false
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to compare to
            value_condition: '(Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)'
            value_extractor_regex: (String) Extract value from captured data per regex
            value_processing: '(Block List, Max: 1) Process values as specified (see below for nested schema)'
            visibility: (String) The visibility of the method to capture
        importStatements: []
    dynatrace_request_naming Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_request_naming Resource - terraform-provider-dynatrace
        title: dynatrace_request_naming Resource - terraform-provider-dynatrace
        argumentDocs:
            BETWEEN_DELIMITER: ': The opening delimiter string to look for.'
            REGEX_EXTRACTION: ': The regular expression.'
            aggregation: (String) Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute, when useFromChildCalls is true. For the COUNT aggregation, the kind field is not applicable. Possible values are COUNT, FIRST and LAST.
            attribute: (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
            boolean: '(Block List, Max: 1) Boolean Comparison for BOOLEAN attributes (see below for nested schema)'
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or not case-sensitive (false)
            comparison: '(Block List, Min: 1, Max: 1) Type-specific comparison for attributes (see below for nested schema)'
            condition: (Block List) A conditions for the metric usage (see below for nested schema)
            conditions: '(Block List, Min: 1, Max: 1) The set of conditions for the request naming rule usage.'
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
            delimiter_or_regex: '(String) Depending on the kind value:'
            enabled: (Boolean) The rule is enabled (true) or disabled (false)
            end_delimiter: (String) The closing delimiter string to look for. Required if the kind value is BETWEEN_DELIMITER. Not applicable otherwise
            esb_input_node_type: '(Block List, Max: 1) Type-specific comparison information for attributes of type ''ESB_INPUT_NODE_TYPE'' (see below for nested schema)'
            failed_state: '(Block List, Max: 1) Comparison for FAILED_STATE attributes (see below for nested schema)'
            failure_reason: '(Block List, Max: 1) Comparison for FAILURE_REASON attributes (see below for nested schema)'
            fast_string: '(Block List, Max: 1) Comparison for FAST_STRING attributes. Use it for all service property attributes (see below for nested schema)'
            flaw_state: '(Block List, Max: 1) Comparison for FLAW_STATE attributes (see below for nested schema)'
            generic: '(Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)'
            http_method: '(Block List, Max: 1) Comparison for HTTP_METHOD attributes (see below for nested schema)'
            http_status_class: '(Block List, Max: 1) Comparison for HTTP_STATUS_CLASS attributes (see below for nested schema)'
            id: (String) The ID of this resource.
            iib_input_node_type: '(Block List, Max: 1) Comparison for IIB_INPUT_NODE_TYPE attributes (see below for nested schema)'
            key: (String) The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
            kind: "(String) The type of extraction. Defines either usage of regular expression (regex) or the position of request attribute value to be extracted. When the attribute is SERVICE_REQUEST_ATTRIBUTE attribute and aggregation is COUNT, needs to be set to ORIGINAL_TEXT. Possible values are \tAFTER_DELIMITER, BEFORE_DELIMITER, BETWEEN_DELIMITER, ORIGINAL_TEXT and REGEX_EXTRACTION"
            management_zone: (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
            management_zones: (Set of String) Specifies the management zones for which this rule should be applied
            match_on_child_calls: (Boolean) If true, the request attribute is matched on child service calls. Default is false
            name: (String) The name of the placeholder. Use it in the naming pattern as {name}
            naming_pattern: (String) The name to be assigned to matching requests
            negate: (Boolean) Reverse the comparison operator. For example, it turns equals into does not equal
            normalization: (String) The format of the extracted string. Possible values are ORIGINAL, TO_LOWER_CASE and TO_UPPER_CASE
            number: '(Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)'
            number_request_attribute: '(Block List, Max: 1) Comparison for NUMBER_REQUEST_ATTRIBUTE attributes (see below for nested schema)'
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
            placeholder: (Block List) A custom placeholder to be used in a dimension value pattern (see below for nested schema)
            placeholders: '(Block List, Max: 1) The list of custom placeholders to be used in the naming pattern.'
            request_attribute: (String) No documentation available for this attribute
            service_tag: '(Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)'
            service_type: '(Block List, Max: 1) Comparison for SERVICE_TYPE attributes (see below for nested schema)'
            source: '(Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)'
            string: '(Block List, Max: 1) Comparison for STRING attributes (see below for nested schema)'
            string_request_attribute: '(Block List, Max: 1) Comparison for STRING_REQUEST_ATTRIBUTE attributes (see below for nested schema)'
            tag: '(Block List, Max: 1) Comparison for TAG attributes (see below for nested schema)'
            tag_key: '(Block List, Max: 1) has no documentation (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_request_naming: downloads all existing request naming configuration
            type: (String) Defines the actual set of fields depending on the value
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            use_from_child_calls: (Boolean) If true request attribute will be taken from a child service call. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute. Defaults to false
            value: (Boolean) The value to compare to
            values: (Set of Boolean) The values to compare to
            zos_call_type: '(Block List, Max: 1) Comparison for ZOS_CALL_TYPE attributes (see below for nested schema)'
        importStatements: []
    dynatrace_request_namings Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_request_namings Resource - terraform-provider-dynatrace
        title: dynatrace_request_namings Resource - terraform-provider-dynatrace
        argumentDocs:
            id: (String) The ID of this resource.
            ids: (List of String) The IDs of the request namings in the order they should be taken into consideration
        importStatements: []
    dynatrace_resource_attributes Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_resource_attributes Resource - terraform-provider-dynatrace
        title: dynatrace_resource_attributes Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute_key: (String) Attribute key service.name is automatically captured by default
            builtin:resource-attribute: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            keys: '(Block List, Max: 1) Attribute key allow-list (see below for nested schema)'
            masking: '(String) Possible Values: MASK_ENTIRE_VALUE, MASK_ONLY_CONFIDENTIAL_DATA, NOT_MASKED'
            rule: '(Block Set, Min: 1) (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_resource_attributes: downloads all existing resource attribute configuration
        importStatements: []
    dynatrace_rum_advanced_correlation Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_rum_advanced_correlation Resource - terraform-provider-dynatrace
        title: dynatrace_rum_advanced_correlation Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.resource-timing-origins: )
            id: (String) The ID of this resource.
            matcher: '(String) Possible Values: CONTAINS, ENDS_WITH, EQUALS, STARTS_WITH'
            pattern: (String) Pattern
            terraform-provider-dynatrace -export dynatrace_rum_advanced_correlation: downloads all existing RUM advanced correlation configuration
        importStatements: []
    dynatrace_rum_host_headers Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_rum_host_headers Resource - terraform-provider-dynatrace
        title: dynatrace_rum_host_headers Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.host-headers: )
            header_name: (String) HTTP header format
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_rum_host_headers: downloads all existing host name HTTP request header configuration
        importStatements: []
    dynatrace_rum_ip_determination Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_rum_ip_determination Resource - terraform-provider-dynatrace
        title: dynatrace_rum_ip_determination Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.ip-determination: )
            header_name: (String) Client IP header name
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_rum_ip_determination: downloads all existing client IP determination configuration
        importStatements: []
    dynatrace_rum_ip_locations Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_rum_ip_locations Resource - terraform-provider-dynatrace
        title: dynatrace_rum_ip_locations Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.ip-mappings: )
            city: (String) The city name of the location.
            country_code: (String) The country code of the location.
            id: (String) The ID of this resource.
            ip: (String) Single IP or IP range start address
            ip_to: (String) IP range end
            latitude: (Number) Latitude
            longitude: (Number) Longitude
            region_code: (String) The region code of the location.
            terraform-provider-dynatrace -export dynatrace_rum_ip_locations: downloads all existing IP address mapping configuration
        importStatements: []
    dynatrace_rum_overload_prevention Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_rum_overload_prevention Resource - terraform-provider-dynatrace
        title: dynatrace_rum_overload_prevention Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.overload-prevention: )
            id: (String) The ID of this resource.
            overload_prevention_limit: (Number) Once this limit is reached, Dynatrace throttles the number of captured user sessions.
            terraform-provider-dynatrace -export dynatrace_rum_overload_prevention: downloads all existing real user monitoring overload prevention configuration
        importStatements: []
    dynatrace_rum_provider_breakdown Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_rum_provider_breakdown Resource - terraform-provider-dynatrace
        title: dynatrace_rum_provider_breakdown Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.provider-breakdown: )
            domain_name_pattern: '(Block Set, Min: 1) (see below for nested schema)'
            domain_name_pattern_list: '(Block List, Min: 1, Max: 1) Domain name pattern (see below for nested schema)'
            icon_url: (String) Specify an URL for the provider's brand icon
            id: (String) The ID of this resource.
            pattern: (String) Please type at least part of this content provider's URL. Asterisks (*) can be used as wildcard characters.
            report_public_improvement: (Boolean) Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.
            resource_name: (String) Resource name
            resource_type: '(String) Possible Values: FirstParty, ThirdParty, Cdn'
            terraform-provider-dynatrace -export dynatrace_rum_provider_breakdown: downloads all existing provider breakdown configuration
        importStatements: []
    dynatrace_service_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_service_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_service_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute: (Number) Absolute increase of failing service calls to trigger an alert, %
            auto: '(Block List, Max: 1) Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)'
            drops: '(Block List, Max: 1) The configuration of traffic drops detection (see below for nested schema)'
            failure_rates: '(Block List, Max: 1) Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted. (see below for nested schema)'
            id: (String) The ID of this resource.
            load: '(Block List, Max: 1) The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted. (see below for nested schema)'
            load_drops: '(Block List, Max: 1) The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted. (see below for nested schema)'
            milliseconds: (Number) Alert if the response time degrades by more than X milliseconds
            minutes: (Number) Alert if the service stays in abnormal state for at least X minutes
            percent: (Number) Alert if the observed load is more than X % of the expected value
            relative: (Number) Relative increase of failing service calls to trigger an alert, %
            response_times: '(Block List, Max: 1) Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted. (see below for nested schema)'
            sensitivity: (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
            slowest_milliseconds: (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
            slowest_percent: (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
            spikes: '(Block List, Max: 1) The configuration of traffic spikes detection (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_service_anomalies: downloads all existing service anomaly detection configuration
            threshold: (Number) Failure rate during any 5-minute period to trigger an alert, %
            thresholds: '(Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)'
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
        importStatements: []
    dynatrace_service_anomalies_v2 Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_service_anomalies_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_service_anomalies_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            absolute_increase: (Number) Absolute threshold
            auto_detection: '(Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)'
            builtin:anomaly-detection.services: )
            degradation_milliseconds: (Number) Absolute threshold
            degradation_percent: (Number) Relative threshold
            detection_mode: '(String) Possible Values: Auto, Fixed'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            failure_rate: '(Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)'
            fixed_detection: '(Block List, Max: 1) Alert if a given failure rate is exceeded during any 5-minute-period (see below for nested schema)'
            id: (String) The ID of this resource.
            load_drop_percent: (Number) Threshold
            load_drops: '(Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time: (see below for nested schema)'
            load_spike_percent: (Number) Threshold
            load_spikes: '(Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time: (see below for nested schema)'
            minutes_abnormal_state: (Number) Only alert if the abnormal state remains for at least
            over_alerting_protection: '(Block List, Min: 1, Max: 1) Avoid over-alerting (see below for nested schema)'
            relative_increase: (Number) Relative threshold
            requests_per_minute: (Number) Only alert if there are at least
            response_time: '(Block List, Min: 1, Max: 1) Response time (see below for nested schema)'
            response_time_all: '(Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)'
            response_time_slowest: '(Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)'
            scope: (String) The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
            sensitivity: '(String) Possible Values: High, Low, Medium'
            slowest_degradation_milliseconds: (Number) Absolute threshold
            slowest_degradation_percent: (Number) Relative threshold
            terraform-provider-dynatrace -export dynatrace_service_anomalies_v2: downloads all existing service anomaly detection configuration
            threshold: (Number) no documentation available
        importStatements: []
    dynatrace_service_external_web_request Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_service_external_web_request Resource - terraform-provider-dynatrace
        title: dynatrace_service_external_web_request Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: '(Block List, Min: 1, Max: 1) Application identifier (see below for nested schema)'
            attribute: (String) Take the value of this attribute
            builtin:service-detection.external-web-request: )
            compare_operation_type: (String) Apply this operation
            condition: '(Block List, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)'
            context_root: '(Block List, Min: 1, Max: 1) URL context root (see below for nested schema)'
            contribution_type: '(String) Possible Values: OriginalValue, OverrideValue, TransformValue'
            copy_from_host_name: (Boolean) Use the detected host name instead of the request's domain name.
            description: (String) Description
            enable_id_contributor: (Boolean) Transform this value before letting it contribute to the Service Id
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            framework: (Set of String) Technology
            id: (String) The ID of this resource.
            id_contributors: '(Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch. (see below for nested schema)'
            ignore_case: (Boolean) Ignore case sensitivity for texts.
            include_hex_numbers: (Boolean) include hexadecimal numbers
            int_value: (Number) Value
            int_values: (Set of Number) Values
            ip_range_from: (String) From
            ip_range_to: (String) To
            management_zones: '(Set of String) Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See here'
            min_digit_count: (Number) min digit count
            name: (String) Rule name
            port_for_service_id: (Boolean) Let the port contribute to the Service Id
            prefix: (String) no documentation available
            public_domain_name: '(Block List, Min: 1, Max: 1) Public domain name (see below for nested schema)'
            replacement_value: (String) replacement
            segment_count: (Number) How many segments should be taken.
            select_index: (Number) select index
            service_id_contributor: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            split_delimiter: (String) split by
            suffix: (String) no documentation available
            tag_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            take_from_end: (Boolean) take from end
            terraform-provider-dynatrace -export dynatrace_service_external_web_request: downloads all existing service detection rules for external web requests
            text_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            transformation: '(Block List, Min: 1) (see below for nested schema)'
            transformation_type: '(String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS'
            transformations: '(Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)'
            value: (String) no documentation available
            value_override: '(Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)'
        importStatements: []
    dynatrace_service_external_web_service Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_service_external_web_service Resource - terraform-provider-dynatrace
        title: dynatrace_service_external_web_service Resource - terraform-provider-dynatrace
        argumentDocs:
            attribute: (String) Take the value of this attribute
            builtin:service-detection.external-web-service: )
            compare_operation_type: (String) Apply this operation
            condition: '(Block List, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)'
            contribution_type: '(String) Possible Values: OriginalValue, OverrideValue, TransformValue'
            description: (String) Description
            detect_as_web_request_service: (Boolean) Detect the matching requests as web request services instead of web services.
            enable_id_contributor: (Boolean) Transform this value before letting it contribute to the Service Id
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            framework: (Set of String) Technology
            id: (String) The ID of this resource.
            id_contributors: '(Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch. (see below for nested schema)'
            ignore_case: (Boolean) Ignore case sensitivity for texts.
            include_hex_numbers: (Boolean) include hexadecimal numbers
            int_value: (Number) Value
            int_values: (Set of Number) Values
            ip_range_from: (String) From
            ip_range_to: (String) To
            management_zones: '(Set of String) Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See here'
            min_digit_count: (Number) min digit count
            name: (String) Rule name
            port_for_service_id: (Boolean) Let the port contribute to the Service Id
            prefix: (String) no documentation available
            replacement_value: (String) replacement
            segment_count: (Number) How many segments should be taken.
            select_index: (Number) select index
            service_id_contributor: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            split_delimiter: (String) split by
            suffix: (String) no documentation available
            tag_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            take_from_end: (Boolean) take from end
            terraform-provider-dynatrace -export dynatrace_service_external_web_service: downloads all existing service detection rules for external web services
            text_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            transformation: '(Block List, Min: 1) (see below for nested schema)'
            transformation_type: '(String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS'
            transformations: '(Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)'
            url_path: '(Block List, Max: 1) URL path (see below for nested schema)'
            value: (String) no documentation available
            value_override: '(Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)'
        importStatements: []
    dynatrace_service_failure Resource - terraform-provider-dynatrace:
        subCategory: Failure Detection
        description: The resource
        name: dynatrace_service_failure Resource - terraform-provider-dynatrace
        title: dynatrace_service_failure Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:failure-detection.service.general-parameters: )
            case_sensitive: (Boolean) Case sensitive
            class_pattern: (String) The pattern will match if it is contained within the actual class name.
            compare_operation_type: (String) Apply this comparison
            condition: '(Block List, Min: 1, Max: 1) Request attribute condition (see below for nested schema)'
            custom_error_rule: '(Block Set, Min: 1) (see below for nested schema)'
            custom_error_rules: '(Block List, Max: 1) Some custom error situations are only detectable via a return value or other means. To support such cases, define a request attribute that captures the required data. Then define a custom error rule that determines if the request has failed based on the value of the request attribute. (see below for nested schema)'
            custom_handled_exception: '(Block Set, Min: 1) (see below for nested schema)'
            custom_handled_exceptions: '(Block List, Max: 1) There may be situations where your application code handles exceptions gracefully in a manner that these failures aren''t detected by Dynatrace. Use this setting to define specific gracefully-handled exceptions that should be treated as service failures. (see below for nested schema)'
            double_value: (Number) Value
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            exception_rules: '(Block List, Max: 1) Customize failure detection for specific exceptions and errors (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_all_exceptions: (Boolean) Ignore all exceptions
            ignore_span_failure_detection: (Boolean) Ignore span failure detection
            ignored_exceptions: '(Block List, Max: 1) Some exceptions that are thrown by legacy or 3rd-party code indicate a specific response, not an error. Use this setting to instruct Dynatrace to treat such exceptions as non-failed requests.. If an exception matching any of the defined patterns occurs in a request, it will not be considered as a failure. Other exceptions occurring at the same request might still mark the request as failed. (see below for nested schema)'
            int_value: (Number) Value
            message_pattern: (String) Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
            request_attribute: (String) Request attribute
            service_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            success_forcing_exceptions: '(Block List, Max: 1) Define exceptions which indicate that a service call should not be considered as failed. E.g. an exception indicating that the client aborted the operation.. If an exception matching any of the defined patterns occurs on the entry node of the service, it will be considered successful. Compared to ignored exceptions, the request will be considered successful even if other exceptions occur in the same request. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_service_failure: downloads all existing service-level general failure detection parameters
            text_value: (String) Value
        importStatements: []
    dynatrace_service_full_web_request Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_service_full_web_request Resource - terraform-provider-dynatrace
        title: dynatrace_service_full_web_request Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: '(Block List, Min: 1, Max: 1) Application identifier (see below for nested schema)'
            attribute: (String) Take the value of this attribute
            builtin:service-detection.full-web-request: )
            compare_operation_type: (String) Apply this operation
            condition: '(Block List, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)'
            context_root: '(Block List, Min: 1, Max: 1) The context root is the first segment of the request URL after the Server name. For example, in the www.dynatrace.com/support/help/dynatrace-api/ URL the context root is /support. The context root value can be found on the Service overview page under Properties and tags. (see below for nested schema)'
            contribution_type: '(String) Possible Values: OriginalValue, OverrideValue, TransformValue'
            description: (String) Description
            enable_id_contributor: (Boolean) Transform this value before letting it contribute to the Service Id
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            framework: (Set of String) Technology
            id: (String) The ID of this resource.
            id_contributors: '(Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. All of the Contributors are always applied. (see below for nested schema)'
            ignore_case: (Boolean) Ignore case sensitivity for texts.
            include_hex_numbers: (Boolean) include hexadecimal numbers
            int_value: (Number) Value
            int_values: (Set of Number) Values
            ip_range_from: (String) From
            ip_range_to: (String) To
            management_zones: (Set of String) Define a management zone of the process group for which this service detection rule should be created.
            min_digit_count: (Number) min digit count
            name: (String) Rule name
            prefix: (String) no documentation available
            replacement_value: (String) replacement
            segment_count: (Number) How many segments should be taken.
            select_index: (Number) select index
            server_name: '(Block List, Min: 1, Max: 1) Server Name (see below for nested schema)'
            service_id_contributor: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            split_delimiter: (String) split by
            suffix: (String) no documentation available
            tag_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            take_from_end: (Boolean) take from end
            terraform-provider-dynatrace -export dynatrace_service_full_web_request: downloads all existing service detection rules for full web requests
            text_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            transformation: '(Block List, Min: 1) (see below for nested schema)'
            transformation_type: '(String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS'
            transformations: '(Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)'
            value: (String) no documentation available
            value_override: '(Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)'
        importStatements: []
    dynatrace_service_full_web_service Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_service_full_web_service Resource - terraform-provider-dynatrace
        title: dynatrace_service_full_web_service Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: '(Block List, Max: 1) Application identifier (see below for nested schema)'
            attribute: (String) Take the value of this attribute
            builtin:service-detection.full-web-service: )
            compare_operation_type: (String) Apply this operation
            condition: '(Block List, Min: 1) (see below for nested schema)'
            conditions: '(Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)'
            context_root: '(Block List, Max: 1) The context root is the first segment of the request URL after the Server name. For example, in the www.dynatrace.com/support/help/dynatrace-api/ URL the context root is /support. The context root value can be found on the Service overview page under Properties and tags. (see below for nested schema)'
            contribution_type: '(String) Possible Values: OriginalValue, OverrideValue, TransformValue'
            description: (String) Description
            detect_as_web_request_service: (Boolean) Detect the matching requests as full web services (false) or web request services (true).
            enable_id_contributor: (Boolean) Transform this value before letting it contribute to the Service Id
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            framework: (Set of String) Technology
            id: (String) The ID of this resource.
            id_contributors: '(Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. All of the Contributors are always applied. (see below for nested schema)'
            ignore_case: (Boolean) Ignore case sensitivity for texts.
            include_hex_numbers: (Boolean) include hexadecimal numbers
            int_value: (Number) Value
            int_values: (Set of Number) Values
            ip_range_from: (String) From
            ip_range_to: (String) To
            management_zones: (Set of String) Define a management zone of the process group for which this service detection rule should be created.
            min_digit_count: (Number) min digit count
            name: (String) Rule name
            prefix: (String) no documentation available
            replacement_value: (String) replacement
            segment_count: (Number) How many segments should be taken.
            select_index: (Number) select index
            server_name: '(Block List, Max: 1) Server name (see below for nested schema)'
            service_id_contributor: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            split_delimiter: (String) split by
            suffix: (String) no documentation available
            tag_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            take_from_end: (Boolean) take from end
            terraform-provider-dynatrace -export dynatrace_service_full_web_service: downloads all existing service detection rules for full web services
            text_values: (Set of String) If multiple values are specified, at least one of them must match for the condition to match
            transformation: '(Block List, Min: 1) (see below for nested schema)'
            transformation_type: '(String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS'
            transformations: '(Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)'
            value: (String) no documentation available
            value_override: '(Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)'
            web_service_name: '(Block List, Max: 1) Web service name (see below for nested schema)'
            web_service_namespace: '(Block List, Max: 1) Web service namespace (see below for nested schema)'
        importStatements: []
    dynatrace_service_http_failure Resource - terraform-provider-dynatrace:
        subCategory: Failure Detection
        description: The resource
        name: dynatrace_service_http_failure Resource - terraform-provider-dynatrace
        title: dynatrace_service_http_failure Resource - terraform-provider-dynatrace
        argumentDocs:
            broken_link_domains: (Set of String) If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
            broken_links: '(Block List, Max: 1) HTTP 404 response codes are thrown when a web server can''t find a certain page. 404s are classified as broken links on the client side and therefore aren''t considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures. (see below for nested schema)'
            builtin:failure-detection.service.http-parameters: )
            client_side_errors: (String) HTTP response codes which indicate client side errors
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            fail_on_missing_response_code_client_side: (Boolean) Treat missing HTTP response code as client side error
            fail_on_missing_response_code_server_side: (Boolean) Treat missing HTTP response code as server side errors
            http_404_not_found_failures: (Boolean) Consider 404 HTTP response codes as failures
            http_response_codes: '(Block List, Max: 1) HTTP response codes (see below for nested schema)'
            id: (String) The ID of this resource.
            server_side_errors: (String) HTTP response codes which indicate an error on the server side
            service_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            terraform-provider-dynatrace -export dynatrace_service_http_failure: downloads all existing service-level HTTP failure detection parameters
        importStatements: []
    dynatrace_service_naming Resource - terraform-provider-dynatrace:
        subCategory: Service Monitoring
        description: The resource
        name: dynatrace_service_naming Resource - terraform-provider-dynatrace
        title: dynatrace_service_naming Resource - terraform-provider-dynatrace
        argumentDocs:
            application_type: (Block List) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            application_type_comparison: (Block List, Deprecated) Comparison for APPLICATION_TYPE attributes (see below for nested schema)
            attribute: (String) The attribute to be used for comparision
            azure_compute_mode: (Block List, Deprecated) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_compute_mode_comparison: (Block List) Comparison for AZURE_COMPUTE_MODE attributes (see below for nested schema)
            azure_sku: (Block List) Comparison for AZURE_SKU attributes (see below for nested schema)
            azure_sku_comparision: (Block List, Deprecated) Comparison for AZURE_SKU attributes (see below for nested schema)
            base_comparison_basic: (Block List, Deprecated) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            base_condition_key: (Block List, Deprecated) Fallback for not yet known type (see below for nested schema)
            bitness: (Block List) Comparison for BITNESS attributes (see below for nested schema)
            bitness_comparision: (Block List, Deprecated) Comparison for BITNESS attributes (see below for nested schema)
            case_sensitive: (Boolean) The comparison is case-sensitive (true) or insensitive (false)
            cloud_type: (Block List) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            cloud_type_comparison: (Block List, Deprecated) Comparison for CLOUD_TYPE attributes (see below for nested schema)
            comparison: (Block List) A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property. (see below for nested schema)
            condition: (Block List) A conditions for the metric usage (see below for nested schema)
            conditions: (Block List) A list of matching conditions of the rule.  The rule applies only if all conditions are fulfilled (see below for nested schema)
            context: (String) The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the CONTEXTLESS value
            custom_application_type: (Block List) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_application_type_comparison: (Block List, Deprecated) Comparison for CUSTOM_APPLICATION_TYPE attributes (see below for nested schema)
            custom_host_metadata: (Block List) Key for Custom Host Metadata (see below for nested schema)
            custom_host_metadata_condition_key: (Block List, Deprecated) Key for Custom Host Metadata (see below for nested schema)
            custom_process_metadata: (Block List) Key for Custom Process Metadata (see below for nested schema)
            custom_process_metadata_condition_key: (Block List, Deprecated) Key for Custom Process Metadata (see below for nested schema)
            database_topology: (Block List) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            database_topology_comparison: (Block List, Deprecated) Comparison for DATABASE_TOPOLOGY attributes (see below for nested schema)
            dcrum_decoder: (Block List) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dcrum_decoder_comparison: (Block List, Deprecated) Comparison for DCRUM_DECODER_TYPE attributes (see below for nested schema)
            dynamic_key: '(Block List, Min: 1, Max: 1) The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key (see below for nested schema)'
            enabled: (Boolean) The rule is enabled (true) or disabled (false)
            entity: (Block List) Comparison for ENTITY_ID attributes (see below for nested schema)
            entity_id_comparison: (Block List, Deprecated) Comparison for ENTITY_ID attributes (see below for nested schema)
            format: '(String) The name to be assigned to matching entities. You can use the following placeholders here:  * {AwsAutoScalingGroup:Name}  * {AwsAvailabilityZone:Name}  * {AwsElasticLoadBalancer:Name}  * {AwsRelationalDatabaseService:DBName}  * {AwsRelationalDatabaseService:Endpoint}  * {AwsRelationalDatabaseService:Engine}  * {AwsRelationalDatabaseService:InstanceClass}  * {AwsRelationalDatabaseService:Name}  * {AwsRelationalDatabaseService:Port}  * {AzureRegion:Name}  * {AzureScaleSet:Name}  * {AzureVm:Name}  * {CloudFoundryOrganization:Name}  * {CustomDevice:DetectedName}  * {CustomDevice:DnsName}  * {CustomDevice:IpAddress}  * {CustomDevice:Port}  * {DockerContainerGroupInstance:ContainerName}  * {DockerContainerGroupInstance:FullImageName}  * {DockerContainerGroupInstance:ImageVersion}  * {DockerContainerGroupInstance:StrippedImageName}  * {ESXIHost:HardwareModel}  * {ESXIHost:HardwareVendor}  * {ESXIHost:Name}  * {ESXIHost:ProductName}  * {ESXIHost:ProductVersion}  * {Ec2Instance:AmiId}  * {Ec2Instance:BeanstalkEnvironmentName}  * {Ec2Instance:InstanceId}  * {Ec2Instance:InstanceType}  * {Ec2Instance:LocalHostName}  * {Ec2Instance:Name}  * {Ec2Instance:PublicHostName}  * {Ec2Instance:SecurityGroup}  * {GoogleComputeInstance:Id}  * {GoogleComputeInstance:IpAddresses}  * {GoogleComputeInstance:MachineType}  * {GoogleComputeInstance:Name}  * {GoogleComputeInstance:ProjectId}  * {GoogleComputeInstance:Project}  * {Host:AWSNameTag}  * {Host:AixLogicalCpuCount}  * {Host:AzureHostName}  * {Host:AzureSiteName}  * {Host:BoshDeploymentId}  * {Host:BoshInstanceId}  * {Host:BoshInstanceName}  * {Host:BoshName}  * {Host:BoshStemcellVersion}  * {Host:CpuCores}  * {Host:DetectedName}  * {Host:Environment:AppName}  * {Host:Environment:BoshReleaseVersion}  * {Host:Environment:Environment}  * {Host:Environment:Link}  * {Host:Environment:Organization}  * {Host:Environment:Owner}  * {Host:Environment:Support}  * {Host:IpAddress}  * {Host:LogicalCpuCores}  * {Host:OneAgentCustomHostName}  * {Host:OperatingSystemVersion}  * {Host:PaasMemoryLimit}  * {HostGroup:Name}  * {KubernetesCluster:Name}  * {KubernetesNode:DetectedName}  * {OpenstackAvailabilityZone:Name}  * {OpenstackZone:Name}  * {OpenstackComputeNode:Name}  * {OpenstackProject:Name}  * {OpenstackVm:InstanceType}  * {OpenstackVm:Name}  * {OpenstackVm:SecurityGroup}  * {ProcessGroup:AmazonECRImageAccountId}  * {ProcessGroup:AmazonECRImageRegion}  * {ProcessGroup:AmazonECSCluster}  * {ProcessGroup:AmazonECSContainerName}  * {ProcessGroup:AmazonECSFamily}  * {ProcessGroup:AmazonECSRevision}  * {ProcessGroup:AmazonLambdaFunctionName}  * {ProcessGroup:AmazonRegion}  * {ProcessGroup:ApacheConfigPath}  * {ProcessGroup:ApacheSparkMasterIpAddress}  * {ProcessGroup:AspDotNetCoreApplicationPath}  * {ProcessGroup:AspDotNetCoreApplicationPath}  * {ProcessGroup:AzureHostName}  * {ProcessGroup:AzureSiteName}  * {ProcessGroup:CassandraClusterName}  * {ProcessGroup:CatalinaBase}  * {ProcessGroup:CatalinaHome}  * {ProcessGroup:CloudFoundryAppId}  * {ProcessGroup:CloudFoundryAppName}  * {ProcessGroup:CloudFoundryInstanceIndex}  * {ProcessGroup:CloudFoundrySpaceId}  * {ProcessGroup:CloudFoundrySpaceName}  * {ProcessGroup:ColdFusionJvmConfigFile}  * {ProcessGroup:ColdFusionServiceName}  * {ProcessGroup:CommandLineArgs}  * {ProcessGroup:DetectedName}  * {ProcessGroup:DotNetCommandPath}  * {ProcessGroup:DotNetCommand}  * {ProcessGroup:DotNetClusterId}  * {ProcessGroup:DotNetNodeId}  * {ProcessGroup:ElasticsearchClusterName}  * {ProcessGroup:ElasticsearchNodeName}  * {ProcessGroup:EquinoxConfigPath}  * {ProcessGroup:ExeName}  * {ProcessGroup:ExePath}  * {ProcessGroup:GlassFishDomainName}  * {ProcessGroup:GlassFishInstanceName}  * {ProcessGroup:GoogleAppEngineInstance}  * {ProcessGroup:GoogleAppEngineService}  * {ProcessGroup:GoogleCloudProject}  * {ProcessGroup:HybrisBinDirectory}  * {ProcessGroup:HybrisConfigDirectory}  * {ProcessGroup:HybrisConfigDirectory}  * {ProcessGroup:HybrisDataDirectory}  * {ProcessGroup:IBMCicsRegion}  * {ProcessGroup:IBMCtgName}  * {ProcessGroup:IBMImsConnectRegion}  * {ProcessGroup:IBMImsControlRegion}  * {ProcessGroup:IBMImsMessageProcessingRegion}  * {ProcessGroup:IBMImsSoapGwName}  * {ProcessGroup:IBMIntegrationNodeName}  * {ProcessGroup:IBMIntegrationServerName}  * {ProcessGroup:IISAppPool}  * {ProcessGroup:IISRoleName}  * {ProcessGroup:JbossHome}  * {ProcessGroup:JbossMode}  * {ProcessGroup:JbossServerName}  * {ProcessGroup:JavaJarFile}  * {ProcessGroup:JavaJarPath}  * {ProcessGroup:JavaMainCLass}  * {ProcessGroup:KubernetesBasePodName}  * {ProcessGroup:KubernetesContainerName}  * {ProcessGroup:KubernetesFullPodName}  * {ProcessGroup:KubernetesNamespace}  * {ProcessGroup:KubernetesPodUid}  * {ProcessGroup:MssqlInstanceName}  * {ProcessGroup:NodeJsAppBaseDirectory}  * {ProcessGroup:NodeJsAppName}  * {ProcessGroup:NodeJsScriptName}  * {ProcessGroup:OracleSid}  * {ProcessGroup:PHPScriptPath}  * {ProcessGroup:PHPWorkingDirectory}  * {ProcessGroup:Ports}  * {ProcessGroup:RubyAppRootPath}  * {ProcessGroup:RubyScriptPath}  * {ProcessGroup:SoftwareAGInstallRoot}  * {ProcessGroup:SoftwareAGProductPropertyName}  * {ProcessGroup:SpringBootAppName}  * {ProcessGroup:SpringBootProfileName}  * {ProcessGroup:SpringBootStartupClass}  * {ProcessGroup:TIBCOBusinessWorksAppNodeName}  * {ProcessGroup:TIBCOBusinessWorksAppSpaceName}  * {ProcessGroup:TIBCOBusinessWorksCeAppName}  * {ProcessGroup:TIBCOBusinessWorksCeVersion}  * {ProcessGroup:TIBCOBusinessWorksDomainName}  * {ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}  * {ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}  * {ProcessGroup:TIBCOBusinessWorksHome}  * {ProcessGroup:VarnishInstanceName}  * {ProcessGroup:WebLogicClusterName}  * {ProcessGroup:WebLogicDomainName}  * {ProcessGroup:WebLogicHome}  * {ProcessGroup:WebLogicName}  * {ProcessGroup:WebSphereCellName}  * {ProcessGroup:WebSphereClusterName}  * {ProcessGroup:WebSphereNodeName}  * {ProcessGroup:WebSphereServerName}  * {ProcessGroup:ActorSystem}  * {Service:STGServerName}  * {Service:DatabaseHostName}  * {Service:DatabaseName}  * {Service:DatabaseVendor}  * {Service:DetectedName}  * {Service:EndpointPath}  * {Service:EndpointPathGatewayUrl}  * {Service:IIBApplicationName}  * {Service:MessageListenerClassName}  * {Service:Port}  * {Service:PublicDomainName}  * {Service:RemoteEndpoint}  * {Service:RemoteName}  * {Service:WebApplicationId}  * {Service:WebContextRoot}  * {Service:WebServerName}  * {Service:WebServiceNamespace}  * {Service:WebServiceName}  * {VmwareDatacenter:Name}  * `{VmwareVm:Name}'
            host_tech: (Block List) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            hypervisor: (Block List) Comparison for HYPERVISOR_TYPE attributes (see below for nested schema)
            hypervisor_type_comparision: (Block List, Deprecated) hypervisor_type_comparision is deprecated. Use hypervisor instead (see below for nested schema)
            id: (String) The ID of this resource.
            indexed_name: (Block List) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_name_comparison: (Block List, Deprecated) Comparison for INDEXED_NAME attributes (see below for nested schema)
            indexed_string: (Block List) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_string_comparison: (Block List, Deprecated) Comparison for INDEXED_STRING attributes (see below for nested schema)
            indexed_tag: (Block List) Comparison for INDEXED_TAG attributes (see below for nested schema)
            indexed_tag_comparison: (Block List, Deprecated) Comparison for INDEXED_TAG attributes (see below for nested schema)
            integer: (Block List) Comparison for INTEGER attributes (see below for nested schema)
            integer_comparison: (Block List, Deprecated) Comparison for INTEGER attributes (see below for nested schema)
            ipaddress: (Block List) Comparison for IP_ADDRESS attributes (see below for nested schema)
            ipaddress_comparison: (Block List, Deprecated) Comparison for IP_ADDRESS attributes (see below for nested schema)
            key: (Block List) Fallback for not yet known type (see below for nested schema)
            mobile_platform: (Block List) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            mobile_platform_comparison: (Block List, Deprecated) Comparison for MOBILE_PLATFORM attributes (see below for nested schema)
            name: (String) The name of the rule
            negate: (Boolean) Reverses the operator. For example it turns the begins with into does not begin with
            operator: (String) Operator of the comparison. You can reverse it by setting negate to true
            os_arch: (Block List) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            os_type: (Block List) Comparison for OS_TYPE attributes (see below for nested schema)
            osarchitecture_comparison: (Block List, Deprecated) Comparison for OS_ARCHITECTURE attributes (see below for nested schema)
            ostype_comparison: (Block List, Deprecated) Comparison for OS_TYPE attributes (see below for nested schema)
            paas_type: (Block List) Comparison for PAAS_TYPE attributes (see below for nested schema)
            paas_type_comparison: (Block List, Deprecated) Comparison for PAAS_TYPE attributes (see below for nested schema)
            process_metadata: (Block List) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            process_metadata_condition_key: (Block List, Deprecated) The key for dynamic attributes of the PROCESS_PREDEFINED_METADATA_KEY type (see below for nested schema)
            service_topology: (Block List) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_topology_comparison: (Block List, Deprecated) Comparison for SERVICE_TOPOLOGY attributes (see below for nested schema)
            service_type: (Block List) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            service_type_comparison: (Block List, Deprecated) Comparison for SERVICE_TYPE attributes (see below for nested schema)
            simple_host_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_HOST_TECH attributes (see below for nested schema)
            simple_tech_comparison: (Block List, Deprecated) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            source: (String) The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
            string: (Block List) Comparison for STRING attributes (see below for nested schema)
            string_comparison: (Block List, Deprecated) Comparison for STRING attributes (see below for nested schema)
            string_condition_key: (Block List, Deprecated) The key for dynamic attributes of the STRING type (see below for nested schema)
            string_key: (Block List) The key for dynamic attributes of the STRING type (see below for nested schema)
            synthetic_engine: (Block List) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            synthetic_engine_type_comparison: (Block List, Deprecated) Comparison for SYNTHETIC_ENGINE_TYPE attributes (see below for nested schema)
            tag: (Block List) Comparison for TAG attributes (see below for nested schema)
            tag_comparison: (Block List, Deprecated) Comparison for TAG attributes (see below for nested schema)
            tech: (Block List) Comparison for SIMPLE_TECH attributes (see below for nested schema)
            terraform-provider-dynatrace -export dynatrace_service_naming: downloads all existing service naming configuration
            type: (String, Deprecated) if specified, needs to be APPLICATION_TYPE
            unknowns: (String) allows for configuring properties that are not explicitly supported by the current version of this provider
            value: (String) The value to compare to
            verbatim_type: (String) Non-predefined technology, use for custom technologies
        importStatements: []
    dynatrace_service_now_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_service_now_notification Resource - terraform-provider-dynatrace
        title: dynatrace_service_now_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            builtin:problem.notifications: )
            events: (Boolean) Send events into ServiceNow ITOM
            format_problem_details_as_text: (Boolean) Use text format for problem details instead of HTML.
            id: (String) The ID of this resource.
            incidents: (Boolean) Send incidents into ServiceNow ITSM
            instance: (String) The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the url field. You can only use one of them
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            message: '(String) The content of the ServiceNow description. You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsHTML}: All problem event details, including root cause, as an HTML-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            name: (String) The name of the notification configuration
            password: (String, Sensitive) The password to the ServiceNow account
            profile: (String) The ID of the associated alerting profile
            terraform-provider-dynatrace -export dynatrace_service_now_notification: downloads the existing problem notifications for Service Now
            url: (String) The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the instance field. You can only use one of them
            username: (String) The username of the ServiceNow account.   Make sure that your user account has the rest_service, web_request_admin, and x_dynat_ruxit.Integration roles
        importStatements: []
    dynatrace_session_replay_resource_capture Resource - terraform-provider-dynatrace:
        subCategory: Session Replay
        description: The resource
        name: dynatrace_session_replay_resource_capture Resource - terraform-provider-dynatrace
        title: dynatrace_session_replay_resource_capture Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            builtin:sessionreplay.web.resource-capturing: )
            enable_resource_capturing: (Boolean) (Field has overlap with dynatrace_web_application) When turned on, all CSS resources from all sessions are captured. For details, see Resource capture.
            id: (String) The ID of this resource.
            resource_capture_url_exclusion_pattern_list: (Set of String) (Field has overlap with dynatrace_web_application) Add exclusion rules to avoid the capture of resources from certain pages.
            terraform-provider-dynatrace -export dynatrace_session_replay_resource_capture: downloads all existing Session Replay resource capture configuration
        importStatements: []
    dynatrace_session_replay_web_privacy Resource - terraform-provider-dynatrace:
        subCategory: Session Replay
        description: The resource
        name: dynatrace_session_replay_web_privacy Resource - terraform-provider-dynatrace
        title: dynatrace_session_replay_web_privacy Resource - terraform-provider-dynatrace
        argumentDocs:
            allow_list_rule: '(Block List, Min: 1) (see below for nested schema)'
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            attribute_expression: (String) Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
            block_list_rule: '(Block List, Min: 1) (see below for nested schema)'
            builtin:sessionreplay.web.privacy-preferences: )
            css_expression: (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
            enable_opt_in_mode: (Boolean) (Field has overlap with dynatrace_application_data_privacy) When Session Replay opt-in mode is turned on, Session Replay is deactivated until explicitly activated via an API call.
            hide_user_interaction: (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
            id: (String) The ID of this resource.
            masking_presets: '(Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_application_data_privacy) To protect your end users'' privacy, select or customize predefined masking options that suit your content recording and playback requirements. (see below for nested schema)'
            playback_masking_allow_list_rules: '(Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)'
            playback_masking_block_list_rules: '(Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)'
            playback_masking_preset: '(String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_ALL, MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST'
            recording_masking_allow_list_rules: '(Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)'
            recording_masking_block_list_rules: '(Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)'
            recording_masking_preset: '(String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST, MASK_ALL'
            target: '(String) Possible Values: ATTRIBUTE, ELEMENT'
            terraform-provider-dynatrace -export dynatrace_session_replay_web_privacy: downloads all existing Session Replay data privacy configuration
            url_exclusion_pattern_list: (Set of String) (Field has overlap with dynatrace_application_data_privacy) Exclude webpages or views from Session Replay recording by adding URL exclusion rules
        importStatements: []
    dynatrace_slack_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_slack_notification Resource - terraform-provider-dynatrace
        title: dynatrace_slack_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            builtin:problem.notifications: )
            channel: '(String) The channel (for example, #general) or the user (for example, @john.smith) to send the message to'
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            message: '(String) The content of the message.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            name: (String) The name of the notification configuration
            profile: (String) The ID of the associated alerting profile
            terraform-provider-dynatrace -export dynatrace_slack_notification: downloads the existing problem notifications for Slack
            url: (String, Sensitive) The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the null value, and it is optional for PUT requests
        importStatements: []
    dynatrace_slo Resource - terraform-provider-dynatrace:
        subCategory: Deprecated
        description: The resource
        name: dynatrace_slo Resource - terraform-provider-dynatrace
        title: dynatrace_slo Resource - terraform-provider-dynatrace
        argumentDocs:
            burn_rate_visualization_enabled: (Boolean) The error budget burn rate calculation is enabled (true) or disabled (false).
            denominator: (String) The total count metric (the denominator in rate calculation)
            description: (String) The custom description of the SLO (optional)
            disabled: (Boolean) The SLO is enabled (false) or disabled (true)
            error_budget_burn_rate: '(Block List, Max: 1) Error budget burn rate configuration of a service-level objective (SLO). (see below for nested schema)'
            evaluation: (String) The evaluation type of the SLO. Currently only AGGREGATE is supported
            fast_burn_threshold: (Number) The threshold between a slow and a fast burn rate.
            filter: (String) The entity filter for the SLO evaluation. Use the syntax of entity selector
            id: (String) The ID of this resource.
            metric_expression: (String) The percentage-based metric expression for the calculation of the SLO
            metric_name: (String) The name that is used to create SLO func metrics keys. Once created, metric name cannot be changed.
            name: (String) The name of the rule
            numerator: (String, Deprecated) The metric for the count of successes (the numerator in rate calculation)
            rate: (String) The percentage-based metric for the calculation of the SLO
            target: (Number) The target value of the SLO
            terraform-provider-dynatrace -export dynatrace_slo: downloads all existing service-level objectives configuration
            timeframe: (String) The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector
            warning: (Number) The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure
        importStatements: []
    dynatrace_slo_normalization Resource - terraform-provider-dynatrace:
        subCategory: Service-level Objective
        description: The resource
        name: dynatrace_slo_normalization Resource - terraform-provider-dynatrace
        title: dynatrace_slo_normalization Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitoring.slo.normalization: )
            id: (String) The ID of this resource.
            normalize: (Boolean) When set to true, the error budget left will be shown in percent of the total error budget. For more details see SLO normalization help.
            terraform-provider-dynatrace -export dynatrace_slo_normalization: downloads all existing service-level objective setup configuration
        importStatements: []
    dynatrace_slo_v2 Resource - terraform-provider-dynatrace:
        subCategory: Service-level Objective
        description: The resource
        name: dynatrace_slo_v2 Resource - terraform-provider-dynatrace
        title: dynatrace_slo_v2 Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:monitoring.slo: )
            burn_rate_visualization_enabled: (Boolean) Burn rate visualization enabled
            custom_description: (String) The description of the SLO
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            error_budget_burn_rate: '(Block List, Min: 1, Max: 1) ### Error budget burn rate (see below for nested schema)'
            evaluation_type: '(String) Possible Values: AGGREGATE'
            evaluation_window: (String) Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
            fast_burn_threshold: (Number) The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
            filter: (String) Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the Entity Selector documentation.
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of this setting when referred to by the Config REST API V1
            metric_expression: (String) For details, see the Metrics page.
            metric_name: (String) Metric name
            name: (String) SLO name
            target_success: (Number) Set the target value of the SLO. A percentage below this value indicates a failure.
            target_warning: (Number) Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
            terraform-provider-dynatrace -export dynatrace_slo_v2: downloads all existing service-level objectives configuration
        importStatements: []
    dynatrace_span_attribute Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_span_attribute Resource - terraform-provider-dynatrace
        title: dynatrace_span_attribute Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:span-attribute: )
            id: (String) The ID of this resource.
            key: (String) Key of the span attribute to store
            masking: '(String) Possible Values: MASK_ENTIRE_VALUE, MASK_ONLY_CONFIDENTIAL_DATA, NOT_MASKED'
            persistent: (Boolean) Prevents the Span Attribute from getting deleted when running terraform destroy - to be used for Span Attributes that are defined by default on every Dynatrace environment.
            terraform-provider-dynatrace -export dynatrace_span_attribute: downloads all existing span attribute configuration
        importStatements: []
    dynatrace_span_capture_rule Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_span_capture_rule Resource - terraform-provider-dynatrace
        title: dynatrace_span_capture_rule Resource - terraform-provider-dynatrace
        argumentDocs:
            action: (String) Whether to create an entry point or not
            builtin:span-capturing: )
            case_sensitive: (Boolean) Whether to match strings case sensitively or not
            comparison: (String) Possible values are EQUALS, CONTAINS, STARTS_WITH, ENDS_WITH, DOES_NOT_EQUAL, DOES_NOT_CONTAIN, DOES_NOT_START_WITH and DOES_NOT_END_WITH.
            id: (String) The ID of this resource.
            key: (String) The name of the attribute if source is ATTRIBUTE
            match: '(Block List, Min: 1) Matching strategies for the Span (see below for nested schema)'
            matches: '(Block List, Min: 1, Max: 1) Matching strategies for the Span (see below for nested schema)'
            name: (String) The name of the rule
            source: (String) What to match against. Possible values are SPAN_NAME, SPAN_KIND, ATTRIBUTE, INSTRUMENTATION_LIBRARY_NAME and INSTRUMENTATION_LIBRARY_VERSION
            terraform-provider-dynatrace -export dynatrace_span_capture_rule: downloads all existing span capture rule configuration
            value: (String) The value to compare against. When source is SPAN_KIND the only allowed values are INTERNAL, SERVER, CLIENT, PRODUCER and CONSUMER
        importStatements: []
    dynatrace_span_context_propagation Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_span_context_propagation Resource - terraform-provider-dynatrace
        title: dynatrace_span_context_propagation Resource - terraform-provider-dynatrace
        argumentDocs:
            action: (String) Whether to create an entry point or not
            builtin:span-context-propagation: )
            case_sensitive: (Boolean) Whether to match strings case sensitively or not
            comparison: (String) Possible values are EQUALS, CONTAINS, STARTS_WITH, ENDS_WITH, DOES_NOT_EQUAL, DOES_NOT_CONTAIN, DOES_NOT_START_WITH and DOES_NOT_END_WITH.
            id: (String) The ID of this resource.
            key: (String) The name of the attribute if source is ATTRIBUTE
            match: '(Block List, Min: 1) Matching strategies for the Span (see below for nested schema)'
            matches: '(Block List, Min: 1, Max: 1) Matching strategies for the Span (see below for nested schema)'
            name: (String) The name of the rule
            source: (String) What to match against. Possible values are SPAN_NAME, SPAN_KIND, ATTRIBUTE, INSTRUMENTATION_LIBRARY_NAME and INSTRUMENTATION_LIBRARY_VERSION
            terraform-provider-dynatrace -export dynatrace_span_context_propagation: downloads all existing span context propagation configuration
            value: (String) The value to compare against. When source is SPAN_KIND the only allowed values are INTERNAL, SERVER, CLIENT, PRODUCER and CONSUMER
        importStatements: []
    dynatrace_span_entry_point Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_span_entry_point Resource - terraform-provider-dynatrace
        title: dynatrace_span_entry_point Resource - terraform-provider-dynatrace
        argumentDocs:
            action: (String) Whether to create an entry point or not
            builtin:span-entry-points: )
            case_sensitive: (Boolean) Whether to match strings case sensitively or not
            comparison: (String) Possible values are EQUALS, CONTAINS, STARTS_WITH, ENDS_WITH, DOES_NOT_EQUAL, DOES_NOT_CONTAIN, DOES_NOT_START_WITH and DOES_NOT_END_WITH.
            id: (String) The ID of this resource.
            key: (String) The name of the attribute if source is ATTRIBUTE
            match: '(Block List, Min: 1) Matching strategies for the Span (see below for nested schema)'
            matches: '(Block List, Min: 1, Max: 1) Matching strategies for the Span (see below for nested schema)'
            name: (String) The name of the rule
            source: (String) What to match against. Possible values are SPAN_NAME, SPAN_KIND, ATTRIBUTE, INSTRUMENTATION_LIBRARY_NAME and INSTRUMENTATION_LIBRARY_VERSION
            terraform-provider-dynatrace -export dynatrace_span_entry_point: downloads all existing span entry point configuration
            value: (String) The value to compare against. When source is SPAN_KIND the only allowed values are INTERNAL, SERVER, CLIENT, PRODUCER and CONSUMER
        importStatements: []
    dynatrace_span_events Resource - terraform-provider-dynatrace:
        subCategory: OpenTelemetry & OpenTracing
        description: The resource
        name: dynatrace_span_events Resource - terraform-provider-dynatrace
        title: dynatrace_span_events Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:span-event-attribute: )
            id: (String) The ID of this resource.
            key: (String) Key of the span event attribute to store
            masking: '(String) Possible Values: MASK_ENTIRE_VALUE, MASK_ONLY_CONFIDENTIAL_DATA, NOT_MASKED'
            terraform-provider-dynatrace -export dynatrace_span_events: downloads all existing span event configuration
        importStatements: []
    dynatrace_synthetic_availability Resource - terraform-provider-dynatrace:
        subCategory: Synthetic
        description: Dynatrace offers the possibility to configure maintenance windows. By default maintenance windows only affect problem detection and alerting. You can change this behavior and calculate availability including/excluding maintenance window periods
        name: dynatrace_synthetic_availability Resource - terraform-provider-dynatrace
        title: dynatrace_synthetic_availability Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:synthetic.synthetic-availability-settings: )
            exclude_maintenance_windows: (Boolean) Exclude periods with maintenance windows from availability calculation
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_synthetic_availability: downloads the existing settings for Usability Analytics
        importStatements: []
    dynatrace_synthetic_location Resource - terraform-provider-dynatrace:
        subCategory: Synthetic
        description: The resource
        name: dynatrace_synthetic_location Resource - terraform-provider-dynatrace
        title: dynatrace_synthetic_location Resource - terraform-provider-dynatrace
        argumentDocs:
            KUBERNETES: ': The location is deployed on Kubernetes'
            STANDARD: ': The location is deployed on Windows or Linux.'
            auto_update_chromium: (Boolean) Auto upgrade of Chromium is enabled (true) or disabled (false)
            availability_location_outage: (Boolean) The alerting of location outage is enabled (true) or disabled (false)
            availability_node_outage: (Boolean) The alerting of node outage is enabled (true) or disabled (false).
            availability_notifications_enabled: (Boolean) The notifications of location and node outage is enabled (true) or disabled (false)
            city: (String) The city of the location
            country_code: (String) The country code of the location.
            deployment_type: '(String) The deployment type of the location:'
            id: (String) The ID of this resource.
            latitude: (Number) The latitude of the location in DDD.dddd format
            location_node_outage_delay_in_minutes: (Number) Alert if the location or node outage lasts longer than X minutes.
            longitude: (Number) The longitude of the location in DDD.dddd format
            max_active_gate_count: (Number) The maximum number of Active Gates required for that location. Not required when deployment_type is set to STANDARD
            min_active_gate_count: (Number) The minimum number of Active Gates required for that location. Not required when deployment_type is set to STANDARD
            name: (String) The name of the location
            node_size: '(String) Possible values: UNSUPPORTED, XS, S and M. Not required when deployment_type is set to STANDARD.'
            nodes: (Set of String) A list of synthetic nodes belonging to the location.
            region_code: (String) The region code of the location.
            terraform-provider-dynatrace -export dynatrace_synthetic_location: downloads the currently configured private synthetic locations
        importStatements: []
    dynatrace_token_settings Resource - terraform-provider-dynatrace:
        subCategory: Access Tokens
        description: The resource
        name: dynatrace_token_settings Resource - terraform-provider-dynatrace
        title: dynatrace_token_settings Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:tokens.token-settings: )
            id: (String) The ID of this resource.
            new_token_format: (Boolean) Check out this blog post to find out more about the new Dynatrace API token format.
            personal_tokens: |-
                (Boolean) Allow users of this environment to generate personal access tokens based on user permissions.
                Note that existing personal access tokens will become unusable while this setting is disabled.
            terraform-provider-dynatrace -export dynatrace_token_settings: downloads existing access token configuration
        importStatements: []
    dynatrace_transaction_start_filters Resource - terraform-provider-dynatrace:
        subCategory: Mainframe
        description: The resource
        name: dynatrace_transaction_start_filters Resource - terraform-provider-dynatrace
        title: dynatrace_transaction_start_filters Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:mainframe.txstartfilters: )
            cics_terminal_transaction_ids: (Set of String) You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.
            cics_transaction_ids: (Set of String) You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.
            id: (String) The ID of this resource.
            ims_terminal_transaction_ids: (Set of String) You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.
            ims_transaction_ids: (Set of String) You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.
            terraform-provider-dynatrace -export dynatrace_transaction_start_filters: downloads the current configuration for Transaction Start Filters
        importStatements: []
    dynatrace_trello_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_trello_notification Resource - terraform-provider-dynatrace
        title: dynatrace_trello_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            application_key: (String) The application key for the Trello account
            authorization_token: (String) The application token for the Trello account
            board_id: (String) The Trello board to which the card should be assigned
            builtin:problem.notifications: )
            description: (String) The description of the Trello card.   You can use same placeholders as in card text
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            list_id: (String) The Trello list to which the card should be assigned
            name: (String) The name of the notification configuration
            profile: (String) The ID of the associated alerting profile
            resolved_list_id: (String) The Trello list to which the card of the resolved problem should be assigned
            terraform-provider-dynatrace -export dynatrace_trello_notification: downloads the existing problem notifications for Trello
            text: '(String) The text of the generated Trello card.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
        importStatements: []
    dynatrace_unified_services_metrics Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_unified_services_metrics Resource - terraform-provider-dynatrace
        title: dynatrace_unified_services_metrics Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:unified-services-endpoint-metrics: )
            enable_endpoint_metrics: (Boolean) Should metrics be written for endpoints? Please be aware that this setting has billing implications. Check out this documentation for further details.
            id: (String) The ID of this resource.
            service_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            terraform-provider-dynatrace -export dynatrace_unified_services_metrics: downloads existing unified services endpoint metrics configuration
        importStatements: []
    dynatrace_unified_services_opentel Resource - terraform-provider-dynatrace:
        subCategory: Service Detection
        description: The resource
        name: dynatrace_unified_services_opentel Resource - terraform-provider-dynatrace
        title: dynatrace_unified_services_opentel Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:unified-services-enablement: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_unified_services_opentel: downloads existing unified services OpenTelemetry configuration
        importStatements: []
    dynatrace_update_windows Resource - terraform-provider-dynatrace:
        subCategory: Updates
        description: The resource
        name: dynatrace_update_windows Resource - terraform-provider-dynatrace
        title: dynatrace_update_windows Resource - terraform-provider-dynatrace
        argumentDocs:
            "1": = every day,
            "2": = every two days,
            "3": = every three days,
            builtin:deployment.management.update-windows: )
            daily_recurrence: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            duration: (Number) Duration (minutes)
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            end: (String) no documentation available
            every: '(Number) Every X days:'
            friday: (Boolean) no documentation available
            id: (String) The ID of this resource.
            monday: (Boolean) no documentation available
            monthly_recurrence: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            name: (String) Name
            once_recurrence: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            recurrence: '(String) Possible Values: MONTHLY, ONCE, DAILY, WEEKLY'
            recurrence_range: '(Block List, Min: 1, Max: 1) Recurrence range (see below for nested schema)'
            saturday: (Boolean) no documentation available
            selected_month_day: (Number) Day of the month
            selected_week_days: '(Block List, Min: 1, Max: 1) Day of the week (see below for nested schema)'
            start: (String) no documentation available
            start_time: (String) Start time (24-hour clock)
            sunday: (Boolean) no documentation available
            terraform-provider-dynatrace -export dynatrace_update_windows: downloads all existing maintenance windows for OneAgent updates
            thursday: (Boolean) no documentation available
            time_zone: '(String) Possible Values: GMT_06_00, GMT_12_00, GMT_10_00, GMT_07_00, GMT_00_00, GMT_11_00, GMT_03_00, GMT_01_00, GMT_05_00, GMT_09_00, GMT_02_00, GMT_04_00, GMT_08_00'
            tuesday: (Boolean) no documentation available
            update_time: '(Block List, Min: 1, Max: 1) Update time (see below for nested schema)'
            wednesday: (Boolean) no documentation available
            weekly_recurrence: '(Block List, Max: 1) no documentation available (see below for nested schema)'
        importStatements: []
    dynatrace_usability_analytics Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_usability_analytics Resource - terraform-provider-dynatrace
        title: dynatrace_usability_analytics Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            builtin:usability-analytics: )
            detect_rage_clicks: |-
                (Boolean) Three or more rapid clicks within the same area of a web page are considered to be rage clicks. Rage clicks commonly reflect slow-loading or failed page resources. Rage click counts are compiled for each session and considered in the User Experience Score .
                With this setting enabled, a rage click count is compiled for each monitored user session.
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_usability_analytics: downloads the existing settings for Usability Analytics
        importStatements: []
    dynatrace_user Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_user Resource - terraform-provider-dynatrace
        title: dynatrace_user Resource - terraform-provider-dynatrace
        argumentDocs:
            email: (String) User's email address
            first_name: (String) User's first name
            groups: (Set of String) List of user's user group IDs
            id: (String) The ID of this resource.
            last_name: (String) User's last name
            user_name: (String) The User Name
        importStatements: []
    dynatrace_user_action_metrics Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_user_action_metrics Resource - terraform-provider-dynatrace
        title: dynatrace_user_action_metrics Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:user-action-custom-metrics: )
            dimensions: (List of String) Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like "application", "type", "name". For example, using "type" as a dimension allows you to split chart data based on the user action type.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            field_name: (String) Field name
            filter: '(Block List, Min: 1) (see below for nested schema)'
            filters: '(Block List, Max: 1) Defines the filters for the user action. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using "type equals Xhr" will give you only data from xhr actions, while forcing the rest of user actions of different types to be ignored. (see below for nested schema)'
            id: (String) The ID of this resource.
            metric_key: (String) Metric key
            operator: '(String) Possible Values: EQUALS, GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, IN, IS_NOT_NULL, IS_NULL, LESS_THAN, LESS_THAN_OR_EQUAL_TO, LIKE, NOT_EQUAL, NOT_LIKE, STARTS_WITH'
            terraform-provider-dynatrace -export dynatrace_user_action_metrics: downloads all existing user action custom metrics configuration
            type: '(String) Possible Values: COUNTER, FIELD'
            value: '(Block List, Min: 1, Max: 1) Defines the type of value to be extracted from the user action. When using user action counter, the number of user actions is counted (similar to count(*) when using USQL). When using user action field value, the value of a user action field is extracted. (see below for nested schema)'
            value_in: (List of String) Values
        importStatements: []
    dynatrace_user_experience_score Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_user_experience_score Resource - terraform-provider-dynatrace
        title: dynatrace_user_experience_score Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.user-experience-score: )
            consider_last_action: (Boolean) If last user action in a session is classified as Frustrating, classify the entire session as Frustrating
            consider_rage_click: (Boolean) Consider rage clicks / rage taps in score calculation
            id: (String) The ID of this resource.
            max_frustrated_user_actions_threshold: (Number) User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.
            min_satisfied_user_actions_threshold: (Number) User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.
            terraform-provider-dynatrace -export dynatrace_user_experience_score: downloads the existing user experience score configuration
        importStatements: []
    dynatrace_user_group Resource - terraform-provider-dynatrace:
        subCategory: IAM
        description: The resource
        name: dynatrace_user_group Resource - terraform-provider-dynatrace
        title: dynatrace_user_group Resource - terraform-provider-dynatrace
        argumentDocs:
            access_account: (Boolean) If true, then the group has the access account rights
            cluster_admin: (Boolean) If true, then the group has the cluster administrator rights
            environments: (Set of String) The ids of the environments this permission grants the user access to.
            grant: '(Block List, Min: 1) A permission granted to one or multiple environments (see below for nested schema)'
            id: (String) The ID of this resource.
            ldap_groups: (Set of String) LDAP group names
            manage_account: (Boolean) If true, then the group has the manage account rights
            name: (String) The name of the user group
            permission: (String) The permission. Possible values are VIEWER, MANAGE_SETTINGS, AGENT_INSTALL, LOG_VIEWER, VIEW_SENSITIVE_REQUEST_DATA, CONFIGURE_REQUEST_CAPTURE_DATA, REPLAY_SESSION_DATA, REPLAY_SESSION_DATA_WITHOUT_MASKING, MANAGE_SECURITY_PROBLEMS and MANAGE_SUPPORT_TICKETS.
            permissions: '(Block List, Max: 1) Permissions for environments (see below for nested schema)'
            sso_groups: (Set of String) SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name
        importStatements: []
    dynatrace_user_session_metrics Resource - terraform-provider-dynatrace:
        subCategory: Real User Monitoring
        description: The resource
        name: dynatrace_user_session_metrics Resource - terraform-provider-dynatrace
        title: dynatrace_user_session_metrics Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:custom-metrics: )
            dimensions: (List of String) Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like "browserFamily", "userType", "country". For example, using "userType" as a dimension allows you to split chart data based on user types.
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            field_name: (String) Field name
            filter: '(Block List, Min: 1) (see below for nested schema)'
            filters: '(Block List, Max: 1) Defines the filters for the user session. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using "userType equals REAL_USER" will give you only data from real users, while forcing the synthetic sessions to be ignored. (see below for nested schema)'
            id: (String) The ID of this resource.
            metric_key: (String) Metric key
            operator: '(String) Possible Values: EQUALS, GREATER_THAN, GREATER_THAN_OR_EQUAL_TO, IN, IS_NOT_NULL, IS_NULL, LESS_THAN, LESS_THAN_OR_EQUAL_TO, LIKE, NOT_EQUAL, NOT_LIKE, STARTS_WITH'
            terraform-provider-dynatrace -export dynatrace_user_session_metrics: downloads all existing user session custom metrics configuration
            type: '(String) Possible Values: COUNTER, FIELD'
            value: '(Block List, Min: 1, Max: 1) Defines the type of value to be extracted from the user session. When using User session counter, the number of user sessions is counted (similar to count(*) when using USQL). When using User session field value, the value of a user session field is extracted. (see below for nested schema)'
            value_in: (List of String) Values
        importStatements: []
    dynatrace_user_settings Resource - terraform-provider-dynatrace:
        subCategory: User Settings
        description: The resource
        name: dynatrace_user_settings Resource - terraform-provider-dynatrace
        title: dynatrace_user_settings Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:user-settings: )
            id: (String) The ID of this resource.
            language: '(String) Possible Values: Auto, En, Ja'
            region: (String) Region
            scope: (String) The scope of this setting (user, userdefaults)
            terraform-provider-dynatrace -export dynatrace_user_settings: downloads user settings of the individual user
            theme: '(String) Possible Values: Auto, Dark, Light'
            timezone: (String) Timezone
        importStatements: []
    dynatrace_victor_ops_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_victor_ops_notification Resource - terraform-provider-dynatrace
        title: dynatrace_victor_ops_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            api_key: (String, Sensitive) The API key for the target VictorOps account
            builtin:problem.notifications: )
            id: (String) The ID of this resource.
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            message: '(String) The content of the message.  You can use the following placeholders:  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED'
            name: (String) The name of the notification configuration
            profile: (String) The ID of the associated alerting profile
            routing_key: (String) The routing key, defining the group to be notified
            terraform-provider-dynatrace -export dynatrace_victor_ops_notification: downloads the existing problem notifications for VictorOps
        importStatements: []
    dynatrace_vmware Resource - terraform-provider-dynatrace:
        subCategory: Virtualization
        description: The resource
        name: dynatrace_vmware Resource - terraform-provider-dynatrace
        title: dynatrace_vmware Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:virtualization.vmware: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            filter: '(String) This string should have one of the following formats:'
            id: (String) The ID of this resource.
            ipaddress: '(String) Specify the IP address or name of the vCenter or standalone ESXi host:'
            label: (String) Name this connection
            password: (String, Sensitive) no documentation available
            terraform-provider-dynatrace -export dynatrace_vmware: downloads all existing VMware configuration
            username: '(String) Provide user credentials for the vCenter or standalone ESXi host:'
        importStatements: []
    dynatrace_vmware_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_vmware_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_vmware_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            average_queue_command_latency: (Number) Average queue command latency is higher than
            avg_read_write_latency: (Number) Read/write latency is higher than
            builtin:anomaly-detection.infrastructure-vmware: )
            command_aborts_number: (Number) Number of command aborts is higher than
            compression_decompression_rate: (Number) ESXi host swap IN/OUT or compression/decompression rate is higher than
            cpu_peak_percentage: (Number) At least one peak occurred when Hypervisor CPU usage was higher than
            cpu_usage_percentage: (Number) CPU usage is higher than
            custom_thresholds: '(Block List, Max: 1) Alert if the condition is met in 3 out of 5 samples (see below for nested schema)'
            detection_mode: '(String) Possible Values: Auto, Custom'
            dropped_packets_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            dropped_packets_per_second: (Number) Receive/transmit dropped packets rate on NIC is higher than
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            esxi_high_cpu_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            esxi_high_memory_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            free_space_percentage: (Number) Datastore free space is lower than
            guest_cpu_limit_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            host_cpu_usage_percentage: (Number) Hypervisor CPU usage is higher than
            id: (String) The ID of this resource.
            low_datastore_space_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            overloaded_storage_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            peak_queue_command_latency: (Number) Peak queue command latency is higher than
            peak_read_write_latency: (Number) Peak value for read/write latency is higher than
            slow_physical_storage_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_vmware_anomalies: downloads all existing VMware anomaly detection configuration
            undersized_storage_detection: '(Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)'
            vm_cpu_ready_percentage: (Number) VM CPU ready is higher than
            vm_cpu_usage_percentage: (Number) VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than
        importStatements: []
    dynatrace_vulnerability_alerting Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_vulnerability_alerting Resource - terraform-provider-dynatrace
        title: dynatrace_vulnerability_alerting Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:appsec.notification-alerting-profile: )
            enabled: (Boolean) Alerting profile is enabled (true) or disabled (false)
            enabled_risk_levels: (Set of String) List of risk levels to alert
            enabled_trigger_events: (Set of String) List of events to alert
            id: (String) The ID of this resource.
            management_zone: (String) Alert only if the following management zone is affected (optional)
            name: (String) Alerting profile name
            terraform-provider-dynatrace -export dynatrace_vulnerability_alerting: downloads all existing vulnerability alerting profiles
        importStatements: []
    dynatrace_vulnerability_code Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_vulnerability_code Resource - terraform-provider-dynatrace
        title: dynatrace_vulnerability_code Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:appsec.code-level-vulnerability-rule-settings: )
            comment: (String) no documentation available
            criteria: '(Block List, Max: 1) Step 1: Define criteria (see below for nested schema)'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            metadata: '(Block List, Min: 1, Max: 1) Step 3: Leave comment (see below for nested schema)'
            monitoring_mode: '(String) Possible Values: MONITORING_OFF, MONITORING_ON'
            process_group: (String) Process group
            terraform-provider-dynatrace -export dynatrace_vulnerability_code: 'downloads existing vulnerability analytics: monitoring rules for code-level vulnerabilities'
            vulnerability_detection_control: '(Block List, Min: 1, Max: 1) Step 2: Define code-level vulnerability detection control for chosen criteria (see below for nested schema)'
        importStatements: []
    dynatrace_vulnerability_settings Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_vulnerability_settings Resource - terraform-provider-dynatrace
        title: dynatrace_vulnerability_settings Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:appsec.runtime-vulnerability-detection: )
            enable_code_level_vulnerability_detection: (Boolean) Enable Code-level Vulnerability Analytics
            enable_dot_net: (Boolean) NET
            enable_dot_net_runtime: (Boolean) NET runtimes
            enable_go: (Boolean) Go
            enable_java: (Boolean) Java
            enable_java_runtime: (Boolean) Java runtimes
            enable_kubernetes: (Boolean) Kubernetes
            enable_node_js: (Boolean) Node.js
            enable_node_js_runtime: (Boolean) Node.js runtimes
            enable_php: (Boolean) PHP
            enable_runtime_vulnerability_detection: (Boolean) Enable Third-party Vulnerability Analytics
            global_monitoring_mode_java: '(String) Possible Values: MONITORING_OFF, MONITORING_ON'
            id: (String) The ID of this resource.
            technologies: '(Block List, Min: 1, Max: 1) Vulnerability Analytics can be enabled/disabled per supported technology. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_vulnerability_settings: 'downloads existing vulnerability analytics: general settings'
        importStatements: []
    dynatrace_vulnerability_third_party Resource - terraform-provider-dynatrace:
        subCategory: Application Security
        description: The resource
        name: dynatrace_vulnerability_third_party Resource - terraform-provider-dynatrace
        title: dynatrace_vulnerability_third_party Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:appsec.rule-settings: )
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            mode: '(String) Possible Values: MONITORING_OFF, MONITORING_ON'
            operator: '(String) Possible Values: EQUALS, NOT_EQUALS'
            property: '(String) Possible Values: HOST_TAG, MANAGEMENT_ZONE, PROCESS_TAG'
            terraform-provider-dynatrace -export dynatrace_vulnerability_settings: 'downloads existing vulnerability analytics: monitoring rules for third-party vulnerabilities'
            value: (String) Condition value
        importStatements: []
    dynatrace_web_app_anomalies Resource - terraform-provider-dynatrace:
        subCategory: Anomaly Detection
        description: The resource
        name: dynatrace_web_app_anomalies Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_anomalies Resource - terraform-provider-dynatrace
        argumentDocs:
            abnormal_state_abnormal_state: (Number) Minutes the observed traffic has to stay in abnormal state before alert
            absolute_increase: (Number) Absolute threshold
            actions_per_minute: (Number) Only alert if there are at least
            builtin:anomaly-detection.rum-web: )
            degradation_milliseconds: (Number) Absolute threshold
            degradation_percent: (Number) Relative threshold
            detection_mode: '(String) Possible Values: Auto, Fixed'
            enabled: (Boolean) This setting is enabled (true) or disabled (false)
            error_rate: '(Block List, Min: 1, Max: 1) Error rate (see below for nested schema)'
            error_rate_auto: '(Block List, Max: 1) Alert if the percentage of failing user actions increases by both the absolute and relative thresholds: (see below for nested schema)'
            error_rate_detection_mode: '(String) Possible Values: Auto, Fixed'
            error_rate_fixed: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            error_rate_req_per_min: (Number) To avoid over-alerting for low traffic applications
            error_rate_sensitivity: '(String) Possible Values: Low, Medium, High'
            id: (String) The ID of this resource.
            max_failure_rate_increase: (Number) Alert if this custom error rate threshold is exceeded during any 5-minute-period
            minutes_abnormal_state: (Number) Only alert if the abnormal state remains for at least
            over_alerting_protection: '(Block List, Min: 1, Max: 1) Avoid over-alerting (see below for nested schema)'
            relative_increase: (Number) Relative threshold
            response_time: '(Block List, Min: 1, Max: 1) Response time (see below for nested schema)'
            response_time_all: '(Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)'
            response_time_auto: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            response_time_fixed: '(Block List, Max: 1) no documentation available (see below for nested schema)'
            response_time_slowest: '(Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)'
            scope: (String) The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
            sensitivity: '(String) Possible Values: Medium, High, Low'
            slowest_degradation_milliseconds: (Number) Absolute threshold
            slowest_degradation_percent: (Number) Relative threshold
            terraform-provider-dynatrace -export dynatrace_web_app_anomalies: downloads all existing web application anomaly detection configuration
            traffic_drop_percentage: (Number) Alert if the observed traffic is less than this percentage of the expected value
            traffic_drops: '(Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)'
            traffic_spike_percentage: (Number) Alert if the observed traffic is more than this percentage of the expected value
            traffic_spikes: '(Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)'
        importStatements: []
    dynatrace_web_app_custom_errors Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_custom_errors Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_custom_errors Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.custom-errors: )
            capture: (Boolean) Capture this error
            capture_settings: '(Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)'
            consider_for_ai: (Boolean) View more details
            error_rule: '(Block List, Min: 1) (see below for nested schema)'
            error_rules: '(Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_custom_errors_in_apdex_calculation: (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
            impact_apdex: (Boolean) Include error in Apdex calculations
            key_matcher: '(String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS'
            key_pattern: (String) A case-insensitive key pattern
            scope: (String) The scope of this setting (APPLICATION)
            terraform-provider-dynatrace -export dynatrace_web_app_custom_errors: downloads all existing custom error configuration
            value_matcher: '(String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS'
            value_pattern: (String) A case-insensitive value pattern
        importStatements: []
    dynatrace_web_app_enablement Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_enablement Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_enablement Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            builtin:rum.web.enablement: )
            cost_and_traffic_control: (Number) (Field has overlap with dynatrace_web_application) Percentage of user sessions captured and analyzed
            enabled: (Boolean) (Field has overlap with dynatrace_web_application) This setting is enabled (true) or disabled (false)
            id: (String) The ID of this resource.
            rum: '(Block List, Min: 1, Max: 1) Capture and analyze all user actions within your application. Enable Real User Monitoring (RUM) to monitor and improve your application''s performance, identify errors, and gain insight into your user''s behavior and experience. (see below for nested schema)'
            session_replay: '(Block List, Min: 1, Max: 1) Session Replay captures all user interactions within your application and replays them in a movie-like experience while providing best-in-class security and data protection. (see below for nested schema)'
            terraform-provider-dynatrace -export dynatrace_web_app_enablement: downloads all existing web application enablement and cost control configuration
        importStatements: []
    dynatrace_web_app_key_performance_custom Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_key_performance_custom Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_key_performance_custom Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.key-performance-metric-custom-actions: )
            frustrating_threshold_seconds: (Number) If User action duration is above this value, the action is assigned to the Frustrated performance zone.
            id: (String) The ID of this resource.
            scope: (String) The scope of this setting (APPLICATION_METHOD, APPLICATION)
            terraform-provider-dynatrace -export dynatrace_web_app_key_performance_custom: downloads all existing apdex threshold configuration for custom actions
            thresholds: '(Block List, Min: 1, Max: 1) User action duration thresholds (see below for nested schema)'
            tolerated_threshold_seconds: (Number) If User action duration is below this value, the action is assigned to the Satisfied performance zone.
        importStatements: []
    dynatrace_web_app_key_performance_load Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_key_performance_load Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_key_performance_load Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.key-performance-metric-load-actions: )
            fallback_thresholds: '(Block List, Max: 1) If the selected key performance metric is not detected, the User action duration metric is used instead. (see below for nested schema)'
            frustrating_fallback_threshold_seconds: (Number) If User action duration is above this value, the action is assigned to the Frustrated performance zone.
            frustrating_threshold_seconds: (Number) If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
            id: (String) The ID of this resource.
            kpm: '(String) Possible Values: CUMULATIVE_LAYOUT_SHIFT, DOM_INTERACTIVE, FIRST_INPUT_DELAY, LARGEST_CONTENTFUL_PAINT, LOAD_EVENT_END, LOAD_EVENT_START, RESPONSE_END, RESPONSE_START, SPEED_INDEX, USER_ACTION_DURATION, VISUALLY_COMPLETE'
            scope: (String) The scope of this setting (APPLICATION_METHOD, APPLICATION)
            terraform-provider-dynatrace -export dynatrace_web_app_key_performance_load: downloads all existing apdex threshold configuration for load actions
            thresholds: '(Block List, Min: 1, Max: 1) Set the Tolerating and Frustrated performance thresholds for this action type. (see below for nested schema)'
            tolerated_fallback_threshold_seconds: (Number) If User action duration is below this value, the action is assigned to the Satisfied performance zone.
            tolerated_threshold_seconds: (Number) If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
        importStatements: []
    dynatrace_web_app_key_performance_xhr Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_key_performance_xhr Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_key_performance_xhr Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.key-performance-metric-xhr-actions: )
            fallback_thresholds: '(Block List, Max: 1) If the selected key performance metric is not detected, the User action duration metric is used instead. (see below for nested schema)'
            frustrating_fallback_threshold_seconds: (Number) If User action duration is above this value, the action is assigned to the Frustrated performance zone.
            frustrating_threshold_seconds: (Number) If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
            id: (String) The ID of this resource.
            kpm: '(String) Possible Values: RESPONSE_END, RESPONSE_START, USER_ACTION_DURATION, VISUALLY_COMPLETE'
            scope: (String) The scope of this setting (APPLICATION_METHOD, APPLICATION)
            terraform-provider-dynatrace -export dynatrace_web_app_key_performance_xhr: downloads all existing apdex threshold configuration for XHR actions
            thresholds: '(Block List, Min: 1, Max: 1) Set the Tolerating and Frustrated performance thresholds for this action type. (see below for nested schema)'
            tolerated_fallback_threshold_seconds: (Number) If User action duration is below this value, the action is assigned to the Satisfied performance zone.
            tolerated_threshold_seconds: (Number) If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
        importStatements: []
    dynatrace_web_app_request_errors Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_request_errors Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_request_errors Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.request-errors: )
            capture: (Boolean) Capture this error
            capture_settings: '(Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)'
            consider_csp_violations: (Boolean) Match by errors that have CSP violations
            consider_failed_images: (Boolean) Match by errors that have failed image requests
            consider_for_ai: (Boolean) View more details
            error_codes: (String) Match by error code
            error_rule: '(Block List, Min: 1) (see below for nested schema)'
            error_rules: '(Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)'
            filter: '(String) Possible Values: BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS'
            filter_settings: '(Block List, Min: 1, Max: 1) Filter settings (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_request_errors_in_apdex_calculation: (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
            impact_apdex: (Boolean) Include error in Apdex calculations
            scope: (String) The scope of this setting (APPLICATION)
            terraform-provider-dynatrace -export dynatrace_web_app_request_errors: downloads all existing request error configuration
            url: (String) no documentation available
        importStatements: []
    dynatrace_web_app_resource_cleanup Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_app_resource_cleanup Resource - terraform-provider-dynatrace
        title: dynatrace_web_app_resource_cleanup Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.resource-cleanup-rules: )
            id: (String) The ID of this resource.
            name: '(String) For example: Mask journeyId'
            regular_expression: '(String) For example: (.*)(journeyId=)-?\d+(.*)'
            replace_with: '(String) For example: $1$2\*$3'
            terraform-provider-dynatrace -export dynatrace_web_app_resource_cleanup: downloads all existing resource URL cleanup rules configuration
        importStatements: []
    dynatrace_web_application Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_application Resource - terraform-provider-dynatrace
        title: dynatrace_web_application Resource - terraform-provider-dynatrace
        argumentDocs:
            AVERAGE: ', FIRST, LAST, MAXIMUM, MINIMUM and SUM.'
            EXTRACT_BY_REGULAR_EXPRESSION: ': Extracts the part of the string that matches the regularExpression.'
            REPLACE_IDS: ': Replaces all IDs and UUIDs with the specified replacement. Possible values are EXTRACT_BY_REGULAR_EXPRESSION, REPLACEMENT, REPLACE_IDS, REPLACE_WITH_PATTERN, REPLACE_WITH_REGULAR_EXPRESSION and SUBSTRING.'
            REPLACE_WITH_PATTERN: ': Replaces the patternToReplace with the specified replacement.'
            REPLACE_WITH_REGULAR_EXPRESSION: ': Replaces all occurrences that match regularExpression with the specified replacement.'
            REPLACEMENT: ': Replaces the string between patternBefore and patternAfter with the specified replacement.'
            SUBSTRING: ': Extracts the string between patternBefore and patternAfter.'
            action: '(Block Set, Min: 1) Configuration of the key user action (see below for nested schema)'
            action_type: (String) Type of the action to which the rule applies. Possible values are Custom, Load and Xhr.
            active_x_object: (Boolean) ActiveXObject support enabled/disabled
            add_cross_origin_anonymous_attribute: (Boolean) Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
            additional_event_captured_as_user_input: (String) Additional events to be captured globally as user input.
            additional_event_handlers: '(Block List, Max: 1) Additional event handlers and wrappers (see below for nested schema)'
            address: (String) The IP address to be mapped.
            address_to: (String) The to address of the IP address range.
            advanced_javascript_tag_settings: '(Block List, Max: 1) Advanced JavaScript tag settings (see below for nested schema)'
            aggregation: (String) The aggregation type of the property.
            angular: (Boolean) AngularJS and Angular support enabled/disabled
            angular_package_name: (String) The name of the angular package
            blur: (Boolean) Blur event handler enabled/disabled
            browser_restriction_settings: '(Block List, Max: 1) Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode (see below for nested schema)'
            browser_type: (String) The type of the browser that is used. Possible values are ANDROID_WEBKIT, BOTS_SPIDERS, CHROME, EDGE, FIREFOX, INTERNET_EXPLORER, OPERAandSAFARI`
            browser_version: (String) The version of the browser that is used
            cache_control_header_optimizations: (Boolean) Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
            capture: (Block List) Java script agent meta data capture settings (see below for nested schema)
            capturing_name: (String) The name of the meta data to capture
            case_sensitive: (Boolean) The match is case-sensitive (true) or (false)
            change: (Boolean) Change event handler enabled/disabled
            cleanup_rule: (String) The cleanup rule of the property.
            click: (Boolean) Click event handler enabled/disabled
            comparator: (String) No documentation available. Possible values are EQUALS, GREATER_THAN_OR_EQUAL and LOWER_THAN_OR_EQUAL.
            condition: '(Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)'
            conditions: '(Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)'
            content_capture: '(Block List, Min: 1, Max: 1) Settings for content capture (see below for nested schema)'
            conversion_goals: '(Block List, Max: 1) A list of conversion goals of the application (see below for nested schema)'
            cookie_placement_domain: (String) Domain for cookie placement. Maximum 150 characters.
            correlation_header_inclusion_regex: (String) To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (x-dtc) to each such request to the respective endpoints in AWS.
            cost_control_percentage: (Number) (Field has overlap with dynatrace_web_app_enablement) Session replay sampling rating in percent
            cost_control_user_session_percentage: (Number) (Field has overlap with dynatrace_web_app_enablement) Analize X% of user sessions
            css_resource_capturing_exclusion_rules: (List of String) (Field has overlap with dynatrace_session_replay_resource_capture) A list of URLs to be excluded from CSS resource capturing
            custom_action_apdex_settings: '(Block List, Min: 1, Max: 1) Defines the Custom Action Apdex settings of an application (see below for nested schema)'
            custom_action_naming_rules: '(Block List, Max: 1) User action naming rules for custom actions (see below for nested schema)'
            custom_configuration_properties: (String) The location to send monitoring data from the JavaScript tag.
            destination: '(Block List, Max: 1) Configuration of a destination-based conversion goal (see below for nested schema)'
            display_name: (String) The display name of the property
            dojo: (Boolean) Dojo support enabled/disabled
            domain: (String) The domain where the action is performed.
            doubleclick: (Boolean) DoubleClick enabled/disabled
            duration: (Number) The duration of session to hit the conversion goal, in milliseconds
            enable_css_resource_capturing: (Boolean) (Field has overlap with dynatrace_session_replay_resource_capture) Capture (true) or don't capture (false) CSS resources from the session
            enabled: (Boolean) fetch() request capture enabled/disabled
            event_wrapper_settings: '(Block List, Max: 1) In addition to the event handlers, events called using addEventListener or attachEvent can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page (see below for nested schema)'
            exclude_url_regex: (String) A RegularExpression used to exclude images and iframes from being detected by the VC module
            exclude_xhr_regex: (String) You can exclude some actions from becoming XHR actions.
            extjs: (Boolean) ExtJS, Sencha Touch support enabled/disabled
            fallback_to_input: '(Boolean) If set to true: Returns the input if patternBefore or patternAfter cannot be found and the type is SUBSTRING. Returns the input if regularExpression doesn''t match and type is EXTRACT_BY_REGULAR_EXPRESSION.'
            fetch_requests: (Boolean) fetch() request capture enabled/disabled
            frustrating_fallback_threshold: (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
            frustrating_threshold: (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
            global_event_capture_settings: '(Block List, Max: 1) Global event capture settings (see below for nested schema)'
            goal: '(Block List, Min: 1) A conversion goal of the application (see below for nested schema)'
            html_pattern: (String) The HTML pattern of the java script injection
            icefaces: (Boolean) ICEfaces support enabled/disabled
            id: (String) The ID of this resource.
            ignore_case: (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
            ignored_mutations_list: (String) Query selector for mutation nodes to ignore in VC and SI calculation
            inactivity_timeout: (Number) The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
            injection_mode: (String) Possible valures are CODE_SNIPPET, CODE_SNIPPET_ASYNC, INLINE_CODE and JAVASCRIPT_TAG.
            input: (String) The input for the place holder. Possible values are ELEMENT_IDENTIFIER, INPUT_TYPE, METADATA, PAGE_TITLE, PAGE_URL, SOURCE_URL, TOP_XHR_URL and XHR_URL
            instrument_unsupported_ajax_frameworks: (Boolean) Instrumentation of unsupported Ajax frameworks enabled/disabled
            instrumentation_delay: (Number) Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
            ip_address_restriction_settings: '(Block List, Max: 1) Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode (see below for nested schema)'
            javascript_errors: (Boolean) JavaScript errors monitoring enabled/disabled
            javascript_framework_support: '(Block List, Max: 1) Support of various JavaScript frameworks (see below for nested schema)'
            javascript_injection_rules: '(Block List, Max: 1) Java script injection rules (see below for nested schema)'
            jquery: (Boolean) jQuery, Backbone.js support enabled/disabled
            key: (String) Key of the property
            key_user_actions: (Block List) User Action names to be flagged as Key User Actions (see below for nested schema)
            keydown: (Boolean) KeyDown enabled/disabled
            keyup: (Boolean) KeyUp enabled/disabled
            library_file_location: (String) The location of your application’s custom JavaScript library file.
            load_action_apdex_settings: '(Block List, Min: 1, Max: 1) Defines the Load Action Apdex settings of an application (see below for nested schema)'
            load_action_key_performance_metric: (String) The key performance metric of load actions. Possible values are ACTION_DURATION, CUMULATIVE_LAYOUT_SHIFT, DOM_INTERACTIVE, FIRST_INPUT_DELAY, LARGEST_CONTENTFUL_PAINT, LOAD_EVENT_END, LOAD_EVENT_START, RESPONSE_END, RESPONSE_START, SPEED_INDEX and VISUALLY_COMPLETE
            load_action_naming_rules: '(Block List, Max: 1) User action naming rules for loading actions (see below for nested schema)'
            long_string_length: (Number) If the type is LONG_STRING, the max length for this property. Must be a multiple of 100. Defaults to 200. Maximum is 1000.
            match_entity: (String) The type of the entity to which the rule applies. Possible values are ActionName, CssSelector, JavaScriptVariable, MetaTag, PagePath, PageTitle, PageUrl, UrlAnchor and XhrUrl.
            match_type: (String) The operator of the match. Possible values are Begins, Contains and Ends.
            max_action_name_length: (Number) Maximum character length for action names. Valid values range from 5 to 10000.
            max_dom_nodes: (Number) Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
            max_errors_to_capture: (Number) Maximum number of errors to be captured per page. Valid values range from 0 to 50.
            meta_data_capture_settings: '(Block List, Max: 1) Java script agent meta data capture settings (see below for nested schema)'
            metadata_id: (Number) If the origin is META_DATA, metaData id of the property
            mode: (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
            monitoring_data_path: (String) The location to send monitoring data from the JavaScript tag.
            monitoring_settings: '(Block List, Min: 1, Max: 1) Real user monitoring settings (see below for nested schema)'
            moo_tools: (Boolean) MooTools support enabled/disabled
            mousedown: (Boolean) MouseDown enabled/disabled
            mouseup: (Boolean) Mouseup event handler enabled/disabled
            mutation_timeout: (Number) Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
            name: (String) The name of the web application, displayed in the UI
            non_w3c_resource_timings: (Boolean) Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
            num_user_actions: (Number) The number of user actions to hit the conversion goal
            operand1: (String) Must be a defined placeholder wrapped in curly braces
            operand2: (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
            operator: (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
            origin: (String) The origin of the property. Possible values are JAVASCRIPT_API, META_DATA and SERVER_SIDE_REQUEST_ATTRIBUTE.
            pattern_after: (String) The pattern after the required value. It will be removed.
            pattern_after_search_type: (String) The required occurrence of patternAfter. Possible values are FIRST and LAST.
            pattern_before: (String) The pattern before the required value. It will be removed.
            pattern_before_search_type: (String) The required occurrence of patternBefore. Possible values are FIRST and LAST.
            pattern_to_replace: (String) The pattern to be replaced.
            placeholder: '(Block List, Min: 1) User action placeholders (see below for nested schema)'
            placeholders: '(Block List, Max: 1) User action placeholders (see below for nested schema)'
            platform: (String) The platform on which the browser is being used. Possible values are ALL, DESKTOP and MOBILE
            processing_part: (String) The part to process. Possible values are ALL, ANCHOR and PATH
            processing_steps: '(Block List, Max: 1) The processing step settings (see below for nested schema)'
            property: (Block List) User action and session properties settings (see below for nested schema)
            prototype: (Boolean) Prototype support enabled/disabled
            public_metadata: (Boolean) true if this metadata should be captured regardless of the privacy settings, false otherwise
            query_parameter_cleanups: (Set of String) User action naming rules for custom actions. If not specified Dynatrace assumes __sid, cfid, cftoken, phpsessid and sid.
            range: '(Block List, Min: 1) The IP address or the IP address range to be mapped to the location (see below for nested schema)'
            real_user_monitoring_enabled: (Boolean) (Field has overlap with dynatrace_web_app_enablement) Real user monitoring enabled/disabled
            regular_expression: (String) A regular expression for the string to be extracted or replaced. Only applicable if the type is EXTRACT_BY_REGULAR_EXPRESSION or REPLACE_WITH_REGULAR_EXPRESSION.
            replacement: (String) Replacement for the original value
            resource_browser_caching_threshold: (Number) Warn about resources with a lower browser cache rate above X%. Values between 1 and 100 are allowed.
            resource_timing_capture_type: (String) Defines how detailed resource timings are captured.
            resource_timing_settings: '(Block List, Max: 1) Settings for resource timings capture (see below for nested schema)'
            resource_timings_domain_limit: (Number) Limits the number of domains for which W3C resource timings are captured.
            resources_threshold: (Number) Warn about resources larger than X bytes. Values between 0 and 99999000 are allowed.
            restriction: '(Block List, Min: 1) Browser exclusion rules for the browsers that are to be excluded (see below for nested schema)'
            restrictions: '(Block List, Max: 1) A list of browser restrictions (see below for nested schema)'
            rule: '(Block List, Min: 1) Java script injection rule (see below for nested schema)'
            script_tag_cache_duration_in_hours: (Number) Time duration for the cache settings
            scroll: (Boolean) Scroll enabled/disabled
            secure_cookie_attribute: (Boolean) Secure attribute usage for Dynatrace cookies enabled/disabled
            server_request_path_id: (String) Path to identify the server’s request ID. Maximum 150 characters.
            server_side_request_attribute: (String) The ID of the request attribute.
            session_replay_config: '(Block List, Max: 1) Settings regarding Session Replay (see below for nested schema)'
            slow_cnd_resources_threshold: (Number) Warn about slow CDN resources with a response time above X ms. Values between 0 and 99999000 are allowed.
            slow_first_party_resources_threshold: (Number) Warn about slow 1st party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
            slow_third_party_resources_threshold: (Number) Warn about slow 3rd party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
            special_characters_to_escape: (String) Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are ^, \, < and >.
            speed_index_visually_complete_ratio_threshold: (Number) Warn if Speed index exceeds X % of Visually complete. Values between 1 and 99 are allowed.
            split_user_actions_by_domain: (Boolean) Deactivate this setting if different domains should not result in separate user actions
            step: '(Block List, Min: 1) The processing step (see below for nested schema)'
            store_as_session_property: (Boolean) If true, the property is stored as a session property
            store_as_user_action_property: (Boolean) If true, the property is stored as a user action property
            subnet_mask: (Number) The subnet mask of the IP address range. Valid values range from 0 to 128.
            sync_beacon_firefox: (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
            sync_beacon_internet_explorer: (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
            tag: '(Block List, Min: 1) User tag settings (see below for nested schema)'
            target: (String) The target against which the rule of the java script injection should be matched. Possible values are PAGE_QUERY and URL.
            template: (String) Naming pattern. Use Curly brackets {} to select placeholders
            temporary_action_limit: (Number) Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
            temporary_action_total_timeout: (Number) The total timeout of all cascaded timeouts that should still be able to create a temporary action
            terraform-provider-dynatrace -export dynatrace_web_application: downloads all existing web application configuration
            threshold: (Number) no documentation available
            timed_action_support: (Boolean) Timed action support enabled/disabled.
            timeout_settings: '(Block List, Max: 1) Settings for timed action capture (see below for nested schema)'
            to_string_method: (Boolean) toString method enabled/disabled
            tolerated_fallback_threshold: (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
            tolerated_threshold: (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
            touch_end: (Boolean) TouchEnd enabled/disabled
            touch_start: (Boolean) TouchStart enabled/disabled
            type: (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
            uncompressed_resources_threshold: (Number) Warn about uncompressed resources larger than X bytes. Values between 0 and 99999 are allowed.
            unique_id: (Number) The unique ID of the meta data to capture
            url_injection_pattern: (String) URL injection pattern for manual web application
            url_operator: (String) The url operator of the java script injection. Possible values are ALL_PAGES, CONTAINS, ENDS_WITH, EQUALS and STARTS_WITH.
            url_or_path: (String) The path to be reached to hit the conversion goal
            url_pattern: (String) The url pattern of the java script injection
            use_first_detected_load_action: (Boolean) First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
            use_guessed_element_identifier: (Boolean) Use the element identifier that was selected by Dynatrace
            use_last_value: (Boolean) true if the last captured value should be used for this metadata. By default the first value will be used.
            use_mouse_up_event_for_clicks: (Boolean) Use mouseup event for clicks enabled/disabled
            use_or_conditions: (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
            user_action: '(Block List, Max: 1) Configuration of a destination-based conversion goal (see below for nested schema)'
            user_action_and_session_properties: '(Block List, Max: 1) User action and session properties settings (see below for nested schema)'
            user_action_naming_settings: '(Block List, Max: 1) The settings of user action naming (see below for nested schema)'
            user_tags: '(Block List, Max: 1) User tags settings (see below for nested schema)'
            value: (String) The value to be matched to hit the conversion goal
            visit_duration: '(Block List, Max: 1) Configuration of a destination-based conversion goal (see below for nested schema)'
            visit_num_action: '(Block List, Max: 1) Configuration of a destination-based conversion goal (see below for nested schema)'
            visually_complete_and_speed_index: (Boolean) Visually complete and Speed index support enabled/disabled
            visually_complete_settings: '(Block List, Max: 1) Settings for VisuallyComplete (see below for nested schema)'
            w3c_resource_timings: (Boolean) W3C resource timings for third party/CDN enabled/disabled
            waterfall_settings: '(Block List, Min: 1, Max: 1) These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources (see below for nested schema)'
            xhr_action_apdex_settings: '(Block List, Min: 1, Max: 1) Defines the XHR Action Apdex settings of an application (see below for nested schema)'
            xhr_action_key_performance_metric: (String) The key performance metric of XHR actions. Possible values are ACTION_DURATION, RESPONSE_END, RESPONSE_START and VISUALLY_COMPLETE.
            xhr_action_naming_rules: '(Block List, Max: 1) User action naming rules for XHR actions (see below for nested schema)'
            xml_http_request: (Boolean) XmlHttpRequest support enabled/disabled
        importStatements: []
    dynatrace_web_beacon_origins Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_beacon_origins Resource - terraform-provider-dynatrace
        title: dynatrace_web_beacon_origins Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.beacon-domain-origins: )
            id: (String) The ID of this resource.
            matcher: '(String) Possible Values: CONTAINS, ENDS_WITH, EQUALS, STARTS_WITH'
            pattern: (String) Pattern
            terraform-provider-dynatrace -export dynatrace_web_beacon_origins: downloads all existing beacon origin allowlist configuration
        importStatements: []
    dynatrace_web_javascript_updates Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_javascript_updates Resource - terraform-provider-dynatrace
        title: dynatrace_web_javascript_updates Resource - terraform-provider-dynatrace
        argumentDocs:
            application_id: (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
            builtin:rum.web.rum-javascript-updates: )
            id: (String) The ID of this resource.
            javascript_version: '(String) Possible Values: CUSTOM, LATEST_IE7_10_SUPPORTED, LATEST_STABLE, PREVIOUS_STABLE'
            terraform-provider-dynatrace -export dynatrace_web_javascript_updates: downloads existing Javascript updates configuration
        importStatements: []
    dynatrace_web_javascript_version Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_javascript_version Resource - terraform-provider-dynatrace
        title: dynatrace_web_javascript_version Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.custom-rum-javascript-version: )
            custom_javascript_version: (String) Choose custom version
            id: (String) The ID of this resource.
            terraform-provider-dynatrace -export dynatrace_web_javascript_version: downloads existing Javascript version configuration
        importStatements: []
    dynatrace_web_resource_types Resource - terraform-provider-dynatrace:
        subCategory: Web Applications
        description: The resource
        name: dynatrace_web_resource_types Resource - terraform-provider-dynatrace
        title: dynatrace_web_resource_types Resource - terraform-provider-dynatrace
        argumentDocs:
            builtin:rum.web.resource-types: )
            id: (String) The ID of this resource.
            primary_resource_type: '(String) Possible Values: CSS, IMAGE, OTHER, SCRIPT'
            regular_expression: (String) The regular expression to detect the resource.
            secondary_resource_type: (String) The secondary type of the resource.
            terraform-provider-dynatrace -export dynatrace_web_resource_types: downloads all existing resource type configuration
        importStatements: []
    dynatrace_webhook_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_webhook_notification Resource - terraform-provider-dynatrace
        title: dynatrace_webhook_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            access_token_url: (String) Access token URL
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            builtin:problem.notifications: )
            client_id: (String) Client ID
            client_secret: (String) Client secret
            header: '(Block Set, Min: 1) An additional HTTP Header to include when sending requests (see below for nested schema)'
            headers: '(Block List, Max: 1) A list of the additional HTTP headers (see below for nested schema)'
            id: (String) The ID of this resource.
            insecure: (Boolean) Accept any, including self-signed and invalid, SSL certificate (true) or only trusted (false) certificates
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            name: (String) The name of the notification configuration
            notify_closed_problems: (Boolean) Send email if problem is closed
            notify_event_merges: (Boolean) Call webhook if new events merge into existing problems
            oauth_2_credentials: '(Block List, Max: 1) To authenticate your integration, the OAuth 2.0 Client Credentials Flow (Grant Type) is used. For details see Client Credentials Flow).'
            payload: '(String) The content of the notification message. You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsHTML}: All problem event details, including root cause, as an HTML-formatted string.  * {ProblemDetailsJSON}: All problem event details, including root cause, as a JSON object.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            profile: (String) The ID of the associated alerting profile
            scope: (String) The scope of access you are requesting
            secret_value: (String, Sensitive) The value of the HTTP header as a sensitive property. May contain an empty value. secret_value and value are mutually exclusive. Only one of those two is allowed to be specified.
            terraform-provider-dynatrace -export dynatrace_webhook_notification: downloads the existing problem notifications via Web Hook
            url: (String) The URL of the WebHook endpoint
            use_oauth_2: (Boolean) Use OAuth 2.0 for authentication
            value: (String) The value of the HTTP header. May contain an empty value. secret_value and value are mutually exclusive. Only one of those two is allowed to be specified.
        importStatements: []
    dynatrace_xmatters_notification Resource - terraform-provider-dynatrace:
        subCategory: Notifications
        description: The resource
        name: dynatrace_xmatters_notification Resource - terraform-provider-dynatrace
        title: dynatrace_xmatters_notification Resource - terraform-provider-dynatrace
        argumentDocs:
            active: (Boolean) The configuration is enabled (true) or disabled (false)
            builtin:problem.notifications: )
            header: '(Block Set, Min: 1) An additional HTTP Header to include when sending requests (see below for nested schema)'
            headers: '(Block List, Max: 1) A list of the additional HTTP headers (see below for nested schema)'
            id: (String) The ID of this resource.
            insecure: (Boolean) Accept any, including self-signed and invalid, SSL certificate (true) or only trusted (false) certificates
            legacy_id: (String) The ID of these settings when referred to from resources requiring the REST API V1 keys
            name: (String) The name of the notification configuration
            payload: '(String) The content of the notification message. You can use the following placeholders:  * {ImpactedEntities}: Details about the entities impacted by the problem in form of a JSON array.  * {ImpactedEntity}: The entity impacted by the problem or X impacted entities.  * {PID}: The ID of the reported problem.  * {ProblemDetailsHTML}: All problem event details, including root cause, as an HTML-formatted string.  * {ProblemDetailsJSON}: All problem event details, including root cause, as a JSON object.  * {ProblemDetailsMarkdown}: All problem event details, including root cause, as a Markdown-formatted string.  * {ProblemDetailsText}: All problem event details, including root cause, as a text-formatted string.  * {ProblemID}: The display number of the reported problem.  * {ProblemImpact}: The impact level of the problem. Possible values are APPLICATION, SERVICE, and INFRASTRUCTURE.  * {ProblemSeverity}: The severity level of the problem. Possible values are AVAILABILITY, ERROR, PERFORMANCE, RESOURCE_CONTENTION, and CUSTOM_ALERT.  * {ProblemTitle}: A short description of the problem.  * {ProblemURL}: The URL of the problem within Dynatrace.  * {State}: The state of the problem. Possible values are OPEN and RESOLVED.  * {Tags}: The list of tags that are defined for all impacted entities, separated by commas'
            profile: (String) The ID of the associated alerting profile
            secret_value: (String, Sensitive) The value of the HTTP header as a sensitive property. May contain an empty value. secret_value and value are mutually exclusive. Only one of those two is allowed to be specified.
            terraform-provider-dynatrace -export dynatrace_xmatters_notification: downloads the existing problem notifications for xMatters
            url: (String) The URL of the WebHook endpoint
            value: (String) The value of the HTTP header. May contain an empty value. secret_value and value are mutually exclusive. Only one of those two is allowed to be specified.
        importStatements: []
